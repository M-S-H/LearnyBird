{"version":3,"sources":["webpack:///static/js/vendor.fe307f726d50eab6d6b7.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/babel-runtime/helpers/classCallCheck.js","webpack:///./~/babel-runtime/helpers/createClass.js","webpack:///./~/core-js/library/modules/_descriptors.js","webpack:///./~/core-js/library/modules/_is-object.js","webpack:///./~/synaptic/src/layer.js","webpack:///./~/synaptic/src/network.js","webpack:///./~/synaptic/src/neuron.js","webpack:///./~/synaptic/src/trainer.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/vue/dist/vue.esm.js","webpack:///./~/core-js/library/modules/_core.js","webpack:///./~/core-js/library/modules/_fails.js","webpack:///./~/core-js/library/modules/_global.js","webpack:///./~/core-js/library/modules/_object-dp.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/babel-runtime/core-js/object/define-property.js","webpack:///./~/core-js/library/fn/object/define-property.js","webpack:///./~/core-js/library/modules/_a-function.js","webpack:///./~/core-js/library/modules/_an-object.js","webpack:///./~/core-js/library/modules/_ctx.js","webpack:///./~/core-js/library/modules/_dom-create.js","webpack:///./~/core-js/library/modules/_export.js","webpack:///./~/core-js/library/modules/_hide.js","webpack:///./~/core-js/library/modules/_ie8-dom-define.js","webpack:///./~/core-js/library/modules/_property-desc.js","webpack:///./~/core-js/library/modules/_to-primitive.js","webpack:///./~/core-js/library/modules/es6.object.define-property.js","webpack:///./~/lodash/lodash.js","webpack:///./~/synaptic/src/architect.js","webpack:///./~/synaptic/src/synaptic.js","webpack:///./~/vue-router/dist/vue-router.esm.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","__webpack_require__","__esModule","default","instance","Constructor","TypeError","_defineProperty","_defineProperty2","obj","defineProperties","target","props","length","descriptor","configurable","writable","key","protoProps","staticProps","prototype","a","it","Layer","size","label","this","list","connectedTo","neuron","Neuron","push","Network","activate","input","activations","Error","id","activation","propagate","rate","project","layer","type","weights","layers","connected","connection","gate","gateType","INPUT","to","gater","connections","inputs","gated","ID","OUTPUT","from","projected","ONE_TO_ONE","gatedfrom","selfconnected","here","there","connectionType","ALL_TO_ALL","clear","reset","neurons","add","set","options","squash","bias","fromLayer","toLayer","uid","selfconnection","ALL_TO_ELSE","call","hidden","output","optimized","Trainer","optimize","reverse","unit","restore","inputLayer","outputLayer","that","propagation_sentences","hardcode","memory","variables","value","currentLayer","activation_sentences","currentNeuron","join","trace_sentences","outputs","targets","split","constructor","Function","network","data","trace","check_activation","check_propagation","getValue","args","Array","slice","arguments","shift","prop","pop","property","state","old","elegibility","extended","j","weight","gain","hiddenLayer","setOptimize","bool","toJSON","ignoreTraces","ids","copy","LOGISTIC","TANH","IDENTITY","HLIM","RELU","toDot","edgeConnection","code","concat","layerTo","layerID","indexOf","layerToID","fakeNode","layerfrom","layerfromID","link","escape","replace","standalone","sentence","match","dimension","address","tmp","substring","index","worker","workerOptions","iterations","error","cost","crossValidate","costFunction","MSE","workerFunction","getWorkerSharedFunctions","toString","JSON","stringify","workerSourceCode","blob","Blob","blobURL","window","URL","createObjectURL","Worker","clone","fromJSON","_SHARED_WORKER_FUNCTIONS","train_f","train","_trainSet_f","_trainSet","test_f","test","json","config","responsibility","influences","neighboors","Math","random","derivative","influence","incoming","xtrace","gradient","result","store_activation","store_trace","store_propagation","varID","__count","__neuron","allocate","store","getVar","buildSentence","isEmpty","hasOwnProperty","noProjections","noGates","isInput","isOutput","self_gain","self_weight","input_activation","input_weight","input_gain","eP","eN","neuron_old","initialized","incoming_weight","incoming_activation","neuron_self_weight","neuron_self_gain","connection_weight","neuron_responsibility","connection_gain","neuron_activation","x","derivate","exp","fx","pow","quantity","shuffleInplace","o","floor","currentRate","testSet","trainSet","bucketSize","abort","start","Date","now","schedule","customLog","console","log","testSize","testError","isArray","numTrain","ceil","lastError","currentSetSize","currentBucket","every","do","shuffle","time","trainAsync","workerTrain","bind","Promise","resolve","reject","e","errorSum","callback","suppressWarning","warn","onmessage","action","message","ownership","memoryBuffer","terminate","scheduled","postMessage","XOR","defaults","DSR","trial","correct","success","distractors","prompts","criterion","CROSS_ENTROPY","symbols","noRepeat","range","avoid","number","used","sequence","sequenceLength","any","indexes","positions","sort","distractorsCorrect","targetsCorrect","prediction","round","divideError","ERG","Node","connect","node","reberGrammar","n1","n2","n3","n4","n5","n6","embededReberGrammar","reber1","reber2","generate","next","str","ch","charAt","iteration","table","B","P","T","X","S","E","read","predict","array1","array2","max1","i1","max2","i2","timingTask","trainingSamples","trainSamples","testSamples","samples","trainingSize","t","n","k","trainingSet","crossentropy","mse","BINARY","misses","rawScriptExports","compiledTemplate","injectStyles","scopeId","moduleIdentifier","esModule","scriptExports","render","staticRenderFns","_scopeId","hook","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","functional","existing","beforeCreate","h","__webpack_exports__","global","isUndef","v","undefined","isDef","isTrue","isFalse","isPrimitive","isObject","isPlainObject","_toString","isRegExp","val","String","toNumber","parseFloat","isNaN","makeMap","expectsLowerCase","map","create","toLowerCase","remove","arr","item","splice","hasOwn","cached","fn","cache","ctx","boundFn","apply","_length","toArray","ret","extend","_from","toObject","res","noop","looseEqual","b","isObjectA","isObjectB","looseIndexOf","once","called","isReserved","c","charCodeAt","def","parsePath","path","bailRE","segments","handleError","err","vm","info","errorHandler","inBrowser","isNative","Ctor","pushTarget","_target","Dep","targetStack","popTarget","protoAugment","src","__proto__","copyAugment","keys","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","getOwnPropertyDescriptor","getter","setter","childOb","depend","dependArray","newVal","notify","max","del","mergeData","toVal","fromVal","mergeHook","parentVal","childVal","mergeAssets","normalizeProps","name","camelize","normalizeDirectives","dirs","directives","update","mergeOptions","child","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","$options","_props","getType","len","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","text","elm","componentOptions","ns","isStatic","isComment","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","cur","event","normalizeEvent","capture","passive","mergeVNodeHook","hookKey","wrappedHook","oldHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","last","_isVList","ensureCtor","comp","base","resolveAsyncComponent","factory","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reason","then","component","delay","setTimeout","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","resolveSlots","slots","defaultSlot","functionalContext","slot","isWhitespace","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","el","hydrating","$el","createEmptyVNode","callHook","updateComponent","_update","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","$emit","resetSchedulerState","queue","activatedChildren","has","waiting","flushing","flushSchedulerQueue","watcher","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdateHooks","devtools","emit","queueActivatedComponent","queueWatcher","nextTick","traverse","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","opts","initProps","methods","initMethods","initData","_data","computed","initComputed","watch","initWatch","propsOptions","isRoot","getData","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","evaluate","handler","createWatcher","$watch","initProvide","provide","_provided","initInjections","resolveInject","inject","forEach","hasSymbol","Reflect","ownKeys","provideKey","source","createFunctionalComponent","mergeProps","_context","d","createElement","injections","functionalOptions","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","mergeHooks","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","_parentElm","_refElm","inlineTemplate","hooksToMerge","fromParent","ours","componentVNodeHooks","mergeHook$1","one","two","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","domProps","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","initRender","renderContext","_c","$createElement","initInternalComponent","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","dedupe","Vue$3","_init","initUse","Vue","use","plugin","installed","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","current","filter","cachedNode","pruneCacheEntry","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","unknownElementCache","document","HTMLUnknownElement","HTMLElement","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","pushFilter","filters","lastFilterIndex","trim","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","p","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","modules","m","_","addProp","addAttr","addDirective","arg","addHandler","important","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","attrsMap","attrsList","genComponentModel","valueExpression","assignment","genAssignmentCode","modelRs","parseModel","idx","index$1","expressionPos","expressionEndPos","lastIndexOf","eof","chr","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","CHECKBOX_RADIO_TOKEN","selectedVal","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","isIE","isChrome","add$1","oldHandler","target$1","ev","remove$2","addEventListener","supportsPassive","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","normalizeStyleData","style","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","getAttribute","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","cb","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","s","Number","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","activeInstance","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","isMultiple","option","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","decode","html","decoder","innerHTML","decodeAttr","shouldDecodeNewlines","re","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","advance","parseEndTag","lowerCasedTagName","stack","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","stackedTag","reStackedTag","reCache","RegExp","endTagLength","rest","all","endTag","chars","textEnd","comment","commentEnd","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","IS_REGEX_CAPTURING_BROKEN","rest$1","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokens","lastIndex","exec","parse","template","endPre","element","pre","inVPre","platformIsPreTag","inPre","warn$2","platformGetTagNamespace","platformMustUseProp","isPreTag","preTransforms","transforms","postTransforms","root","currentParent","preserveWhitespace","guardIESVGBug","makeAttrsMap","isForbiddenTag","forbidden","processPre","processRawAttrs","processFor","processIf","processOnce","processKey","plain","processRef","processSlot","processComponent","i$1","processAttrs","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","i$2","lastNode","isTextTag","decodeHTMLCached","checkInFor","inMatch","forAliasRE","for","alias","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","staticInFor","staticRoot","walkThroughConditionsBlocks","conditionBlocks","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genKeyFilter","genFilterCode","keyVal","parseInt","bind$1","wrapData","ast","prevStaticRenderFns","currentStaticRenderFns","prevOnceCount","onceCount","currentOptions","warn$3","transforms$1","dataGenFns","platformDirectives$1","isPlatformReservedTag$1","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","genData","genChildren","genIfConditions","conditions","genTernaryExp","genDirectives","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","baseDirectives","inlineRenderFns","genScopedSlot","genForScopedSlot","scope","checkSkip","el$1","getNormalizationType","genNode","needsNormalization","some","maybeComponent","genText","transformSpecialNewlines","bind$$1","componentName","baseCompile","makeFunction","errors","transformNode","classBinding","genData$1","transformNode$1","styleBinding","genData$2","getOuterHTML","outerHTML","container","cloneNode","camelizeRE","toUpperCase","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","performance","ignoredElements","isReservedAttr","_lifecycleHooks","freeze","hasProto","UA","navigator","userAgent","isEdge","isAndroid","isIOS","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","prototypeAccessors","uid$2","expOrFn","deep","user","active","deps","newDeps","depIds","newDepIds","cleanupDeps","this$1","teardown","init","$mount","keepAlive","mountedNode","prepatch","insert","destroy","uid$1","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","cbs","prevEl","prevVnode","prevActiveInstance","__patch__","__vue__","$nextTick","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","patternTypes","KeepAlive","include","exclude","created","destroyed","builtInComponents","configDef","util","defineReactive","delete","version","testEl","acceptValue","svg","math","isHTMLTag","nodeOps","hooks","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","normalize","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","firstChild","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","parentElm$1","vmodel","model$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","platformComponents","content","encoded","div","singleAttrIdentifier","singleAttrAssign","singleAttrValues","ncname","qnameCapture","g","&lt;","&gt;","&quot;","&amp;","&#10;","regexEscapeRE","open","close","esc","tab","space","up","right","down","genGuard","stop","prevent","self","ctrl","alt","meta","middle","cloak","klass$1","style$1","modules$1","directives$1","baseOptions","reduce","ref$1","compile","finalOptions","tips","tip$$1","compiled","compileToFunctions","functionCompileCache","fnGenErrors","idToTemplate","mount","documentElement","core","__e","__g","anObject","IE8_DOM_DEFINE","toPrimitive","dP","f","O","Attributes","eval","$Object","desc","aFunction","is","hide","$export","own","out","IS_FORCED","F","IS_GLOBAL","G","IS_STATIC","IS_PROTO","IS_BIND","IS_WRAP","W","expProto","C","virtual","R","U","createDesc","object","bitmap","valueOf","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","pair","addSetEntry","func","thisArg","arrayAggregator","array","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","string","asciiWords","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","escapeStringChar","stringEscapes","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","done","mapToArray","overArg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsBreakRange","rsMathOpRange","rsBreak","rsCombo","rsLower","rsMisc","rsFitz","rsRegional","rsSurrPair","rsUpper","rsMiscLower","reOptMod","rsModifier","rsOptJoin","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","rsMiscUpper","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&#39;","\\","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","process","nodeUtil","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","isArr","isRight","arrLength","view","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","Hash","entries","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","Map","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","baseAt","skip","lower","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","getAllKeys","subValue","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","isFunction","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","baseMatchesProperty","baseMatches","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","newValue","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","criteria","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","buffer","allocUnsafe","cloneArrayBuffer","arrayBuffer","byteLength","Uint8Array","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","iterable","createBaseFor","createBind","wrapper","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","charsLength","createPartial","createRange","toFinite","createRelationalOperation","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setData","setWrapToString","createRound","precision","createToPairs","createWrap","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","convert","objProps","objLength","skipCtor","objCtor","othCtor","flatten","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","reference","updateWrapDetails","shortOut","count","lastCalled","stamp","nativeNow","remaining","rand","funcToString","chunk","compact","drop","dropRight","dropRightWhile","dropWhile","fill","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","separator","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","tail","take","takeRight","takeRightWhile","takeWhile","uniq","uniqBy","uniqWith","unzip","group","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","orderBy","reduceRight","negate","sample","sampleSize","after","before","curry","curryRight","debounce","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","cancel","clearTimeout","flush","debounced","isInvoking","flip","memoize","resolver","memoized","Cache","spread","throttle","wrap","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEqual","isEqualWith","isError","isFinite","nativeIsFinite","isInteger","isMatch","isMatchWith","isNumber","isMaskable","isNull","isNil","proto","objectCtorString","isSafeInteger","isUndefined","isWeakMap","isWeakSet","symIterator","remainder","isBinary","toSafeInteger","properties","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","isArrLike","unset","updateWith","valuesIn","clamp","inRange","floating","temp","upperFirst","endsWith","position","escapeRegExp","pad","strLength","padEnd","padStart","radix","nativeParseInt","repeat","limit","startsWith","settings","templateSettings","assignInWith","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","trimEnd","trimStart","truncate","omission","search","newEnd","unescape","cond","conforms","constant","defaultTo","matchesProperty","methodNames","noConflict","oldDash","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","prefix","idCounter","maxBy","mean","meanBy","min","minBy","sum","sumBy","pick","funcProto","coreJsData","IE_PROTO","Buffer","getPrototypeOf","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ArrayBuffer","ctorString","quote","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pull","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","find","findLast","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","defer","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assign","assignIn","assignWith","at","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","over","overEvery","overSome","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","entriesIn","extendWith","each","eachRight","first","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","Architect","Perceptron","level","trainer","LSTM","peepholes","hiddenToHidden","outputToHidden","outputToGates","inputToOutput","hiddenLayers","inputGate","forgetGate","memoryCell","outputGate","cell","Liquid","gates","connectionList","Hopfield","learn","patterns","feed","architecture","__WEBPACK_AMD_DEFINE_ARRAY__","Synaptic","oldSynaptic","ninja","resolveProps","route","params","resolveQuery","extraQuery","_parseQuery","parsedQuery","parseQuery","param","parts","stringifyQuery","encode","val2","createRoute","record","location","redirectedFrom","router","stringifyQuery$$1","fullPath","getFullPath","matched","formatMatch","_stringifyQuery","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","aVal","bVal","isIncludedRoute","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","findAnchor","_Vue","registerInstance","callVal","registerRouteInstance","_routerRoot","_router","history","_route","View","Link","beforeRouteEnter","beforeRouteLeave","resolvePath","relative","append","firstChar","segment","hashIndex","queryIndex","cleanPath","defaultDelimiter","delimiter","PATH_REGEXP","escaped","modifier","asterisk","optional","escapeGroup","escapeString","substr","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","encodeURIComponent","token","attachKeys","flags","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","endsWithDelimiter","fillParams","routeMsg","regexpCompileCache","createRouteMap","routes","oldPathList","oldPathMap","oldNameMap","pathList","pathMap","nameMap","addRouteRecord","matchAs","normalizedPath","normalizePath","pathToRegexpOptions","caseSensitive","regex","compileRouteRegex","instances","redirect","childMatchAs","aliasRoute","normalizeLocation","_normalized","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","_createRoute","paramNames","record$1","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","decodeURIComponent","setupScroll","saveScrollPosition","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","selector","normalizeOffset","getElementPosition","isValidPosition","normalizePosition","scrollTo","y","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","genKey","Time","toFixed","_key","pushState","url","replaceState","runQueue","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","records","guards","flatMapComponents","extractGuard","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","resolveAsyncComponents","hasAsync","resolvedDef","getLocation","pathname","checkFallback","ensureSlash","getHash","replaceHash","href","pushHash","registerHook","createHref","routerView","$route","_routerViewCache","inactive","routerViewDepth","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","exactActiveClass","$router","classes","globalActiveClass","linkActiveClass","globalExactActiveClass","linkExactActiveClass","activeClassFallback","exactActiveClassFallback","compareTarget","click","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","ua","History","ready","readyCbs","readyErrorCbs","errorCbs","listen","onReady","errorCb","onError","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","beforeHooks","postEnterCbs","resolveHooks","afterHooks","HTML5History","History$$1","expectScroll","go","fromRoute","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","beforeResolve","afterEach","back","forward","getMatchedComponents","normalizedTo","parentId","newStyles","media","sourceMap","part","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sourceRoot","mediaQuery","alreadyImportedModules","addStylesToDom","domStyle","stylesInDom","addStyle","createStyleElement","styleElement","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","childNodes","hasDocument","DEBUG","listToStyles","getElementsByTagName","_isProduction","newList","mayRemove","textStore","replacement"],"mappings":"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B,YACA9nB,EAAAwsB,WACAxsB,EAAApsD,UACAosD,EAAAigB,SACAjgB,EAAAkgB,cACAlgB,EAAAmgB,YACAngB,EAAA1zD,YACA0zD,EAAA8tB,gBACA9tB,EAAAitB,SACAjtB,EAAA7gD,SACA6gD,EAAAqrB,cACArrB,EAAAsrB,gBACAtrB,EAAAurB,kBACAvrB,EAAAkc,QACAlc,EAAAmc,aACAnc,EAAAoc,kBACApc,EAAAqc,aACArc,EAAAsc,QACAtc,EAAA/xC,UACA+xC,EAAAof,WACApf,EAAAqf,eACArf,EAAAsf,gBACAtf,EAAAia,WACAja,EAAAyc,eACAzc,EAAA0c,gBACA1c,EAAAyhB,QACAzhB,EAAAgvB,QACAhvB,EAAAivB,aACAjvB,EAAA2c,aACA3c,EAAAskB,aACAtkB,EAAAukB,eACAvkB,EAAA2sB,WACA3sB,EAAAnjB,WACAmjB,EAAAwrB,gBACAxrB,EAAA0rB,kBACA1rB,EAAA2rB,oBACA3rB,EAAAguB,UACAhuB,EAAAiuB,YACAjuB,EAAA4sB,aACA5sB,EAAA5a,YACA4a,EAAA6sB,SACA7sB,EAAA/oD,QACA+oD,EAAA4F,UACA5F,EAAArsD,OACAqsD,EAAAwkB,WACAxkB,EAAAykB,aACAzkB,EAAAnyC,WACAmyC,EAAAgoB,mBACAhoB,EAAA0hB,WACA1hB,EAAAmuB,SACAnuB,EAAA+tB,aACA/tB,EAAAlsB,UACAksB,EAAAkvB,YACAlvB,EAAAjzC,SACAizC,EAAA4f,UACA5f,EAAAooB,UACApoB,EAAAouB,QACApuB,EAAA0kB,UACA1kB,EAAA1qD,QACA0qD,EAAA0f,WACA1f,EAAAmvB,QACAnvB,EAAAktB,YACAltB,EAAAovB,aACApvB,EAAAqvB,YACArvB,EAAAiiB,WACAjiB,EAAAotB,gBACAptB,EAAA8sB,aACA9sB,EAAAupB,QACAvpB,EAAA2kB,UACA3kB,EAAAr+D,YACAq+D,EAAAqoB,cACAroB,EAAA4rB,QACA5rB,EAAAgd,WACAhd,EAAAid,aACAjd,EAAAkd,eACAld,EAAA6rB,UACA7rB,EAAA/yD,SACA+yD,E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","file":"static/js/vendor.fe307f726d50eab6d6b7.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _defineProperty = __webpack_require__(27);\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Thank's IE8 for his funny defineProperty\nmodule.exports = !__webpack_require__(12)(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// export\nif (module) module.exports = Layer;\n\n// import\nvar Neuron  = __webpack_require__(7)\n,   Network = __webpack_require__(6)\n\n/*******************************************************************************************\n                                            LAYER\n*******************************************************************************************/\n\nfunction Layer(size, label) {\n  this.size = size | 0;\n  this.list = [];\n  this.label = label || null;\n  this.connectedTo = [];\n\n  while (size--) {\n    var neuron = new Neuron();\n    this.list.push(neuron);\n  }\n}\n\nLayer.prototype = {\n\n  // activates all the neurons in the layer\n  activate: function(input) {\n\n    var activations = [];\n\n    if (typeof input != 'undefined') {\n      if (input.length != this.size)\n        throw new Error(\"INPUT size and LAYER size must be the same to activate!\");\n\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        var activation = neuron.activate(input[id]);\n        activations.push(activation);\n      }\n    } else {\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        var activation = neuron.activate();\n        activations.push(activation);\n      }\n    }\n    return activations;\n  },\n\n  // propagates the error on all the neurons of the layer\n  propagate: function(rate, target) {\n\n    if (typeof target != 'undefined') {\n      if (target.length != this.size)\n        throw new Error(\"TARGET size and LAYER size must be the same to propagate!\");\n\n      for (var id = this.list.length - 1; id >= 0; id--) {\n        var neuron = this.list[id];\n        neuron.propagate(rate, target[id]);\n      }\n    } else {\n      for (var id = this.list.length - 1; id >= 0; id--) {\n        var neuron = this.list[id];\n        neuron.propagate(rate);\n      }\n    }\n  },\n\n  // projects a connection from this layer to another one\n  project: function(layer, type, weights) {\n\n    if (layer instanceof Network)\n      layer = layer.layers.input;\n\n    if (layer instanceof Layer) {\n      if (!this.connected(layer))\n        return new Layer.connection(this, layer, type, weights);\n    } else\n      throw new Error(\"Invalid argument, you can only project connections to LAYERS and NETWORKS!\");\n\n\n  },\n\n  // gates a connection betwenn two layers\n  gate: function(connection, type) {\n\n    if (type == Layer.gateType.INPUT) {\n      if (connection.to.size != this.size)\n        throw new Error(\"GATER layer and CONNECTION.TO layer must be the same size in order to gate!\");\n\n      for (var id in connection.to.list) {\n        var neuron = connection.to.list[id];\n        var gater = this.list[id];\n        for (var input in neuron.connections.inputs) {\n          var gated = neuron.connections.inputs[input];\n          if (gated.ID in connection.connections)\n            gater.gate(gated);\n        }\n      }\n    } else if (type == Layer.gateType.OUTPUT) {\n      if (connection.from.size != this.size)\n        throw new Error(\"GATER layer and CONNECTION.FROM layer must be the same size in order to gate!\");\n\n      for (var id in connection.from.list) {\n        var neuron = connection.from.list[id];\n        var gater = this.list[id];\n        for (var projected in neuron.connections.projected) {\n          var gated = neuron.connections.projected[projected];\n          if (gated.ID in connection.connections)\n            gater.gate(gated);\n        }\n      }\n    } else if (type == Layer.gateType.ONE_TO_ONE) {\n      if (connection.size != this.size)\n        throw new Error(\"The number of GATER UNITS must be the same as the number of CONNECTIONS to gate!\");\n\n      for (var id in connection.list) {\n        var gater = this.list[id];\n        var gated = connection.list[id];\n        gater.gate(gated);\n      }\n    }\n    connection.gatedfrom.push({layer: this, type: type});\n  },\n\n  // true or false whether the whole layer is self-connected or not\n  selfconnected: function() {\n\n    for (var id in this.list) {\n      var neuron = this.list[id];\n      if (!neuron.selfconnected())\n        return false;\n    }\n    return true;\n  },\n\n  // true of false whether the layer is connected to another layer (parameter) or not\n  connected: function(layer) {\n    // Check if ALL to ALL connection\n    var connections = 0;\n    for (var here in this.list) {\n      for (var there in layer.list) {\n        var from = this.list[here];\n        var to = layer.list[there];\n        var connected = from.connected(to);\n        if (connected.type == 'projected')\n          connections++;\n      }\n    }\n    if (connections == this.size * layer.size)\n      return Layer.connectionType.ALL_TO_ALL;\n\n    // Check if ONE to ONE connection\n    connections = 0;\n    for (var neuron in this.list) {\n      var from = this.list[neuron];\n      var to = layer.list[neuron];\n      var connected = from.connected(to);\n      if (connected.type == 'projected')\n        connections++;\n    }\n    if (connections == this.size)\n      return Layer.connectionType.ONE_TO_ONE;\n  },\n\n  // clears all the neuorns in the layer\n  clear: function() {\n    for (var id in this.list) {\n      var neuron = this.list[id];\n      neuron.clear();\n    }\n  },\n\n  // resets all the neurons in the layer\n  reset: function() {\n    for (var id in this.list) {\n      var neuron = this.list[id];\n      neuron.reset();\n    }\n  },\n\n  // returns all the neurons in the layer (array)\n  neurons: function() {\n    return this.list;\n  },\n\n  // adds a neuron to the layer\n  add: function(neuron) {\n    this.neurons[neuron.ID] = neuron || new Neuron();\n    this.list.push(neuron);\n    this.size++;\n  },\n\n  set: function(options) {\n    options = options || {};\n\n    for (var i in this.list) {\n      var neuron = this.list[i];\n      if (options.label)\n        neuron.label = options.label + '_' + neuron.ID;\n      if (options.squash)\n        neuron.squash = options.squash;\n      if (options.bias)\n        neuron.bias = options.bias;\n    }\n    return this;\n  }\n}\n\n// represents a connection from one layer to another, and keeps track of its weight and gain\nLayer.connection = function LayerConnection(fromLayer, toLayer, type, weights) {\n  this.ID = Layer.connection.uid();\n  this.from = fromLayer;\n  this.to = toLayer;\n  this.selfconnection = toLayer == fromLayer;\n  this.type = type;\n  this.connections = {};\n  this.list = [];\n  this.size = 0;\n  this.gatedfrom = [];\n\n  if (typeof this.type == 'undefined')\n  {\n    if (fromLayer == toLayer)\n      this.type = Layer.connectionType.ONE_TO_ONE;\n    else\n      this.type = Layer.connectionType.ALL_TO_ALL;\n  }\n\n  if (this.type == Layer.connectionType.ALL_TO_ALL ||\n      this.type == Layer.connectionType.ALL_TO_ELSE) {\n    for (var here in this.from.list) {\n      for (var there in this.to.list) {\n        var from = this.from.list[here];\n        var to = this.to.list[there];\n        if(this.type == Layer.connectionType.ALL_TO_ELSE && from == to)\n          continue;\n        var connection = from.project(to, weights);\n\n        this.connections[connection.ID] = connection;\n        this.size = this.list.push(connection);\n      }\n    }\n  } else if (this.type == Layer.connectionType.ONE_TO_ONE) {\n\n    for (var neuron in this.from.list) {\n      var from = this.from.list[neuron];\n      var to = this.to.list[neuron];\n      var connection = from.project(to, weights);\n\n      this.connections[connection.ID] = connection;\n      this.size = this.list.push(connection);\n    }\n  }\n\n  fromLayer.connectedTo.push(this);\n}\n\n// types of connections\nLayer.connectionType = {};\nLayer.connectionType.ALL_TO_ALL = \"ALL TO ALL\";\nLayer.connectionType.ONE_TO_ONE = \"ONE TO ONE\";\nLayer.connectionType.ALL_TO_ELSE = \"ALL TO ELSE\";\n\n// types of gates\nLayer.gateType = {};\nLayer.gateType.INPUT = \"INPUT\";\nLayer.gateType.OUTPUT = \"OUTPUT\";\nLayer.gateType.ONE_TO_ONE = \"ONE TO ONE\";\n\n(function() {\n  var connections = 0;\n  Layer.connection.uid = function() {\n    return connections++;\n  }\n})();\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)(module)))\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// export\nif (module) module.exports = Network;\n\n// import\nvar Neuron  = __webpack_require__(7)\n,   Layer   = __webpack_require__(5)\n,   Trainer = __webpack_require__(8)\n\n/*******************************************************************************************\n                                         NETWORK\n*******************************************************************************************/\n\nfunction Network(layers) {\n  if (typeof layers != 'undefined') {\n    this.layers = layers || {\n      input: null,\n      hidden: {},\n      output: null\n    };\n    this.optimized = null;\n  }\n}\nNetwork.prototype = {\n\n  // feed-forward activation of all the layers to produce an ouput\n  activate: function(input) {\n\n    if (this.optimized === false)\n    {\n      this.layers.input.activate(input);\n      for (var layer in this.layers.hidden)\n        this.layers.hidden[layer].activate();\n      return this.layers.output.activate();\n    }\n    else\n    {\n      if (this.optimized == null)\n        this.optimize();\n      return this.optimized.activate(input);\n    }\n  },\n\n  // back-propagate the error thru the network\n  propagate: function(rate, target) {\n\n    if (this.optimized === false)\n    {\n      this.layers.output.propagate(rate, target);\n      var reverse = [];\n      for (var layer in this.layers.hidden)\n        reverse.push(this.layers.hidden[layer]);\n      reverse.reverse();\n      for (var layer in reverse)\n        reverse[layer].propagate(rate);\n    }\n    else\n    {\n      if (this.optimized == null)\n        this.optimize();\n      this.optimized.propagate(rate, target);\n    }\n  },\n\n  // project a connection to another unit (either a network or a layer)\n  project: function(unit, type, weights) {\n\n    if (this.optimized)\n      this.optimized.reset();\n\n    if (unit instanceof Network)\n      return this.layers.output.project(unit.layers.input, type, weights);\n\n    if (unit instanceof Layer)\n      return this.layers.output.project(unit, type, weights);\n\n    throw new Error(\"Invalid argument, you can only project connections to LAYERS and NETWORKS!\");\n  },\n\n  // let this network gate a connection\n  gate: function(connection, type) {\n    if (this.optimized)\n      this.optimized.reset();\n    this.layers.output.gate(connection, type);\n  },\n\n  // clear all elegibility traces and extended elegibility traces (the network forgets its context, but not what was trained)\n  clear: function() {\n\n    this.restore();\n\n    var inputLayer = this.layers.input,\n      outputLayer = this.layers.output;\n\n    inputLayer.clear();\n    for (var layer in this.layers.hidden) {\n      var hiddenLayer = this.layers.hidden[layer];\n      hiddenLayer.clear();\n    }\n    outputLayer.clear();\n\n    if (this.optimized)\n      this.optimized.reset();\n  },\n\n  // reset all weights and clear all traces (ends up like a new network)\n  reset: function() {\n\n    this.restore();\n\n    var inputLayer = this.layers.input,\n      outputLayer = this.layers.output;\n\n    inputLayer.reset();\n    for (var layer in this.layers.hidden) {\n      var hiddenLayer = this.layers.hidden[layer];\n      hiddenLayer.reset();\n    }\n    outputLayer.reset();\n\n    if (this.optimized)\n      this.optimized.reset();\n  },\n\n  // hardcodes the behaviour of the whole network into a single optimized function\n  optimize: function() {\n\n    var that = this;\n    var optimized = {};\n    var neurons = this.neurons();\n\n    for (var i in neurons) {\n      var neuron = neurons[i].neuron;\n      var layer = neurons[i].layer;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n      optimized = neuron.optimize(optimized, layer);\n    }\n    for (var i in optimized.propagation_sentences)\n      optimized.propagation_sentences[i].reverse();\n    optimized.propagation_sentences.reverse();\n\n    var hardcode = \"\";\n    hardcode += \"var F = Float64Array ? new Float64Array(\" + optimized.memory +\n      \") : []; \";\n    for (var i in optimized.variables)\n      hardcode += \"F[\" + optimized.variables[i].id + \"] = \" + (optimized.variables[\n        i].value || 0) + \"; \";\n    hardcode += \"var activate = function(input){\\n\";\n    for (var i in optimized.inputs)\n      hardcode += \"F[\" + optimized.inputs[i] + \"] = input[\" + i + \"]; \";\n    for (var currentLayer in optimized.activation_sentences) {\n      if (optimized.activation_sentences[currentLayer].length > 0) {\n        for (var currentNeuron in optimized.activation_sentences[currentLayer]) {\n          hardcode += optimized.activation_sentences[currentLayer][currentNeuron].join(\" \");\n          hardcode += optimized.trace_sentences[currentLayer][currentNeuron].join(\" \");\n        }\n      }\n    }\n    hardcode += \" var output = []; \"\n    for (var i in optimized.outputs)\n      hardcode += \"output[\" + i + \"] = F[\" + optimized.outputs[i] + \"]; \";\n    hardcode += \"return output; }; \"\n    hardcode += \"var propagate = function(rate, target){\\n\";\n    hardcode += \"F[\" + optimized.variables.rate.id + \"] = rate; \";\n    for (var i in optimized.targets)\n      hardcode += \"F[\" + optimized.targets[i] + \"] = target[\" + i + \"]; \";\n    for (var currentLayer in optimized.propagation_sentences)\n      for (var currentNeuron in optimized.propagation_sentences[currentLayer])\n        hardcode += optimized.propagation_sentences[currentLayer][currentNeuron].join(\" \") + \" \";\n    hardcode += \" };\\n\";\n    hardcode +=\n      \"var ownership = function(memoryBuffer){\\nF = memoryBuffer;\\nthis.memory = F;\\n};\\n\";\n    hardcode +=\n      \"return {\\nmemory: F,\\nactivate: activate,\\npropagate: propagate,\\nownership: ownership\\n};\";\n    hardcode = hardcode.split(\";\").join(\";\\n\");\n\n    var constructor = new Function(hardcode);\n\n    var network = constructor();\n    network.data = {\n      variables: optimized.variables,\n      activate: optimized.activation_sentences,\n      propagate: optimized.propagation_sentences,\n      trace: optimized.trace_sentences,\n      inputs: optimized.inputs,\n      outputs: optimized.outputs,\n      check_activation: this.activate,\n      check_propagation: this.propagate\n    }\n\n    network.reset = function() {\n      if (that.optimized) {\n        that.optimized = null;\n        that.activate = network.data.check_activation;\n        that.propagate = network.data.check_propagation;\n      }\n    }\n\n    this.optimized = network;\n    this.activate = network.activate;\n    this.propagate = network.propagate;\n  },\n\n  // restores all the values from the optimized network the their respective objects in order to manipulate the network\n  restore: function() {\n    if (!this.optimized)\n      return;\n\n    var optimized = this.optimized;\n\n    var getValue = function() {\n      var args = Array.prototype.slice.call(arguments);\n\n      var unit = args.shift();\n      var prop = args.pop();\n\n      var id = prop + '_';\n      for (var property in args)\n        id += args[property] + '_';\n      id += unit.ID;\n\n      var memory = optimized.memory;\n      var variables = optimized.data.variables;\n\n      if (id in variables)\n        return memory[variables[id].id];\n      return 0;\n    }\n\n    var list = this.neurons();\n\n    // link id's to positions in the array\n    var ids = {};\n    for (var i in list) {\n      var neuron = list[i].neuron;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n\n      neuron.state = getValue(neuron, 'state');\n      neuron.old = getValue(neuron, 'old');\n      neuron.activation = getValue(neuron, 'activation');\n      neuron.bias = getValue(neuron, 'bias');\n\n      for (var input in neuron.trace.elegibility)\n        neuron.trace.elegibility[input] = getValue(neuron, 'trace',\n          'elegibility', input);\n\n      for (var gated in neuron.trace.extended)\n        for (var input in neuron.trace.extended[gated])\n          neuron.trace.extended[gated][input] = getValue(neuron, 'trace',\n            'extended', gated, input);\n    }\n\n    // get connections\n    for (var i in list) {\n      var neuron = list[i].neuron;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n\n      for (var j in neuron.connections.projected) {\n        var connection = neuron.connections.projected[j];\n        connection.weight = getValue(connection, 'weight');\n        connection.gain = getValue(connection, 'gain');\n      }\n    }\n  },\n\n  // returns all the neurons in the network\n  neurons: function() {\n\n    var neurons = [];\n\n    var inputLayer = this.layers.input.neurons(),\n      outputLayer = this.layers.output.neurons();\n\n    for (var neuron in inputLayer)\n      neurons.push({\n        neuron: inputLayer[neuron],\n        layer: 'input'\n      });\n\n    for (var layer in this.layers.hidden) {\n      var hiddenLayer = this.layers.hidden[layer].neurons();\n      for (var neuron in hiddenLayer)\n        neurons.push({\n          neuron: hiddenLayer[neuron],\n          layer: layer\n        });\n    }\n    for (var neuron in outputLayer)\n      neurons.push({\n        neuron: outputLayer[neuron],\n        layer: 'output'\n      });\n\n    return neurons;\n  },\n\n  // returns number of inputs of the network\n  inputs: function() {\n    return this.layers.input.size;\n  },\n\n  // returns number of outputs of hte network\n  outputs: function() {\n    return this.layers.output.size;\n  },\n\n  // sets the layers of the network\n  set: function(layers) {\n\n    this.layers = layers;\n    if (this.optimized)\n      this.optimized.reset();\n  },\n\n  setOptimize: function(bool){\n    this.restore();\n    if (this.optimized)\n      this.optimized.reset();\n    this.optimized = bool? null : false;\n  },\n\n  // returns a json that represents all the neurons and connections of the network\n  toJSON: function(ignoreTraces) {\n\n    this.restore();\n\n    var list = this.neurons();\n    var neurons = [];\n    var connections = [];\n\n    // link id's to positions in the array\n    var ids = {};\n    for (var i in list) {\n      var neuron = list[i].neuron;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n      ids[neuron.ID] = i;\n\n      var copy = {\n        trace: {\n          elegibility: {},\n          extended: {}\n        },\n        state: neuron.state,\n        old: neuron.old,\n        activation: neuron.activation,\n        bias: neuron.bias,\n        layer: list[i].layer\n      };\n\n      copy.squash = neuron.squash == Neuron.squash.LOGISTIC ? \"LOGISTIC\" :\n        neuron.squash == Neuron.squash.TANH ? \"TANH\" :\n        neuron.squash == Neuron.squash.IDENTITY ? \"IDENTITY\" :\n        neuron.squash == Neuron.squash.HLIM ? \"HLIM\" :\n        neuron.squash == Neuron.squash.RELU ? \"RELU\" :\n        null;\n\n      neurons.push(copy);\n    }\n\n    // get connections\n    for (var i in list) {\n      var neuron = list[i].neuron;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n\n      for (var j in neuron.connections.projected) {\n        var connection = neuron.connections.projected[j];\n        connections.push({\n          from: ids[connection.from.ID],\n          to: ids[connection.to.ID],\n          weight: connection.weight,\n          gater: connection.gater ? ids[connection.gater.ID] : null,\n        });\n      }\n      if (neuron.selfconnected())\n        connections.push({\n          from: ids[neuron.ID],\n          to: ids[neuron.ID],\n          weight: neuron.selfconnection.weight,\n          gater: neuron.selfconnection.gater ? ids[neuron.selfconnection.gater.ID] : null,\n        });\n    }\n\n    return {\n      neurons: neurons,\n      connections: connections\n    }\n  },\n\n  // export the topology into dot language which can be visualized as graphs using dot\n  /* example: ... console.log(net.toDotLang());\n              $ node example.js > example.dot\n              $ dot example.dot -Tpng > out.png\n  */\n  toDot: function(edgeConnection) {\n    if (! typeof edgeConnection)\n      edgeConnection = false;\n    var code = \"digraph nn {\\n    rankdir = BT\\n\";\n    var layers = [this.layers.input].concat(this.layers.hidden, this.layers.output);\n    for (var layer in layers) {\n      for (var to in layers[layer].connectedTo) { // projections\n        var connection = layers[layer].connectedTo[to];\n        var layerTo = connection.to;\n        var size = connection.size;\n        var layerID = layers.indexOf(layers[layer]);\n        var layerToID = layers.indexOf(layerTo);\n        /* http://stackoverflow.com/questions/26845540/connect-edges-with-graph-dot\n         * DOT does not support edge-to-edge connections\n         * This workaround produces somewhat weird graphs ...\n        */\n        if ( edgeConnection) {\n          if (connection.gatedfrom.length) {\n            var fakeNode = \"fake\" + layerID + \"_\" + layerToID;\n            code += \"    \" + fakeNode +\n              \" [label = \\\"\\\", shape = point, width = 0.01, height = 0.01]\\n\";\n            code += \"    \" + layerID + \" -> \" + fakeNode + \" [label = \" + size + \", arrowhead = none]\\n\";\n            code += \"    \" + fakeNode + \" -> \" + layerToID + \"\\n\";\n          } else\n            code += \"    \" + layerID + \" -> \" + layerToID + \" [label = \" + size + \"]\\n\";\n          for (var from in connection.gatedfrom) { // gatings\n            var layerfrom = connection.gatedfrom[from].layer;\n            var layerfromID = layers.indexOf(layerfrom);\n            code += \"    \" + layerfromID + \" -> \" + fakeNode + \" [color = blue]\\n\";\n          }\n        } else {\n          code += \"    \" + layerID + \" -> \" + layerToID + \" [label = \" + size + \"]\\n\";\n          for (var from in connection.gatedfrom) { // gatings\n            var layerfrom = connection.gatedfrom[from].layer;\n            var layerfromID = layers.indexOf(layerfrom);\n            code += \"    \" + layerfromID + \" -> \" + layerToID + \" [color = blue]\\n\";\n          }\n        }\n      }\n    }\n    code += \"}\\n\";\n    return {\n      code: code,\n      link: \"https://chart.googleapis.com/chart?chl=\" + escape(code.replace(\"/ /g\", \"+\")) + \"&cht=gv\"\n    }\n  },\n\n  // returns a function that works as the activation of the network and can be used without depending on the library\n  standalone: function() {\n    if (!this.optimized)\n      this.optimize();\n\n    var data = this.optimized.data;\n\n    // build activation function\n    var activation = \"function (input) {\\n\";\n\n    // build inputs\n    for (var i in data.inputs)\n      activation += \"F[\" + data.inputs[i] + \"] = input[\" + i + \"];\\n\";\n\n    // build network activation\n    for (var neuron in data.activate) { // shouldn't this be layer?\n      for (var sentence in data.activate[neuron])\n        activation += data.activate[neuron][sentence].join('') + \"\\n\";\n    }\n\n    // build outputs\n    activation += \"var output = [];\\n\";\n    for (var i in data.outputs)\n      activation += \"output[\" + i + \"] = F[\" + data.outputs[i] + \"];\\n\";\n    activation += \"return output;\\n}\";\n\n    // reference all the positions in memory\n    var memory = activation.match(/F\\[(\\d+)\\]/g);\n    var dimension = 0;\n    var ids = {};\n    for (var address in memory) {\n      var tmp = memory[address].match(/\\d+/)[0];\n      if (!(tmp in ids)) {\n        ids[tmp] = dimension++;\n      }\n    }\n    var hardcode = \"F = {\\n\";\n    for (var i in ids)\n      hardcode += ids[i] + \": \" + this.optimized.memory[i] + \",\\n\";\n    hardcode = hardcode.substring(0, hardcode.length - 2) + \"\\n};\\n\";\n    hardcode = \"var run = \" + activation.replace(/F\\[(\\d+)]/g, function(\n      index) {\n      return 'F[' + ids[index.match(/\\d+/)[0]] + ']'\n    }).replace(\"{\\n\", \"{\\n\" + hardcode + \"\") + \";\\n\";\n    hardcode += \"return run\";\n\n    // return standalone function\n    return new Function(hardcode)();\n  },\n\n\n  // Return a HTML5 WebWorker specialized on training the network stored in `memory`.\n  // Train based on the given dataSet and options.\n  // The worker returns the updated `memory` when done.\n  worker: function(memory, set, options) {\n\n    // Copy the options and set defaults (options might be different for each worker)\n    var workerOptions = {};\n    if(options) workerOptions = options;\n    workerOptions.rate = options.rate || .2;\n    workerOptions.iterations = options.iterations || 100000;\n    workerOptions.error = options.error || .005;\n    workerOptions.cost = options.cost || null;\n    workerOptions.crossValidate = options.crossValidate || null;\n\n    // Cost function might be different for each worker\n    costFunction = \"var cost = \" + (options && options.cost || this.cost || Trainer.cost.MSE) + \";\\n\";\n    var workerFunction = Network.getWorkerSharedFunctions();\n    workerFunction = workerFunction.replace(/var cost = options && options\\.cost \\|\\| this\\.cost \\|\\| Trainer\\.cost\\.MSE;/g, costFunction);\n\n    // Set what we do when training is finished\n    workerFunction = workerFunction.replace('return results;',\n                      'postMessage({action: \"done\", message: results, memoryBuffer: F}, [F.buffer]);');\n\n    // Replace log with postmessage\n    workerFunction = workerFunction.replace(\"console.log('iterations', iterations, 'error', error, 'rate', currentRate)\",\n              \"postMessage({action: 'log', message: {\\n\" +\n                  \"iterations: iterations,\\n\" +\n                  \"error: error,\\n\" +\n                  \"rate: currentRate\\n\" +\n                \"}\\n\" +\n              \"})\");\n\n    // Replace schedule with postmessage\n    workerFunction = workerFunction.replace(\"abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate })\",\n              \"postMessage({action: 'schedule', message: {\\n\" +\n                  \"iterations: iterations,\\n\" +\n                  \"error: error,\\n\" +\n                  \"rate: currentRate\\n\" +\n                \"}\\n\" +\n              \"})\");\n\n    if (!this.optimized)\n      this.optimize();\n\n    var hardcode = \"var inputs = \" + this.optimized.data.inputs.length + \";\\n\";\n    hardcode += \"var outputs = \" + this.optimized.data.outputs.length + \";\\n\";\n    hardcode += \"var F =  new Float64Array([\" + this.optimized.memory.toString() + \"]);\\n\";\n    hardcode += \"var activate = \" + this.optimized.activate.toString() + \";\\n\";\n    hardcode += \"var propagate = \" + this.optimized.propagate.toString() + \";\\n\";\n    hardcode +=\n        \"onmessage = function(e) {\\n\" +\n          \"if (e.data.action == 'startTraining') {\\n\" +\n            \"train(\" + JSON.stringify(set) + \",\" + JSON.stringify(workerOptions) + \");\\n\" +\n          \"}\\n\" +\n        \"}\";\n\n    var workerSourceCode = workerFunction + '\\n' + hardcode;\n    var blob = new Blob([workerSourceCode]);\n    var blobURL = window.URL.createObjectURL(blob);\n\n    return new Worker(blobURL);\n  },\n\n  // returns a copy of the network\n  clone: function() {\n    return Network.fromJSON(this.toJSON());\n  }\n};\n\n/**\n * Creates a static String to store the source code of the functions\n *  that are identical for all the workers (train, _trainSet, test)\n *\n * @return {String} Source code that can train a network inside a worker.\n * @static\n */\nNetwork.getWorkerSharedFunctions = function() {\n  // If we already computed the source code for the shared functions\n  if(typeof Network._SHARED_WORKER_FUNCTIONS !== 'undefined')\n    return Network._SHARED_WORKER_FUNCTIONS;\n\n  // Otherwise compute and return the source code\n  // We compute them by simply copying the source code of the train, _trainSet and test functions\n  //  using the .toString() method\n\n  // Load and name the train function\n  var train_f = Trainer.prototype.train.toString();\n  train_f = train_f.replace('function (set', 'function train(set') + '\\n';\n\n  // Load and name the _trainSet function\n  var _trainSet_f = Trainer.prototype._trainSet.toString().replace(/this.network./g, '');\n  _trainSet_f = _trainSet_f.replace('function (set', 'function _trainSet(set') + '\\n';\n  _trainSet_f = _trainSet_f.replace('this.crossValidate', 'crossValidate');\n  _trainSet_f = _trainSet_f.replace('crossValidate = true', 'crossValidate = { }');\n\n  // Load and name the test function\n  var test_f = Trainer.prototype.test.toString().replace(/this.network./g, '');\n  test_f = test_f.replace('function (set', 'function test(set') + '\\n';\n\n  return Network._SHARED_WORKER_FUNCTIONS = train_f + _trainSet_f + test_f;\n};\n\n// rebuild a network that has been stored in a json using the method toJSON()\nNetwork.fromJSON = function(json) {\n\n  var neurons = [];\n\n  var layers = {\n    input: new Layer(),\n    hidden: [],\n    output: new Layer()\n  };\n\n  for (var i in json.neurons) {\n    var config = json.neurons[i];\n\n    var neuron = new Neuron();\n    neuron.trace.elegibility = {};\n    neuron.trace.extended = {};\n    neuron.state = config.state;\n    neuron.old = config.old;\n    neuron.activation = config.activation;\n    neuron.bias = config.bias;\n    neuron.squash = config.squash in Neuron.squash ? Neuron.squash[config.squash] : Neuron.squash.LOGISTIC;\n    neurons.push(neuron);\n\n    if (config.layer == 'input')\n      layers.input.add(neuron);\n    else if (config.layer == 'output')\n      layers.output.add(neuron);\n    else {\n      if (typeof layers.hidden[config.layer] == 'undefined')\n        layers.hidden[config.layer] = new Layer();\n      layers.hidden[config.layer].add(neuron);\n    }\n  }\n\n  for (var i in json.connections) {\n    var config = json.connections[i];\n    var from = neurons[config.from];\n    var to = neurons[config.to];\n    var weight = config.weight;\n    var gater = neurons[config.gater];\n\n    var connection = from.project(to, weight);\n    if (gater)\n      gater.gate(connection);\n  }\n\n  return new Network(layers);\n};\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)(module)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// export\nif (module) module.exports = Neuron;\n\n/******************************************************************************************\n                                         NEURON\n*******************************************************************************************/\n\nfunction Neuron() {\n  this.ID = Neuron.uid();\n  this.label = null;\n  this.connections = {\n    inputs: {},\n    projected: {},\n    gated: {}\n  };\n  this.error = {\n    responsibility: 0,\n    projected: 0,\n    gated: 0\n  };\n  this.trace = {\n    elegibility: {},\n    extended: {},\n    influences: {}\n  };\n  this.state = 0;\n  this.old = 0;\n  this.activation = 0;\n  this.selfconnection = new Neuron.connection(this, this, 0); // weight = 0 -> not connected\n  this.squash = Neuron.squash.LOGISTIC;\n  this.neighboors = {};\n  this.bias = Math.random() * .2 - .1;\n}\n\nNeuron.prototype = {\n\n  // activate the neuron\n  activate: function(input) {\n    // activation from enviroment (for input neurons)\n    if (typeof input != 'undefined') {\n      this.activation = input;\n      this.derivative = 0;\n      this.bias = 0;\n      return this.activation;\n    }\n\n    // old state\n    this.old = this.state;\n\n    // eq. 15\n    this.state = this.selfconnection.gain * this.selfconnection.weight *\n      this.state + this.bias;\n\n    for (var i in this.connections.inputs) {\n      var input = this.connections.inputs[i];\n      this.state += input.from.activation * input.weight * input.gain;\n    }\n\n    // eq. 16\n    this.activation = this.squash(this.state);\n\n    // f'(s)\n    this.derivative = this.squash(this.state, true);\n\n    // update traces\n    var influences = [];\n    for (var id in this.trace.extended) {\n      // extended elegibility trace\n      var neuron = this.neighboors[id];\n\n      // if gated neuron's selfconnection is gated by this unit, the influence keeps track of the neuron's old state\n      var influence = neuron.selfconnection.gater == this ? neuron.old : 0;\n\n      // index runs over all the incoming connections to the gated neuron that are gated by this unit\n      for (var incoming in this.trace.influences[neuron.ID]) { // captures the effect that has an input connection to this unit, on a neuron that is gated by this unit\n        influence += this.trace.influences[neuron.ID][incoming].weight *\n          this.trace.influences[neuron.ID][incoming].from.activation;\n      }\n      influences[neuron.ID] = influence;\n    }\n\n    for (var i in this.connections.inputs) {\n      var input = this.connections.inputs[i];\n\n      // elegibility trace - Eq. 17\n      this.trace.elegibility[input.ID] = this.selfconnection.gain * this.selfconnection\n        .weight * this.trace.elegibility[input.ID] + input.gain * input.from\n        .activation;\n\n      for (var id in this.trace.extended) {\n        // extended elegibility trace\n        var xtrace = this.trace.extended[id];\n        var neuron = this.neighboors[id];\n        var influence = influences[neuron.ID];\n\n        // eq. 18\n        xtrace[input.ID] = neuron.selfconnection.gain * neuron.selfconnection\n          .weight * xtrace[input.ID] + this.derivative * this.trace.elegibility[\n            input.ID] * influence;\n      }\n    }\n\n    //  update gated connection's gains\n    for (var connection in this.connections.gated) {\n      this.connections.gated[connection].gain = this.activation;\n    }\n\n    return this.activation;\n  },\n\n  // back-propagate the error\n  propagate: function(rate, target) {\n    // error accumulator\n    var error = 0;\n\n    // whether or not this neuron is in the output layer\n    var isOutput = typeof target != 'undefined';\n\n    // output neurons get their error from the enviroment\n    if (isOutput)\n      this.error.responsibility = this.error.projected = target - this.activation; // Eq. 10\n\n    else // the rest of the neuron compute their error responsibilities by backpropagation\n    {\n      // error responsibilities from all the connections projected from this neuron\n      for (var id in this.connections.projected) {\n        var connection = this.connections.projected[id];\n        var neuron = connection.to;\n        // Eq. 21\n        error += neuron.error.responsibility * connection.gain * connection.weight;\n      }\n\n      // projected error responsibility\n      this.error.projected = this.derivative * error;\n\n      error = 0;\n      // error responsibilities from all the connections gated by this neuron\n      for (var id in this.trace.extended) {\n        var neuron = this.neighboors[id]; // gated neuron\n        var influence = neuron.selfconnection.gater == this ? neuron.old : 0; // if gated neuron's selfconnection is gated by this neuron\n\n        // index runs over all the connections to the gated neuron that are gated by this neuron\n        for (var input in this.trace.influences[id]) { // captures the effect that the input connection of this neuron have, on a neuron which its input/s is/are gated by this neuron\n          influence += this.trace.influences[id][input].weight * this.trace.influences[\n            neuron.ID][input].from.activation;\n        }\n        // eq. 22\n        error += neuron.error.responsibility * influence;\n      }\n\n      // gated error responsibility\n      this.error.gated = this.derivative * error;\n\n      // error responsibility - Eq. 23\n      this.error.responsibility = this.error.projected + this.error.gated;\n    }\n\n    // learning rate\n    rate = rate || .1;\n\n    // adjust all the neuron's incoming connections\n    for (var id in this.connections.inputs) {\n      var input = this.connections.inputs[id];\n\n      // Eq. 24\n      var gradient = this.error.projected * this.trace.elegibility[input.ID];\n      for (var id in this.trace.extended) {\n        var neuron = this.neighboors[id];\n        gradient += neuron.error.responsibility * this.trace.extended[\n          neuron.ID][input.ID];\n      }\n      input.weight += rate * gradient; // adjust weights - aka learn\n    }\n\n    // adjust bias\n    this.bias += rate * this.error.responsibility;\n  },\n\n  project: function(neuron, weight) {\n    // self-connection\n    if (neuron == this) {\n      this.selfconnection.weight = 1;\n      return this.selfconnection;\n    }\n\n    // check if connection already exists\n    var connected = this.connected(neuron);\n    if (connected && connected.type == \"projected\") {\n      // update connection\n      if (typeof weight != 'undefined')\n        connected.connection.weight = weight;\n      // return existing connection\n      return connected.connection;\n    } else {\n      // create a new connection\n      var connection = new Neuron.connection(this, neuron, weight);\n    }\n\n    // reference all the connections and traces\n    this.connections.projected[connection.ID] = connection;\n    this.neighboors[neuron.ID] = neuron;\n    neuron.connections.inputs[connection.ID] = connection;\n    neuron.trace.elegibility[connection.ID] = 0;\n\n    for (var id in neuron.trace.extended) {\n      var trace = neuron.trace.extended[id];\n      trace[connection.ID] = 0;\n    }\n\n    return connection;\n  },\n\n  gate: function(connection) {\n    // add connection to gated list\n    this.connections.gated[connection.ID] = connection;\n\n    var neuron = connection.to;\n    if (!(neuron.ID in this.trace.extended)) {\n      // extended trace\n      this.neighboors[neuron.ID] = neuron;\n      var xtrace = this.trace.extended[neuron.ID] = {};\n      for (var id in this.connections.inputs) {\n        var input = this.connections.inputs[id];\n        xtrace[input.ID] = 0;\n      }\n    }\n\n    // keep track\n    if (neuron.ID in this.trace.influences)\n      this.trace.influences[neuron.ID].push(connection);\n    else\n      this.trace.influences[neuron.ID] = [connection];\n\n    // set gater\n    connection.gater = this;\n  },\n\n  // returns true or false whether the neuron is self-connected or not\n  selfconnected: function() {\n    return this.selfconnection.weight !== 0;\n  },\n\n  // returns true or false whether the neuron is connected to another neuron (parameter)\n  connected: function(neuron) {\n    var result = {\n      type: null,\n      connection: false\n    };\n\n    if (this == neuron) {\n      if (this.selfconnected()) {\n        result.type = 'selfconnection';\n        result.connection = this.selfconnection;\n        return result;\n      } else\n        return false;\n    }\n\n    for (var type in this.connections) {\n      for (var connection in this.connections[type]) {\n        var connection = this.connections[type][connection];\n        if (connection.to == neuron) {\n          result.type = type;\n          result.connection = connection;\n          return result;\n        } else if (connection.from == neuron) {\n          result.type = type;\n          result.connection = connection;\n          return result;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  // clears all the traces (the neuron forgets it's context, but the connections remain intact)\n  clear: function() {\n\n    for (var trace in this.trace.elegibility)\n      this.trace.elegibility[trace] = 0;\n\n    for (var trace in this.trace.extended)\n      for (var extended in this.trace.extended[trace])\n        this.trace.extended[trace][extended] = 0;\n\n    this.error.responsibility = this.error.projected = this.error.gated = 0;\n  },\n\n  // all the connections are randomized and the traces are cleared\n  reset: function() {\n    this.clear();\n\n    for (var type in this.connections)\n      for (var connection in this.connections[type])\n        this.connections[type][connection].weight = Math.random() * .2 - .1;\n    this.bias = Math.random() * .2 - .1;\n\n    this.old = this.state = this.activation = 0;\n  },\n\n  // hardcodes the behaviour of the neuron into an optimized function\n  optimize: function(optimized, layer) {\n\n    optimized = optimized || {};\n    var store_activation = [];\n    var store_trace = [];\n    var store_propagation = [];\n    var varID = optimized.memory || 0;\n    var neurons = optimized.neurons || 1;\n    var inputs = optimized.inputs || [];\n    var targets = optimized.targets || [];\n    var outputs = optimized.outputs || [];\n    var variables = optimized.variables || {};\n    var activation_sentences = optimized.activation_sentences || [];\n    var trace_sentences = optimized.trace_sentences || [];\n    var propagation_sentences = optimized.propagation_sentences || [];\n    var layers = optimized.layers || { __count: 0, __neuron: 0 };\n\n    // allocate sentences\n    var allocate = function(store){\n      var allocated = layer in layers && store[layers.__count];\n      if (!allocated)\n      {\n        layers.__count = store.push([]) - 1;\n        layers[layer] = layers.__count;\n      }\n    };\n    allocate(activation_sentences);\n    allocate(trace_sentences);\n    allocate(propagation_sentences);\n    var currentLayer = layers.__count;\n\n    // get/reserve space in memory by creating a unique ID for a variablel\n    var getVar = function() {\n      var args = Array.prototype.slice.call(arguments);\n\n      if (args.length == 1) {\n        if (args[0] == 'target') {\n          var id = 'target_' + targets.length;\n          targets.push(varID);\n        } else\n          var id = args[0];\n        if (id in variables)\n          return variables[id];\n        return variables[id] = {\n          value: 0,\n          id: varID++\n        };\n      } else {\n        var extended = args.length > 2;\n        if (extended)\n          var value = args.pop();\n\n        var unit = args.shift();\n        var prop = args.pop();\n\n        if (!extended)\n          var value = unit[prop];\n\n        var id = prop + '_';\n        for (var property in args)\n          id += args[property] + '_';\n        id += unit.ID;\n        if (id in variables)\n          return variables[id];\n\n        return variables[id] = {\n          value: value,\n          id: varID++\n        };\n      }\n    };\n\n    // build sentence\n    var buildSentence = function() {\n      var args = Array.prototype.slice.call(arguments);\n      var store = args.pop();\n      var sentence = \"\";\n      for (var i in args)\n        if (typeof args[i] == 'string')\n          sentence += args[i];\n        else\n          sentence += 'F[' + args[i].id + ']';\n\n      store.push(sentence + ';');\n    };\n\n    // helper to check if an object is empty\n    var isEmpty = function(obj) {\n      for (var prop in obj) {\n        if (obj.hasOwnProperty(prop))\n          return false;\n      }\n      return true;\n    };\n\n    // characteristics of the neuron\n    var noProjections = isEmpty(this.connections.projected);\n    var noGates = isEmpty(this.connections.gated);\n    var isInput = layer == 'input' ? true : isEmpty(this.connections.inputs);\n    var isOutput = layer == 'output' ? true : noProjections && noGates;\n\n    // optimize neuron's behaviour\n    var rate = getVar('rate');\n    var activation = getVar(this, 'activation');\n    if (isInput)\n      inputs.push(activation.id);\n    else {\n      activation_sentences[currentLayer].push(store_activation);\n      trace_sentences[currentLayer].push(store_trace);\n      propagation_sentences[currentLayer].push(store_propagation);\n      var old = getVar(this, 'old');\n      var state = getVar(this, 'state');\n      var bias = getVar(this, 'bias');\n      if (this.selfconnection.gater)\n        var self_gain = getVar(this.selfconnection, 'gain');\n      if (this.selfconnected())\n        var self_weight = getVar(this.selfconnection, 'weight');\n      buildSentence(old, ' = ', state, store_activation);\n      if (this.selfconnected())\n        if (this.selfconnection.gater)\n          buildSentence(state, ' = ', self_gain, ' * ', self_weight, ' * ',\n            state, ' + ', bias, store_activation);\n        else\n          buildSentence(state, ' = ', self_weight, ' * ', state, ' + ',\n            bias, store_activation);\n      else\n        buildSentence(state, ' = ', bias, store_activation);\n      for (var i in this.connections.inputs) {\n        var input = this.connections.inputs[i];\n        var input_activation = getVar(input.from, 'activation');\n        var input_weight = getVar(input, 'weight');\n        if (input.gater)\n          var input_gain = getVar(input, 'gain');\n        if (this.connections.inputs[i].gater)\n          buildSentence(state, ' += ', input_activation, ' * ',\n            input_weight, ' * ', input_gain, store_activation);\n        else\n          buildSentence(state, ' += ', input_activation, ' * ',\n            input_weight, store_activation);\n      }\n      var derivative = getVar(this, 'derivative');\n      switch (this.squash) {\n        case Neuron.squash.LOGISTIC:\n          buildSentence(activation, ' = (1 / (1 + Math.exp(-', state, ')))',\n            store_activation);\n          buildSentence(derivative, ' = ', activation, ' * (1 - ',\n            activation, ')', store_activation);\n          break;\n        case Neuron.squash.TANH:\n          var eP = getVar('aux');\n          var eN = getVar('aux_2');\n          buildSentence(eP, ' = Math.exp(', state, ')', store_activation);\n          buildSentence(eN, ' = 1 / ', eP, store_activation);\n          buildSentence(activation, ' = (', eP, ' - ', eN, ') / (', eP, ' + ', eN, ')', store_activation);\n          buildSentence(derivative, ' = 1 - (', activation, ' * ', activation, ')', store_activation);\n          break;\n        case Neuron.squash.IDENTITY:\n          buildSentence(activation, ' = ', state, store_activation);\n          buildSentence(derivative, ' = 1', store_activation);\n          break;\n        case Neuron.squash.HLIM:\n          buildSentence(activation, ' = +(', state, ' > 0)', store_activation);\n          buildSentence(derivative, ' = 1', store_activation);\n        case Neuron.squash.RELU:\n          buildSentence(activation, ' = ', state, ' > 0 ? ', state, ' : 0', store_activation);\n          buildSentence(derivative, ' = ', state, ' > 0 ? 1 : 0', store_activation);\n          break;\n      }\n\n      for (var id in this.trace.extended) {\n        // calculate extended elegibility traces in advance\n\n        var neuron = this.neighboors[id];\n        var influence = getVar('influences[' + neuron.ID + ']');\n        var neuron_old = getVar(neuron, 'old');\n        var initialized = false;\n        if (neuron.selfconnection.gater == this)\n        {\n          buildSentence(influence, ' = ', neuron_old, store_trace);\n          initialized = true;\n        }\n        for (var incoming in this.trace.influences[neuron.ID]) {\n          var incoming_weight = getVar(this.trace.influences[neuron.ID]\n            [incoming], 'weight');\n          var incoming_activation = getVar(this.trace.influences[neuron.ID]\n            [incoming].from, 'activation');\n\n          if (initialized)\n            buildSentence(influence, ' += ', incoming_weight, ' * ', incoming_activation, store_trace);\n          else {\n            buildSentence(influence, ' = ', incoming_weight, ' * ', incoming_activation, store_trace);\n            initialized = true;\n          }\n        }\n      }\n\n      for (var i in this.connections.inputs) {\n        var input = this.connections.inputs[i];\n        if (input.gater)\n          var input_gain = getVar(input, 'gain');\n        var input_activation = getVar(input.from, 'activation');\n        var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace\n          .elegibility[input.ID]);\n        if (this.selfconnected()) {\n          if (this.selfconnection.gater) {\n            if (input.gater)\n              buildSentence(trace, ' = ', self_gain, ' * ', self_weight,\n                ' * ', trace, ' + ', input_gain, ' * ', input_activation,\n                store_trace);\n            else\n              buildSentence(trace, ' = ', self_gain, ' * ', self_weight,\n                ' * ', trace, ' + ', input_activation, store_trace);\n          } else {\n            if (input.gater)\n              buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ',\n                input_gain, ' * ', input_activation, store_trace);\n            else\n              buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ',\n                input_activation, store_trace);\n          }\n        } else {\n          if (input.gater)\n            buildSentence(trace, ' = ', input_gain, ' * ', input_activation,\n              store_trace);\n          else\n            buildSentence(trace, ' = ', input_activation, store_trace);\n        }\n        for (var id in this.trace.extended) {\n          // extended elegibility trace\n          var neuron = this.neighboors[id];\n          var influence = getVar('influences[' + neuron.ID + ']');\n\n          var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace\n            .elegibility[input.ID]);\n          var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID,\n            this.trace.extended[neuron.ID][input.ID]);\n          if (neuron.selfconnected())\n            var neuron_self_weight = getVar(neuron.selfconnection, 'weight');\n          if (neuron.selfconnection.gater)\n            var neuron_self_gain = getVar(neuron.selfconnection, 'gain');\n          if (neuron.selfconnected())\n            if (neuron.selfconnection.gater)\n              buildSentence(xtrace, ' = ', neuron_self_gain, ' * ',\n                neuron_self_weight, ' * ', xtrace, ' + ', derivative, ' * ',\n                trace, ' * ', influence, store_trace);\n            else\n              buildSentence(xtrace, ' = ', neuron_self_weight, ' * ',\n                xtrace, ' + ', derivative, ' * ', trace, ' * ',\n                influence, store_trace);\n          else\n            buildSentence(xtrace, ' = ', derivative, ' * ', trace, ' * ',\n              influence, store_trace);\n        }\n      }\n      for (var connection in this.connections.gated) {\n        var gated_gain = getVar(this.connections.gated[connection], 'gain');\n        buildSentence(gated_gain, ' = ', activation, store_activation);\n      }\n    }\n    if (!isInput) {\n      var responsibility = getVar(this, 'error', 'responsibility', this.error\n        .responsibility);\n      if (isOutput) {\n        var target = getVar('target');\n        buildSentence(responsibility, ' = ', target, ' - ', activation,\n          store_propagation);\n        for (var id in this.connections.inputs) {\n          var input = this.connections.inputs[id];\n          var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace\n            .elegibility[input.ID]);\n          var input_weight = getVar(input, 'weight');\n          buildSentence(input_weight, ' += ', rate, ' * (', responsibility,\n            ' * ', trace, ')', store_propagation);\n        }\n        outputs.push(activation.id);\n      } else {\n        if (!noProjections && !noGates) {\n          var error = getVar('aux');\n          for (var id in this.connections.projected) {\n            var connection = this.connections.projected[id];\n            var neuron = connection.to;\n            var connection_weight = getVar(connection, 'weight');\n            var neuron_responsibility = getVar(neuron, 'error',\n              'responsibility', neuron.error.responsibility);\n            if (connection.gater) {\n              var connection_gain = getVar(connection, 'gain');\n              buildSentence(error, ' += ', neuron_responsibility, ' * ',\n                connection_gain, ' * ', connection_weight,\n                store_propagation);\n            } else\n              buildSentence(error, ' += ', neuron_responsibility, ' * ',\n                connection_weight, store_propagation);\n          }\n          var projected = getVar(this, 'error', 'projected', this.error.projected);\n          buildSentence(projected, ' = ', derivative, ' * ', error,\n            store_propagation);\n          buildSentence(error, ' = 0', store_propagation);\n          for (var id in this.trace.extended) {\n            var neuron = this.neighboors[id];\n            var influence = getVar('aux_2');\n            var neuron_old = getVar(neuron, 'old');\n            if (neuron.selfconnection.gater == this)\n              buildSentence(influence, ' = ', neuron_old, store_propagation);\n            else\n              buildSentence(influence, ' = 0', store_propagation);\n            for (var input in this.trace.influences[neuron.ID]) {\n              var connection = this.trace.influences[neuron.ID][input];\n              var connection_weight = getVar(connection, 'weight');\n              var neuron_activation = getVar(connection.from, 'activation');\n              buildSentence(influence, ' += ', connection_weight, ' * ',\n                neuron_activation, store_propagation);\n            }\n            var neuron_responsibility = getVar(neuron, 'error',\n              'responsibility', neuron.error.responsibility);\n            buildSentence(error, ' += ', neuron_responsibility, ' * ',\n              influence, store_propagation);\n          }\n          var gated = getVar(this, 'error', 'gated', this.error.gated);\n          buildSentence(gated, ' = ', derivative, ' * ', error,\n            store_propagation);\n          buildSentence(responsibility, ' = ', projected, ' + ', gated,\n            store_propagation);\n          for (var id in this.connections.inputs) {\n            var input = this.connections.inputs[id];\n            var gradient = getVar('aux');\n            var trace = getVar(this, 'trace', 'elegibility', input.ID, this\n              .trace.elegibility[input.ID]);\n            buildSentence(gradient, ' = ', projected, ' * ', trace,\n              store_propagation);\n            for (var id in this.trace.extended) {\n              var neuron = this.neighboors[id];\n              var neuron_responsibility = getVar(neuron, 'error',\n                'responsibility', neuron.error.responsibility);\n              var xtrace = getVar(this, 'trace', 'extended', neuron.ID,\n                input.ID, this.trace.extended[neuron.ID][input.ID]);\n              buildSentence(gradient, ' += ', neuron_responsibility, ' * ',\n                xtrace, store_propagation);\n            }\n            var input_weight = getVar(input, 'weight');\n            buildSentence(input_weight, ' += ', rate, ' * ', gradient,\n              store_propagation);\n          }\n\n        } else if (noGates) {\n          buildSentence(responsibility, ' = 0', store_propagation);\n          for (var id in this.connections.projected) {\n            var connection = this.connections.projected[id];\n            var neuron = connection.to;\n            var connection_weight = getVar(connection, 'weight');\n            var neuron_responsibility = getVar(neuron, 'error',\n              'responsibility', neuron.error.responsibility);\n            if (connection.gater) {\n              var connection_gain = getVar(connection, 'gain');\n              buildSentence(responsibility, ' += ', neuron_responsibility,\n                ' * ', connection_gain, ' * ', connection_weight,\n                store_propagation);\n            } else\n              buildSentence(responsibility, ' += ', neuron_responsibility,\n                ' * ', connection_weight, store_propagation);\n          }\n          buildSentence(responsibility, ' *= ', derivative,\n            store_propagation);\n          for (var id in this.connections.inputs) {\n            var input = this.connections.inputs[id];\n            var trace = getVar(this, 'trace', 'elegibility', input.ID, this\n              .trace.elegibility[input.ID]);\n            var input_weight = getVar(input, 'weight');\n            buildSentence(input_weight, ' += ', rate, ' * (',\n              responsibility, ' * ', trace, ')', store_propagation);\n          }\n        } else if (noProjections) {\n          buildSentence(responsibility, ' = 0', store_propagation);\n          for (var id in this.trace.extended) {\n            var neuron = this.neighboors[id];\n            var influence = getVar('aux');\n            var neuron_old = getVar(neuron, 'old');\n            if (neuron.selfconnection.gater == this)\n              buildSentence(influence, ' = ', neuron_old, store_propagation);\n            else\n              buildSentence(influence, ' = 0', store_propagation);\n            for (var input in this.trace.influences[neuron.ID]) {\n              var connection = this.trace.influences[neuron.ID][input];\n              var connection_weight = getVar(connection, 'weight');\n              var neuron_activation = getVar(connection.from, 'activation');\n              buildSentence(influence, ' += ', connection_weight, ' * ',\n                neuron_activation, store_propagation);\n            }\n            var neuron_responsibility = getVar(neuron, 'error',\n              'responsibility', neuron.error.responsibility);\n            buildSentence(responsibility, ' += ', neuron_responsibility,\n              ' * ', influence, store_propagation);\n          }\n          buildSentence(responsibility, ' *= ', derivative,\n            store_propagation);\n          for (var id in this.connections.inputs) {\n            var input = this.connections.inputs[id];\n            var gradient = getVar('aux');\n            buildSentence(gradient, ' = 0', store_propagation);\n            for (var id in this.trace.extended) {\n              var neuron = this.neighboors[id];\n              var neuron_responsibility = getVar(neuron, 'error',\n                'responsibility', neuron.error.responsibility);\n              var xtrace = getVar(this, 'trace', 'extended', neuron.ID,\n                input.ID, this.trace.extended[neuron.ID][input.ID]);\n              buildSentence(gradient, ' += ', neuron_responsibility, ' * ',\n                xtrace, store_propagation);\n            }\n            var input_weight = getVar(input, 'weight');\n            buildSentence(input_weight, ' += ', rate, ' * ', gradient,\n              store_propagation);\n          }\n        }\n      }\n      buildSentence(bias, ' += ', rate, ' * ', responsibility,\n        store_propagation);\n    }\n    return {\n      memory: varID,\n      neurons: neurons + 1,\n      inputs: inputs,\n      outputs: outputs,\n      targets: targets,\n      variables: variables,\n      activation_sentences: activation_sentences,\n      trace_sentences: trace_sentences,\n      propagation_sentences: propagation_sentences,\n      layers: layers\n    }\n  }\n}\n\n\n// represents a connection between two neurons\nNeuron.connection = function Connection(from, to, weight) {\n\n  if (!from || !to)\n    throw new Error(\"Connection Error: Invalid neurons\");\n\n  this.ID = Neuron.connection.uid();\n  this.from = from;\n  this.to = to;\n  this.weight = typeof weight == 'undefined' ? Math.random() * .2 - .1 :\n    weight;\n  this.gain = 1;\n  this.gater = null;\n}\n\n\n// squashing functions\nNeuron.squash = {};\n\n// eq. 5 & 5'\nNeuron.squash.LOGISTIC = function(x, derivate) {\n  if (!derivate)\n    return 1 / (1 + Math.exp(-x));\n  var fx = Neuron.squash.LOGISTIC(x);\n  return fx * (1 - fx);\n};\nNeuron.squash.TANH = function(x, derivate) {\n  if (derivate)\n    return 1 - Math.pow(Neuron.squash.TANH(x), 2);\n  var eP = Math.exp(x);\n  var eN = 1 / eP;\n  return (eP - eN) / (eP + eN);\n};\nNeuron.squash.IDENTITY = function(x, derivate) {\n  return derivate ? 1 : x;\n};\nNeuron.squash.HLIM = function(x, derivate) {\n  return derivate ? 1 : x > 0 ? 1 : 0;\n};\nNeuron.squash.RELU = function(x, derivate) {\n  if (derivate)\n    return x > 0 ? 1 : 0;\n  return x > 0 ? x : 0;\n};\n\n// unique ID's\n(function() {\n  var neurons = 0;\n  var connections = 0;\n  Neuron.uid = function() {\n    return neurons++;\n  }\n  Neuron.connection.uid = function() {\n    return connections++;\n  }\n  Neuron.quantity = function() {\n    return {\n      neurons: neurons,\n      connections: connections\n    }\n  }\n})();\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)(module)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// export\nif (module) module.exports = Trainer;\n\n/*******************************************************************************************\n                                        TRAINER\n*******************************************************************************************/\n\n//+ Jonas Raoni Soares Silva\n//@ http://jsfromhell.com/array/shuffle [v1.0]\nfunction shuffleInplace(o) { //v1.0\n  for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n  return o;\n};\n\nfunction Trainer(network, options) {\n  options = options || {};\n  this.network = network;\n  this.rate = options.rate || .2;\n  this.iterations = options.iterations || 100000;\n  this.error = options.error || .005;\n  this.cost = options.cost || null;\n  this.crossValidate = options.crossValidate || null;\n}\n\nTrainer.prototype = {\n\n  // trains any given set to a network\n  train: function(set, options) {\n\n    var error = 1;\n    var iterations = bucketSize = 0;\n    var abort = false;\n    var currentRate;\n    var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n    var crossValidate = false, testSet, trainSet;\n\n    var start = Date.now();\n\n    if (options) {\n      if (options.iterations)\n        this.iterations = options.iterations;\n      if (options.error)\n        this.error = options.error;\n      if (options.rate)\n        this.rate = options.rate;\n      if (options.cost)\n        this.cost = options.cost;\n      if (options.schedule)\n        this.schedule = options.schedule;\n      if (options.customLog){\n        // for backward compatibility with code that used customLog\n        console.log('Deprecated: use schedule instead of customLog')\n        this.schedule = options.customLog;\n      }\n      if (this.crossValidate || options.crossValidate) {\n        if(!this.crossValidate) this.crossValidate = {};\n        crossValidate = true;\n        if (options.crossValidate.testSize)\n          this.crossValidate.testSize = options.crossValidate.testSize;\n        if (options.crossValidate.testError)\n          this.crossValidate.testError = options.crossValidate.testError;\n      }\n    }\n\n    currentRate = this.rate;\n    if(Array.isArray(this.rate)) {\n      var bucketSize = Math.floor(this.iterations / this.rate.length);\n    }\n\n    if(crossValidate) {\n      var numTrain = Math.ceil((1 - this.crossValidate.testSize) * set.length);\n      trainSet = set.slice(0, numTrain);\n      testSet = set.slice(numTrain);\n    }\n\n    var lastError = 0;\n    while ((!abort && iterations < this.iterations && error > this.error)) {\n      if (crossValidate && error <= this.crossValidate.testError) {\n        break;\n      }\n\n      var currentSetSize = set.length;\n      error = 0;\n      iterations++;\n\n      if(bucketSize > 0) {\n        var currentBucket = Math.floor(iterations / bucketSize);\n        currentRate = this.rate[currentBucket] || currentRate;\n      }\n      \n      if(typeof this.rate === 'function') {\n        currentRate = this.rate(iterations, lastError);\n      }\n\n      if (crossValidate) {\n        this._trainSet(trainSet, currentRate, cost);\n        error += this.test(testSet).error;\n        currentSetSize = 1;\n      } else {\n        error += this._trainSet(set, currentRate, cost);\n        currentSetSize = set.length;\n      }\n\n      // check error\n      error /= currentSetSize;\n      lastError = error;\n\n      if (options) {\n        if (this.schedule && this.schedule.every && iterations %\n          this.schedule.every == 0)\n          abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate });\n        else if (options.log && iterations % options.log == 0) {\n          console.log('iterations', iterations, 'error', error, 'rate', currentRate);\n        };\n        if (options.shuffle)\n          shuffleInplace(set);\n      }\n    }\n\n    var results = {\n      error: error,\n      iterations: iterations,\n      time: Date.now() - start\n    };\n\n    return results;\n  },\n\n  // trains any given set to a network, using a WebWorker (only for the browser). Returns a Promise of the results.\n  trainAsync: function(set, options) {\n    var train = this.workerTrain.bind(this);\n    return new Promise(function(resolve, reject) {\n      try {\n        train(set, resolve, options, true)\n      } catch(e) {\n        reject(e)\n      }\n    })\n  },\n\n  // preforms one training epoch and returns the error (private function used in this.train)\n  _trainSet: function(set, currentRate, costFunction) {\n    var errorSum = 0;\n    for (var train in set) {\n      var input = set[train].input;\n      var target = set[train].output;\n\n      var output = this.network.activate(input);\n      this.network.propagate(currentRate, target);\n\n      errorSum += costFunction(target, output);\n    }\n    return errorSum;\n  },\n\n  // tests a set and returns the error and elapsed time\n  test: function(set, options) {\n\n    var error = 0;\n    var input, output, target;\n    var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n\n    var start = Date.now();\n\n    for (var test in set) {\n      input = set[test].input;\n      target = set[test].output;\n      output = this.network.activate(input);\n      error += cost(target, output);\n    }\n\n    error /= set.length;\n\n    var results = {\n      error: error,\n      time: Date.now() - start\n    };\n\n    return results;\n  },\n\n  // trains any given set to a network using a WebWorker [deprecated: use trainAsync instead]\n  workerTrain: function(set, callback, options, suppressWarning) {\n\n    if (!suppressWarning) {\n      console.warn('Deprecated: do not use `workerTrain`, use `trainAsync` instead.')\n    }\n    var that = this;\n\n    if (!this.network.optimized)\n      this.network.optimize();\n\n    // Create a new worker\n    var worker = this.network.worker(this.network.optimized.memory, set, options);\n\n    // train the worker\n    worker.onmessage = function(e) {\n      switch(e.data.action) {\n          case 'done':\n            var iterations = e.data.message.iterations;\n            var error = e.data.message.error;\n            var time = e.data.message.time;\n\n            that.network.optimized.ownership(e.data.memoryBuffer);\n\n            // Done callback\n            callback({\n              error: error,\n              iterations: iterations,\n              time: time\n            });\n\n            // Delete the worker and all its associated memory\n            worker.terminate();\n          break;\n\n          case 'log':\n            console.log(e.data.message);\n\n          case 'schedule':\n            if (options && options.schedule && typeof options.schedule.do === 'function') {\n              var scheduled = options.schedule.do\n              scheduled(e.data.message)\n            }\n          break;\n      }\n    };\n\n    // Start the worker\n    worker.postMessage({action: 'startTraining'});\n  },\n\n  // trains an XOR to the network\n  XOR: function(options) {\n\n    if (this.network.inputs() != 2 || this.network.outputs() != 1)\n      throw new Error(\"Incompatible network (2 inputs, 1 output)\");\n\n    var defaults = {\n      iterations: 100000,\n      log: false,\n      shuffle: true,\n      cost: Trainer.cost.MSE\n    };\n\n    if (options)\n      for (var i in options)\n        defaults[i] = options[i];\n\n    return this.train([{\n      input: [0, 0],\n      output: [0]\n    }, {\n      input: [1, 0],\n      output: [1]\n    }, {\n      input: [0, 1],\n      output: [1]\n    }, {\n      input: [1, 1],\n      output: [0]\n    }], defaults);\n  },\n\n  // trains the network to pass a Distracted Sequence Recall test\n  DSR: function(options) {\n    options = options || {};\n\n    var targets = options.targets || [2, 4, 7, 8];\n    var distractors = options.distractors || [3, 5, 6, 9];\n    var prompts = options.prompts || [0, 1];\n    var length = options.length || 24;\n    var criterion = options.success || 0.95;\n    var iterations = options.iterations || 100000;\n    var rate = options.rate || .1;\n    var log = options.log || 0;\n    var schedule = options.schedule || {};\n    var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\n    var trial, correct, i, j, success;\n    trial = correct = i = j = success = 0;\n    var error = 1,\n      symbols = targets.length + distractors.length + prompts.length;\n\n    var noRepeat = function(range, avoid) {\n      var number = Math.random() * range | 0;\n      var used = false;\n      for (var i in avoid)\n        if (number == avoid[i])\n          used = true;\n      return used ? noRepeat(range, avoid) : number;\n    };\n\n    var equal = function(prediction, output) {\n      for (var i in prediction)\n        if (Math.round(prediction[i]) != output[i])\n          return false;\n      return true;\n    };\n\n    var start = Date.now();\n\n    while (trial < iterations && (success < criterion || trial % 1000 != 0)) {\n      // generate sequence\n      var sequence = [],\n        sequenceLength = length - prompts.length;\n      for (i = 0; i < sequenceLength; i++) {\n        var any = Math.random() * distractors.length | 0;\n        sequence.push(distractors[any]);\n      }\n      var indexes = [],\n        positions = [];\n      for (i = 0; i < prompts.length; i++) {\n        indexes.push(Math.random() * targets.length | 0);\n        positions.push(noRepeat(sequenceLength, positions));\n      }\n      positions = positions.sort();\n      for (i = 0; i < prompts.length; i++) {\n        sequence[positions[i]] = targets[indexes[i]];\n        sequence.push(prompts[i]);\n      }\n\n      //train sequence\n      var distractorsCorrect;\n      var targetsCorrect = distractorsCorrect = 0;\n      error = 0;\n      for (i = 0; i < length; i++) {\n        // generate input from sequence\n        var input = [];\n        for (j = 0; j < symbols; j++)\n          input[j] = 0;\n        input[sequence[i]] = 1;\n\n        // generate target output\n        var output = [];\n        for (j = 0; j < targets.length; j++)\n          output[j] = 0;\n\n        if (i >= sequenceLength) {\n          var index = i - sequenceLength;\n          output[indexes[index]] = 1;\n        }\n\n        // check result\n        var prediction = this.network.activate(input);\n\n        if (equal(prediction, output))\n          if (i < sequenceLength)\n            distractorsCorrect++;\n          else\n            targetsCorrect++;\n        else {\n          this.network.propagate(rate, output);\n        }\n\n        error += cost(output, prediction);\n\n        if (distractorsCorrect + targetsCorrect == length)\n          correct++;\n      }\n\n      // calculate error\n      if (trial % 1000 == 0)\n        correct = 0;\n      trial++;\n      var divideError = trial % 1000;\n      divideError = divideError == 0 ? 1000 : divideError;\n      success = correct / divideError;\n      error /= length;\n\n      // log\n      if (log && trial % log == 0)\n        console.log(\"iterations:\", trial, \" success:\", success, \" correct:\",\n          correct, \" time:\", Date.now() - start, \" error:\", error);\n      if (schedule.do && schedule.every && trial % schedule.every == 0)\n        schedule.do({\n          iterations: trial,\n          success: success,\n          error: error,\n          time: Date.now() - start,\n          correct: correct\n        });\n    }\n\n    return {\n      iterations: trial,\n      success: success,\n      error: error,\n      time: Date.now() - start\n    }\n  },\n\n  // train the network to learn an Embeded Reber Grammar\n  ERG: function(options) {\n\n    options = options || {};\n    var iterations = options.iterations || 150000;\n    var criterion = options.error || .05;\n    var rate = options.rate || .1;\n    var log = options.log || 500;\n    var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\n    // gramar node\n    var Node = function() {\n      this.paths = [];\n    };\n    Node.prototype = {\n      connect: function(node, value) {\n        this.paths.push({\n          node: node,\n          value: value\n        });\n        return this;\n      },\n      any: function() {\n        if (this.paths.length == 0)\n          return false;\n        var index = Math.random() * this.paths.length | 0;\n        return this.paths[index];\n      },\n      test: function(value) {\n        for (var i in this.paths)\n          if (this.paths[i].value == value)\n            return this.paths[i];\n        return false;\n      }\n    };\n\n    var reberGrammar = function() {\n\n      // build a reber grammar\n      var output = new Node();\n      var n1 = (new Node()).connect(output, \"E\");\n      var n2 = (new Node()).connect(n1, \"S\");\n      var n3 = (new Node()).connect(n1, \"V\").connect(n2, \"P\");\n      var n4 = (new Node()).connect(n2, \"X\");\n      n4.connect(n4, \"S\");\n      var n5 = (new Node()).connect(n3, \"V\");\n      n5.connect(n5, \"T\");\n      n2.connect(n5, \"X\");\n      var n6 = (new Node()).connect(n4, \"T\").connect(n5, \"P\");\n      var input = (new Node()).connect(n6, \"B\");\n\n      return {\n        input: input,\n        output: output\n      }\n    };\n\n    // build an embeded reber grammar\n    var embededReberGrammar = function() {\n      var reber1 = reberGrammar();\n      var reber2 = reberGrammar();\n\n      var output = new Node();\n      var n1 = (new Node).connect(output, \"E\");\n      reber1.output.connect(n1, \"T\");\n      reber2.output.connect(n1, \"P\");\n      var n2 = (new Node).connect(reber1.input, \"P\").connect(reber2.input,\n        \"T\");\n      var input = (new Node).connect(n2, \"B\");\n\n      return {\n        input: input,\n        output: output\n      }\n\n    };\n\n    // generate an ERG sequence\n    var generate = function() {\n      var node = embededReberGrammar().input;\n      var next = node.any();\n      var str = \"\";\n      while (next) {\n        str += next.value;\n        next = next.node.any();\n      }\n      return str;\n    };\n\n    // test if a string matches an embeded reber grammar\n    var test = function(str) {\n      var node = embededReberGrammar().input;\n      var i = 0;\n      var ch = str.charAt(i);\n      while (i < str.length) {\n        var next = node.test(ch);\n        if (!next)\n          return false;\n        node = next.node;\n        ch = str.charAt(++i);\n      }\n      return true;\n    };\n\n    // helper to check if the output and the target vectors match\n    var different = function(array1, array2) {\n      var max1 = 0;\n      var i1 = -1;\n      var max2 = 0;\n      var i2 = -1;\n      for (var i in array1) {\n        if (array1[i] > max1) {\n          max1 = array1[i];\n          i1 = i;\n        }\n        if (array2[i] > max2) {\n          max2 = array2[i];\n          i2 = i;\n        }\n      }\n\n      return i1 != i2;\n    };\n\n    var iteration = 0;\n    var error = 1;\n    var table = {\n      \"B\": 0,\n      \"P\": 1,\n      \"T\": 2,\n      \"X\": 3,\n      \"S\": 4,\n      \"E\": 5\n    };\n\n    var start = Date.now();\n    while (iteration < iterations && error > criterion) {\n      var i = 0;\n      error = 0;\n\n      // ERG sequence to learn\n      var sequence = generate();\n\n      // input\n      var read = sequence.charAt(i);\n      // target\n      var predict = sequence.charAt(i + 1);\n\n      // train\n      while (i < sequence.length - 1) {\n        var input = [];\n        var target = [];\n        for (var j = 0; j < 6; j++) {\n          input[j] = 0;\n          target[j] = 0;\n        }\n        input[table[read]] = 1;\n        target[table[predict]] = 1;\n\n        var output = this.network.activate(input);\n\n        if (different(output, target))\n          this.network.propagate(rate, target);\n\n        read = sequence.charAt(++i);\n        predict = sequence.charAt(i + 1);\n\n        error += cost(target, output);\n      }\n      error /= sequence.length;\n      iteration++;\n      if (iteration % log == 0) {\n        console.log(\"iterations:\", iteration, \" time:\", Date.now() - start,\n          \" error:\", error);\n      }\n    }\n\n    return {\n      iterations: iteration,\n      error: error,\n      time: Date.now() - start,\n      test: test,\n      generate: generate\n    }\n  },\n\n  timingTask: function(options){\n\n    if (this.network.inputs() != 2 || this.network.outputs() != 1)\n      throw new Error(\"Invalid Network: must have 2 inputs and one output\");\n\n    if (typeof options == 'undefined')\n      options = {};\n\n    // helper\n    function getSamples (trainingSize, testSize){\n\n      // sample size\n      var size = trainingSize + testSize;\n\n      // generate samples\n      var t = 0;\n      var set = [];\n      for (var i = 0; i < size; i++) {\n        set.push({ input: [0,0], output: [0] });\n      }\n      while(t < size - 20) {\n          var n = Math.round(Math.random() * 20);\n          set[t].input[0] = 1;\n          for (var j = t; j <= t + n; j++){\n              set[j].input[1] = n / 20;\n              set[j].output[0] = 0.5;\n          }\n          t += n;\n          n = Math.round(Math.random() * 20);\n          for (var k = t+1; k <= (t + n) &&  k < size; k++)\n              set[k].input[1] = set[t].input[1];\n          t += n;\n      }\n\n      // separate samples between train and test sets\n      var trainingSet = []; var testSet = [];\n      for (var l = 0; l < size; l++)\n          (l < trainingSize ? trainingSet : testSet).push(set[l]);\n\n      // return samples\n      return {\n          train: trainingSet,\n          test: testSet\n      }\n    }\n\n    var iterations = options.iterations || 200;\n    var error = options.error || .005;\n    var rate = options.rate || [.03, .02];\n    var log = options.log === false ? false : options.log || 10;\n    var cost = options.cost || this.cost || Trainer.cost.MSE;\n    var trainingSamples = options.trainSamples || 7000;\n    var testSamples = options.trainSamples || 1000;\n\n    // samples for training and testing\n    var samples = getSamples(trainingSamples, testSamples);\n\n    // train\n    var result = this.train(samples.train, {\n      rate: rate,\n      log: log,\n      iterations: iterations,\n      error: error,\n      cost: cost\n    });\n\n    return {\n      train: result,\n      test: this.test(samples.test)\n    }\n  }\n};\n\n// Built-in cost functions\nTrainer.cost = {\n  // Eq. 9\n  CROSS_ENTROPY: function(target, output)\n  {\n    var crossentropy = 0;\n    for (var i in output)\n      crossentropy -= (target[i] * Math.log(output[i]+1e-15)) + ((1-target[i]) * Math.log((1+1e-15)-output[i])); // +1e-15 is a tiny push away to avoid Math.log(0)\n    return crossentropy;\n  },\n  MSE: function(target, output)\n  {\n    var mse = 0;\n    for (var i in output)\n      mse += Math.pow(target[i] - output[i], 2);\n    return mse / output.length;\n  },\n  BINARY: function(target, output){\n    var misses = 0;\n    for (var i in output)\n      misses += Math.round(target[i] * 2) != Math.round(output[i] * 2);\n    return misses;\n  }\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)(module)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.3.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (false) {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    } )); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdateHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdateHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = {\n  key: 1,\n  ref: 1,\n  slot: 1\n};\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key] || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var result = Object.create(null);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (isUndef(Ctor.cid)) {\n    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);\n    if (Ctor === undefined) {\n      // return nothing if this is indeed an async component\n      // wait for the callback to trigger parent update.\n      return\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return this\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.3.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (isUndef(value)) {\n    return ''\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  var res = '';\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(value[i])) {\n        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (ref.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      \"production\" !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (false\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    false\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, warn$3)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, warn$3)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (false) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}}\"\n}\n\nfunction genForScopedSlot (key, el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el)) +\n    '})'\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (false) {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Vue$3);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(15)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nvar core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar anObject       = __webpack_require__(30)\n  , IE8_DOM_DEFINE = __webpack_require__(35)\n  , toPrimitive    = __webpack_require__(37)\n  , dP             = Object.defineProperty;\n\nexports.f = __webpack_require__(3) ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = { \"default\": __webpack_require__(28), __esModule: true };\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(38);\nvar $Object = __webpack_require__(11).Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(4);\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// optional / simple context binding\nvar aFunction = __webpack_require__(29);\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar isObject = __webpack_require__(4)\n  , document = __webpack_require__(13).document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar global    = __webpack_require__(13)\n  , core      = __webpack_require__(11)\n  , ctx       = __webpack_require__(31)\n  , hide      = __webpack_require__(34)\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar dP         = __webpack_require__(14)\n  , createDesc = __webpack_require__(36);\nmodule.exports = __webpack_require__(3) ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = !__webpack_require__(3) && !__webpack_require__(12)(function(){\n  return Object.defineProperty(__webpack_require__(32)('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports) {\n\nmodule.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = __webpack_require__(4);\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar $export = __webpack_require__(33);\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !__webpack_require__(3), 'Object', {defineProperty: __webpack_require__(14).f});\n\n/***/ }),\n/* 39 */,\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (true) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n      return _;\n    }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(15), __webpack_require__(0)(module)))\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(module) {// import\nvar Layer   = __webpack_require__(5)\n,   Network = __webpack_require__(6)\n,   Trainer = __webpack_require__(8)\n\n/*******************************************************************************************\n                                        ARCHITECT\n*******************************************************************************************/\n\n// Collection of useful built-in architectures\nvar Architect = {\n\n  // Multilayer Perceptron\n  Perceptron: function Perceptron() {\n\n    var args = Array.prototype.slice.call(arguments); // convert arguments to Array\n    if (args.length < 3)\n      throw new Error(\"not enough layers (minimum 3) !!\");\n\n    var inputs = args.shift(); // first argument\n    var outputs = args.pop(); // last argument\n    var layers = args; // all the arguments in the middle\n\n    var input = new Layer(inputs);\n    var hidden = [];\n    var output = new Layer(outputs);\n\n    var previous = input;\n\n    // generate hidden layers\n    for (var level in layers) {\n      var size = layers[level];\n      var layer = new Layer(size);\n      hidden.push(layer);\n      previous.project(layer);\n      previous = layer;\n    }\n    previous.project(output);\n\n    // set layers of the neural network\n    this.set({\n      input: input,\n      hidden: hidden,\n      output: output\n    });\n\n    // trainer for the network\n    this.trainer = new Trainer(this);\n  },\n\n  // Multilayer Long Short-Term Memory\n  LSTM: function LSTM() {\n\n    var args = Array.prototype.slice.call(arguments); // convert arguments to array\n    if (args.length < 3)\n      throw new Error(\"not enough layers (minimum 3) !!\");\n\n    var last = args.pop();\n    var option = {\n      peepholes: Layer.connectionType.ALL_TO_ALL,\n      hiddenToHidden: false,\n      outputToHidden: false,\n      outputToGates: false,\n      inputToOutput: true,\n    };\n    if (typeof last != 'number') {\n      var outputs = args.pop();\n      if (last.hasOwnProperty('peepholes'))\n        option.peepholes = last.peepholes;\n      if (last.hasOwnProperty('hiddenToHidden'))\n        option.hiddenToHidden = last.hiddenToHidden;\n      if (last.hasOwnProperty('outputToHidden'))\n        option.outputToHidden = last.outputToHidden;\n      if (last.hasOwnProperty('outputToGates'))\n        option.outputToGates = last.outputToGates;\n      if (last.hasOwnProperty('inputToOutput'))\n        option.inputToOutput = last.inputToOutput;\n    } else\n      var outputs = last;\n\n    var inputs = args.shift();\n    var layers = args;\n\n    var inputLayer = new Layer(inputs);\n    var hiddenLayers = [];\n    var outputLayer = new Layer(outputs);\n\n    var previous = null;\n\n    // generate layers\n    for (var layer in layers) {\n      // generate memory blocks (memory cell and respective gates)\n      var size = layers[layer];\n\n      var inputGate = new Layer(size).set({\n        bias: 1\n      });\n      var forgetGate = new Layer(size).set({\n        bias: 1\n      });\n      var memoryCell = new Layer(size);\n      var outputGate = new Layer(size).set({\n        bias: 1\n      });\n\n      hiddenLayers.push(inputGate);\n      hiddenLayers.push(forgetGate);\n      hiddenLayers.push(memoryCell);\n      hiddenLayers.push(outputGate);\n\n      // connections from input layer\n      var input = inputLayer.project(memoryCell);\n      inputLayer.project(inputGate);\n      inputLayer.project(forgetGate);\n      inputLayer.project(outputGate);\n\n      // connections from previous memory-block layer to this one\n      if (previous != null) {\n        var cell = previous.project(memoryCell);\n        previous.project(inputGate);\n        previous.project(forgetGate);\n        previous.project(outputGate);\n      }\n\n      // connections from memory cell\n      var output = memoryCell.project(outputLayer);\n\n      // self-connection\n      var self = memoryCell.project(memoryCell);\n\n      // hidden to hidden recurrent connection\n      if (option.hiddenToHidden)\n        memoryCell.project(memoryCell, Layer.connectionType.ALL_TO_ELSE);\n\n      // out to hidden recurrent connection\n      if (option.outputToHidden)\n        outputLayer.project(memoryCell);\n\n      // out to gates recurrent connection\n      if (option.outputToGates) {\n        outputLayer.project(inputGate);\n        outputLayer.project(outputGate);\n        outputLayer.project(forgetGate);\n      }\n\n      // peepholes\n      memoryCell.project(inputGate, option.peepholes);\n      memoryCell.project(forgetGate, option.peepholes);\n      memoryCell.project(outputGate, option.peepholes);\n\n      // gates\n      inputGate.gate(input, Layer.gateType.INPUT);\n      forgetGate.gate(self, Layer.gateType.ONE_TO_ONE);\n      outputGate.gate(output, Layer.gateType.OUTPUT);\n      if (previous != null)\n        inputGate.gate(cell, Layer.gateType.INPUT);\n\n      previous = memoryCell;\n    }\n\n    // input to output direct connection\n    if (option.inputToOutput)\n      inputLayer.project(outputLayer);\n\n    // set the layers of the neural network\n    this.set({\n      input: inputLayer,\n      hidden: hiddenLayers,\n      output: outputLayer\n    });\n\n    // trainer\n    this.trainer = new Trainer(this);\n  },\n\n  // Liquid State Machine\n  Liquid: function Liquid(inputs, hidden, outputs, connections, gates) {\n\n    // create layers\n    var inputLayer = new Layer(inputs);\n    var hiddenLayer = new Layer(hidden);\n    var outputLayer = new Layer(outputs);\n\n    // make connections and gates randomly among the neurons\n    var neurons = hiddenLayer.neurons();\n    var connectionList = [];\n\n    for (var i = 0; i < connections; i++) {\n      // connect two random neurons\n      var from = Math.random() * neurons.length | 0;\n      var to = Math.random() * neurons.length | 0;\n      var connection = neurons[from].project(neurons[to]);\n      connectionList.push(connection);\n    }\n\n    for (var j = 0; j < gates; j++) {\n      // pick a random gater neuron\n      var gater = Math.random() * neurons.length | 0;\n      // pick a random connection to gate\n      var connection = Math.random() * connectionList.length | 0;\n      // let the gater gate the connection\n      neurons[gater].gate(connectionList[connection]);\n    }\n\n    // connect the layers\n    inputLayer.project(hiddenLayer);\n    hiddenLayer.project(outputLayer);\n\n    // set the layers of the network\n    this.set({\n      input: inputLayer,\n      hidden: [hiddenLayer],\n      output: outputLayer\n    });\n\n    // trainer\n    this.trainer = new Trainer(this);\n  },\n\n  Hopfield: function Hopfield(size) {\n\n    var inputLayer = new Layer(size);\n    var outputLayer = new Layer(size);\n\n    inputLayer.project(outputLayer, Layer.connectionType.ALL_TO_ALL);\n\n    this.set({\n      input: inputLayer,\n      hidden: [],\n      output: outputLayer\n    });\n\n    var trainer = new Trainer(this);\n\n    var proto = Architect.Hopfield.prototype;\n\n    proto.learn = proto.learn || function(patterns)\n    {\n      var set = [];\n      for (var p in patterns)\n        set.push({\n          input: patterns[p],\n          output: patterns[p]\n        });\n\n      return trainer.train(set, {\n        iterations: 500000,\n        error: .00005,\n        rate: 1\n      });\n    };\n\n    proto.feed = proto.feed || function(pattern)\n    {\n      var output = this.activate(pattern);\n\n      var pattern = [];\n      for (var i in output)\n        pattern[i] = output[i] > .5 ? 1 : 0;\n\n      return pattern;\n    }\n  }\n}\n\n// Extend prototype chain (so every architectures is an instance of Network)\nfor (var architecture in Architect) {\n  Architect[architecture].prototype = new Network();\n  Architect[architecture].prototype.constructor = Architect[architecture];\n}\n\n// export\nif (module) module.exports = Architect;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)(module)))\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var Synaptic = {\n    Neuron: __webpack_require__(7),\n    Layer: __webpack_require__(5),\n    Network: __webpack_require__(6),\n    Trainer: __webpack_require__(8),\n    Architect: __webpack_require__(41)\n};\n\n// CommonJS & AMD\nif (true)\n{\n  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function(){ return Synaptic }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n}\n\n// Node.js\nif (typeof module !== 'undefined' && module.exports)\n{\n  module.exports = Synaptic;\n}\n\n// Browser\nif (typeof window == 'object')\n{\n  (function(){\n    var oldSynaptic = window['synaptic'];\n    Synaptic.ninja = function(){\n      window['synaptic'] = oldSynaptic;\n      return Synaptic;\n    };\n  })();\n\n  window['synaptic'] = Synaptic;\n}\n\n\n/***/ }),\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.6.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (false) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (false) {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    \"production\" !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (false) {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (false) {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (false) {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          \"production\" !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.6.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (VueRouter);\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(49)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.fe307f726d50eab6d6b7.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 0\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nexports.default = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/classCallCheck.js\n// module id = 1\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\n\nvar _defineProperty = require(\"../core-js/object/define-property\");\n\nvar _defineProperty2 = _interopRequireDefault(_defineProperty);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      (0, _defineProperty2.default)(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/helpers/createClass.js\n// module id = 2\n// module chunks = 0","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function(){\n  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_descriptors.js\n// module id = 3\n// module chunks = 0","module.exports = function(it){\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_is-object.js\n// module id = 4\n// module chunks = 0","// export\nif (module) module.exports = Layer;\n\n// import\nvar Neuron  = require('./neuron')\n,   Network = require('./network')\n\n/*******************************************************************************************\n                                            LAYER\n*******************************************************************************************/\n\nfunction Layer(size, label) {\n  this.size = size | 0;\n  this.list = [];\n  this.label = label || null;\n  this.connectedTo = [];\n\n  while (size--) {\n    var neuron = new Neuron();\n    this.list.push(neuron);\n  }\n}\n\nLayer.prototype = {\n\n  // activates all the neurons in the layer\n  activate: function(input) {\n\n    var activations = [];\n\n    if (typeof input != 'undefined') {\n      if (input.length != this.size)\n        throw new Error(\"INPUT size and LAYER size must be the same to activate!\");\n\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        var activation = neuron.activate(input[id]);\n        activations.push(activation);\n      }\n    } else {\n      for (var id in this.list) {\n        var neuron = this.list[id];\n        var activation = neuron.activate();\n        activations.push(activation);\n      }\n    }\n    return activations;\n  },\n\n  // propagates the error on all the neurons of the layer\n  propagate: function(rate, target) {\n\n    if (typeof target != 'undefined') {\n      if (target.length != this.size)\n        throw new Error(\"TARGET size and LAYER size must be the same to propagate!\");\n\n      for (var id = this.list.length - 1; id >= 0; id--) {\n        var neuron = this.list[id];\n        neuron.propagate(rate, target[id]);\n      }\n    } else {\n      for (var id = this.list.length - 1; id >= 0; id--) {\n        var neuron = this.list[id];\n        neuron.propagate(rate);\n      }\n    }\n  },\n\n  // projects a connection from this layer to another one\n  project: function(layer, type, weights) {\n\n    if (layer instanceof Network)\n      layer = layer.layers.input;\n\n    if (layer instanceof Layer) {\n      if (!this.connected(layer))\n        return new Layer.connection(this, layer, type, weights);\n    } else\n      throw new Error(\"Invalid argument, you can only project connections to LAYERS and NETWORKS!\");\n\n\n  },\n\n  // gates a connection betwenn two layers\n  gate: function(connection, type) {\n\n    if (type == Layer.gateType.INPUT) {\n      if (connection.to.size != this.size)\n        throw new Error(\"GATER layer and CONNECTION.TO layer must be the same size in order to gate!\");\n\n      for (var id in connection.to.list) {\n        var neuron = connection.to.list[id];\n        var gater = this.list[id];\n        for (var input in neuron.connections.inputs) {\n          var gated = neuron.connections.inputs[input];\n          if (gated.ID in connection.connections)\n            gater.gate(gated);\n        }\n      }\n    } else if (type == Layer.gateType.OUTPUT) {\n      if (connection.from.size != this.size)\n        throw new Error(\"GATER layer and CONNECTION.FROM layer must be the same size in order to gate!\");\n\n      for (var id in connection.from.list) {\n        var neuron = connection.from.list[id];\n        var gater = this.list[id];\n        for (var projected in neuron.connections.projected) {\n          var gated = neuron.connections.projected[projected];\n          if (gated.ID in connection.connections)\n            gater.gate(gated);\n        }\n      }\n    } else if (type == Layer.gateType.ONE_TO_ONE) {\n      if (connection.size != this.size)\n        throw new Error(\"The number of GATER UNITS must be the same as the number of CONNECTIONS to gate!\");\n\n      for (var id in connection.list) {\n        var gater = this.list[id];\n        var gated = connection.list[id];\n        gater.gate(gated);\n      }\n    }\n    connection.gatedfrom.push({layer: this, type: type});\n  },\n\n  // true or false whether the whole layer is self-connected or not\n  selfconnected: function() {\n\n    for (var id in this.list) {\n      var neuron = this.list[id];\n      if (!neuron.selfconnected())\n        return false;\n    }\n    return true;\n  },\n\n  // true of false whether the layer is connected to another layer (parameter) or not\n  connected: function(layer) {\n    // Check if ALL to ALL connection\n    var connections = 0;\n    for (var here in this.list) {\n      for (var there in layer.list) {\n        var from = this.list[here];\n        var to = layer.list[there];\n        var connected = from.connected(to);\n        if (connected.type == 'projected')\n          connections++;\n      }\n    }\n    if (connections == this.size * layer.size)\n      return Layer.connectionType.ALL_TO_ALL;\n\n    // Check if ONE to ONE connection\n    connections = 0;\n    for (var neuron in this.list) {\n      var from = this.list[neuron];\n      var to = layer.list[neuron];\n      var connected = from.connected(to);\n      if (connected.type == 'projected')\n        connections++;\n    }\n    if (connections == this.size)\n      return Layer.connectionType.ONE_TO_ONE;\n  },\n\n  // clears all the neuorns in the layer\n  clear: function() {\n    for (var id in this.list) {\n      var neuron = this.list[id];\n      neuron.clear();\n    }\n  },\n\n  // resets all the neurons in the layer\n  reset: function() {\n    for (var id in this.list) {\n      var neuron = this.list[id];\n      neuron.reset();\n    }\n  },\n\n  // returns all the neurons in the layer (array)\n  neurons: function() {\n    return this.list;\n  },\n\n  // adds a neuron to the layer\n  add: function(neuron) {\n    this.neurons[neuron.ID] = neuron || new Neuron();\n    this.list.push(neuron);\n    this.size++;\n  },\n\n  set: function(options) {\n    options = options || {};\n\n    for (var i in this.list) {\n      var neuron = this.list[i];\n      if (options.label)\n        neuron.label = options.label + '_' + neuron.ID;\n      if (options.squash)\n        neuron.squash = options.squash;\n      if (options.bias)\n        neuron.bias = options.bias;\n    }\n    return this;\n  }\n}\n\n// represents a connection from one layer to another, and keeps track of its weight and gain\nLayer.connection = function LayerConnection(fromLayer, toLayer, type, weights) {\n  this.ID = Layer.connection.uid();\n  this.from = fromLayer;\n  this.to = toLayer;\n  this.selfconnection = toLayer == fromLayer;\n  this.type = type;\n  this.connections = {};\n  this.list = [];\n  this.size = 0;\n  this.gatedfrom = [];\n\n  if (typeof this.type == 'undefined')\n  {\n    if (fromLayer == toLayer)\n      this.type = Layer.connectionType.ONE_TO_ONE;\n    else\n      this.type = Layer.connectionType.ALL_TO_ALL;\n  }\n\n  if (this.type == Layer.connectionType.ALL_TO_ALL ||\n      this.type == Layer.connectionType.ALL_TO_ELSE) {\n    for (var here in this.from.list) {\n      for (var there in this.to.list) {\n        var from = this.from.list[here];\n        var to = this.to.list[there];\n        if(this.type == Layer.connectionType.ALL_TO_ELSE && from == to)\n          continue;\n        var connection = from.project(to, weights);\n\n        this.connections[connection.ID] = connection;\n        this.size = this.list.push(connection);\n      }\n    }\n  } else if (this.type == Layer.connectionType.ONE_TO_ONE) {\n\n    for (var neuron in this.from.list) {\n      var from = this.from.list[neuron];\n      var to = this.to.list[neuron];\n      var connection = from.project(to, weights);\n\n      this.connections[connection.ID] = connection;\n      this.size = this.list.push(connection);\n    }\n  }\n\n  fromLayer.connectedTo.push(this);\n}\n\n// types of connections\nLayer.connectionType = {};\nLayer.connectionType.ALL_TO_ALL = \"ALL TO ALL\";\nLayer.connectionType.ONE_TO_ONE = \"ONE TO ONE\";\nLayer.connectionType.ALL_TO_ELSE = \"ALL TO ELSE\";\n\n// types of gates\nLayer.gateType = {};\nLayer.gateType.INPUT = \"INPUT\";\nLayer.gateType.OUTPUT = \"OUTPUT\";\nLayer.gateType.ONE_TO_ONE = \"ONE TO ONE\";\n\n(function() {\n  var connections = 0;\n  Layer.connection.uid = function() {\n    return connections++;\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/synaptic/src/layer.js\n// module id = 5\n// module chunks = 0","// export\nif (module) module.exports = Network;\n\n// import\nvar Neuron  = require('./neuron')\n,   Layer   = require('./layer')\n,   Trainer = require('./trainer')\n\n/*******************************************************************************************\n                                         NETWORK\n*******************************************************************************************/\n\nfunction Network(layers) {\n  if (typeof layers != 'undefined') {\n    this.layers = layers || {\n      input: null,\n      hidden: {},\n      output: null\n    };\n    this.optimized = null;\n  }\n}\nNetwork.prototype = {\n\n  // feed-forward activation of all the layers to produce an ouput\n  activate: function(input) {\n\n    if (this.optimized === false)\n    {\n      this.layers.input.activate(input);\n      for (var layer in this.layers.hidden)\n        this.layers.hidden[layer].activate();\n      return this.layers.output.activate();\n    }\n    else\n    {\n      if (this.optimized == null)\n        this.optimize();\n      return this.optimized.activate(input);\n    }\n  },\n\n  // back-propagate the error thru the network\n  propagate: function(rate, target) {\n\n    if (this.optimized === false)\n    {\n      this.layers.output.propagate(rate, target);\n      var reverse = [];\n      for (var layer in this.layers.hidden)\n        reverse.push(this.layers.hidden[layer]);\n      reverse.reverse();\n      for (var layer in reverse)\n        reverse[layer].propagate(rate);\n    }\n    else\n    {\n      if (this.optimized == null)\n        this.optimize();\n      this.optimized.propagate(rate, target);\n    }\n  },\n\n  // project a connection to another unit (either a network or a layer)\n  project: function(unit, type, weights) {\n\n    if (this.optimized)\n      this.optimized.reset();\n\n    if (unit instanceof Network)\n      return this.layers.output.project(unit.layers.input, type, weights);\n\n    if (unit instanceof Layer)\n      return this.layers.output.project(unit, type, weights);\n\n    throw new Error(\"Invalid argument, you can only project connections to LAYERS and NETWORKS!\");\n  },\n\n  // let this network gate a connection\n  gate: function(connection, type) {\n    if (this.optimized)\n      this.optimized.reset();\n    this.layers.output.gate(connection, type);\n  },\n\n  // clear all elegibility traces and extended elegibility traces (the network forgets its context, but not what was trained)\n  clear: function() {\n\n    this.restore();\n\n    var inputLayer = this.layers.input,\n      outputLayer = this.layers.output;\n\n    inputLayer.clear();\n    for (var layer in this.layers.hidden) {\n      var hiddenLayer = this.layers.hidden[layer];\n      hiddenLayer.clear();\n    }\n    outputLayer.clear();\n\n    if (this.optimized)\n      this.optimized.reset();\n  },\n\n  // reset all weights and clear all traces (ends up like a new network)\n  reset: function() {\n\n    this.restore();\n\n    var inputLayer = this.layers.input,\n      outputLayer = this.layers.output;\n\n    inputLayer.reset();\n    for (var layer in this.layers.hidden) {\n      var hiddenLayer = this.layers.hidden[layer];\n      hiddenLayer.reset();\n    }\n    outputLayer.reset();\n\n    if (this.optimized)\n      this.optimized.reset();\n  },\n\n  // hardcodes the behaviour of the whole network into a single optimized function\n  optimize: function() {\n\n    var that = this;\n    var optimized = {};\n    var neurons = this.neurons();\n\n    for (var i in neurons) {\n      var neuron = neurons[i].neuron;\n      var layer = neurons[i].layer;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n      optimized = neuron.optimize(optimized, layer);\n    }\n    for (var i in optimized.propagation_sentences)\n      optimized.propagation_sentences[i].reverse();\n    optimized.propagation_sentences.reverse();\n\n    var hardcode = \"\";\n    hardcode += \"var F = Float64Array ? new Float64Array(\" + optimized.memory +\n      \") : []; \";\n    for (var i in optimized.variables)\n      hardcode += \"F[\" + optimized.variables[i].id + \"] = \" + (optimized.variables[\n        i].value || 0) + \"; \";\n    hardcode += \"var activate = function(input){\\n\";\n    for (var i in optimized.inputs)\n      hardcode += \"F[\" + optimized.inputs[i] + \"] = input[\" + i + \"]; \";\n    for (var currentLayer in optimized.activation_sentences) {\n      if (optimized.activation_sentences[currentLayer].length > 0) {\n        for (var currentNeuron in optimized.activation_sentences[currentLayer]) {\n          hardcode += optimized.activation_sentences[currentLayer][currentNeuron].join(\" \");\n          hardcode += optimized.trace_sentences[currentLayer][currentNeuron].join(\" \");\n        }\n      }\n    }\n    hardcode += \" var output = []; \"\n    for (var i in optimized.outputs)\n      hardcode += \"output[\" + i + \"] = F[\" + optimized.outputs[i] + \"]; \";\n    hardcode += \"return output; }; \"\n    hardcode += \"var propagate = function(rate, target){\\n\";\n    hardcode += \"F[\" + optimized.variables.rate.id + \"] = rate; \";\n    for (var i in optimized.targets)\n      hardcode += \"F[\" + optimized.targets[i] + \"] = target[\" + i + \"]; \";\n    for (var currentLayer in optimized.propagation_sentences)\n      for (var currentNeuron in optimized.propagation_sentences[currentLayer])\n        hardcode += optimized.propagation_sentences[currentLayer][currentNeuron].join(\" \") + \" \";\n    hardcode += \" };\\n\";\n    hardcode +=\n      \"var ownership = function(memoryBuffer){\\nF = memoryBuffer;\\nthis.memory = F;\\n};\\n\";\n    hardcode +=\n      \"return {\\nmemory: F,\\nactivate: activate,\\npropagate: propagate,\\nownership: ownership\\n};\";\n    hardcode = hardcode.split(\";\").join(\";\\n\");\n\n    var constructor = new Function(hardcode);\n\n    var network = constructor();\n    network.data = {\n      variables: optimized.variables,\n      activate: optimized.activation_sentences,\n      propagate: optimized.propagation_sentences,\n      trace: optimized.trace_sentences,\n      inputs: optimized.inputs,\n      outputs: optimized.outputs,\n      check_activation: this.activate,\n      check_propagation: this.propagate\n    }\n\n    network.reset = function() {\n      if (that.optimized) {\n        that.optimized = null;\n        that.activate = network.data.check_activation;\n        that.propagate = network.data.check_propagation;\n      }\n    }\n\n    this.optimized = network;\n    this.activate = network.activate;\n    this.propagate = network.propagate;\n  },\n\n  // restores all the values from the optimized network the their respective objects in order to manipulate the network\n  restore: function() {\n    if (!this.optimized)\n      return;\n\n    var optimized = this.optimized;\n\n    var getValue = function() {\n      var args = Array.prototype.slice.call(arguments);\n\n      var unit = args.shift();\n      var prop = args.pop();\n\n      var id = prop + '_';\n      for (var property in args)\n        id += args[property] + '_';\n      id += unit.ID;\n\n      var memory = optimized.memory;\n      var variables = optimized.data.variables;\n\n      if (id in variables)\n        return memory[variables[id].id];\n      return 0;\n    }\n\n    var list = this.neurons();\n\n    // link id's to positions in the array\n    var ids = {};\n    for (var i in list) {\n      var neuron = list[i].neuron;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n\n      neuron.state = getValue(neuron, 'state');\n      neuron.old = getValue(neuron, 'old');\n      neuron.activation = getValue(neuron, 'activation');\n      neuron.bias = getValue(neuron, 'bias');\n\n      for (var input in neuron.trace.elegibility)\n        neuron.trace.elegibility[input] = getValue(neuron, 'trace',\n          'elegibility', input);\n\n      for (var gated in neuron.trace.extended)\n        for (var input in neuron.trace.extended[gated])\n          neuron.trace.extended[gated][input] = getValue(neuron, 'trace',\n            'extended', gated, input);\n    }\n\n    // get connections\n    for (var i in list) {\n      var neuron = list[i].neuron;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n\n      for (var j in neuron.connections.projected) {\n        var connection = neuron.connections.projected[j];\n        connection.weight = getValue(connection, 'weight');\n        connection.gain = getValue(connection, 'gain');\n      }\n    }\n  },\n\n  // returns all the neurons in the network\n  neurons: function() {\n\n    var neurons = [];\n\n    var inputLayer = this.layers.input.neurons(),\n      outputLayer = this.layers.output.neurons();\n\n    for (var neuron in inputLayer)\n      neurons.push({\n        neuron: inputLayer[neuron],\n        layer: 'input'\n      });\n\n    for (var layer in this.layers.hidden) {\n      var hiddenLayer = this.layers.hidden[layer].neurons();\n      for (var neuron in hiddenLayer)\n        neurons.push({\n          neuron: hiddenLayer[neuron],\n          layer: layer\n        });\n    }\n    for (var neuron in outputLayer)\n      neurons.push({\n        neuron: outputLayer[neuron],\n        layer: 'output'\n      });\n\n    return neurons;\n  },\n\n  // returns number of inputs of the network\n  inputs: function() {\n    return this.layers.input.size;\n  },\n\n  // returns number of outputs of hte network\n  outputs: function() {\n    return this.layers.output.size;\n  },\n\n  // sets the layers of the network\n  set: function(layers) {\n\n    this.layers = layers;\n    if (this.optimized)\n      this.optimized.reset();\n  },\n\n  setOptimize: function(bool){\n    this.restore();\n    if (this.optimized)\n      this.optimized.reset();\n    this.optimized = bool? null : false;\n  },\n\n  // returns a json that represents all the neurons and connections of the network\n  toJSON: function(ignoreTraces) {\n\n    this.restore();\n\n    var list = this.neurons();\n    var neurons = [];\n    var connections = [];\n\n    // link id's to positions in the array\n    var ids = {};\n    for (var i in list) {\n      var neuron = list[i].neuron;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n      ids[neuron.ID] = i;\n\n      var copy = {\n        trace: {\n          elegibility: {},\n          extended: {}\n        },\n        state: neuron.state,\n        old: neuron.old,\n        activation: neuron.activation,\n        bias: neuron.bias,\n        layer: list[i].layer\n      };\n\n      copy.squash = neuron.squash == Neuron.squash.LOGISTIC ? \"LOGISTIC\" :\n        neuron.squash == Neuron.squash.TANH ? \"TANH\" :\n        neuron.squash == Neuron.squash.IDENTITY ? \"IDENTITY\" :\n        neuron.squash == Neuron.squash.HLIM ? \"HLIM\" :\n        neuron.squash == Neuron.squash.RELU ? \"RELU\" :\n        null;\n\n      neurons.push(copy);\n    }\n\n    // get connections\n    for (var i in list) {\n      var neuron = list[i].neuron;\n      while (neuron.neuron)\n        neuron = neuron.neuron;\n\n      for (var j in neuron.connections.projected) {\n        var connection = neuron.connections.projected[j];\n        connections.push({\n          from: ids[connection.from.ID],\n          to: ids[connection.to.ID],\n          weight: connection.weight,\n          gater: connection.gater ? ids[connection.gater.ID] : null,\n        });\n      }\n      if (neuron.selfconnected())\n        connections.push({\n          from: ids[neuron.ID],\n          to: ids[neuron.ID],\n          weight: neuron.selfconnection.weight,\n          gater: neuron.selfconnection.gater ? ids[neuron.selfconnection.gater.ID] : null,\n        });\n    }\n\n    return {\n      neurons: neurons,\n      connections: connections\n    }\n  },\n\n  // export the topology into dot language which can be visualized as graphs using dot\n  /* example: ... console.log(net.toDotLang());\n              $ node example.js > example.dot\n              $ dot example.dot -Tpng > out.png\n  */\n  toDot: function(edgeConnection) {\n    if (! typeof edgeConnection)\n      edgeConnection = false;\n    var code = \"digraph nn {\\n    rankdir = BT\\n\";\n    var layers = [this.layers.input].concat(this.layers.hidden, this.layers.output);\n    for (var layer in layers) {\n      for (var to in layers[layer].connectedTo) { // projections\n        var connection = layers[layer].connectedTo[to];\n        var layerTo = connection.to;\n        var size = connection.size;\n        var layerID = layers.indexOf(layers[layer]);\n        var layerToID = layers.indexOf(layerTo);\n        /* http://stackoverflow.com/questions/26845540/connect-edges-with-graph-dot\n         * DOT does not support edge-to-edge connections\n         * This workaround produces somewhat weird graphs ...\n        */\n        if ( edgeConnection) {\n          if (connection.gatedfrom.length) {\n            var fakeNode = \"fake\" + layerID + \"_\" + layerToID;\n            code += \"    \" + fakeNode +\n              \" [label = \\\"\\\", shape = point, width = 0.01, height = 0.01]\\n\";\n            code += \"    \" + layerID + \" -> \" + fakeNode + \" [label = \" + size + \", arrowhead = none]\\n\";\n            code += \"    \" + fakeNode + \" -> \" + layerToID + \"\\n\";\n          } else\n            code += \"    \" + layerID + \" -> \" + layerToID + \" [label = \" + size + \"]\\n\";\n          for (var from in connection.gatedfrom) { // gatings\n            var layerfrom = connection.gatedfrom[from].layer;\n            var layerfromID = layers.indexOf(layerfrom);\n            code += \"    \" + layerfromID + \" -> \" + fakeNode + \" [color = blue]\\n\";\n          }\n        } else {\n          code += \"    \" + layerID + \" -> \" + layerToID + \" [label = \" + size + \"]\\n\";\n          for (var from in connection.gatedfrom) { // gatings\n            var layerfrom = connection.gatedfrom[from].layer;\n            var layerfromID = layers.indexOf(layerfrom);\n            code += \"    \" + layerfromID + \" -> \" + layerToID + \" [color = blue]\\n\";\n          }\n        }\n      }\n    }\n    code += \"}\\n\";\n    return {\n      code: code,\n      link: \"https://chart.googleapis.com/chart?chl=\" + escape(code.replace(\"/ /g\", \"+\")) + \"&cht=gv\"\n    }\n  },\n\n  // returns a function that works as the activation of the network and can be used without depending on the library\n  standalone: function() {\n    if (!this.optimized)\n      this.optimize();\n\n    var data = this.optimized.data;\n\n    // build activation function\n    var activation = \"function (input) {\\n\";\n\n    // build inputs\n    for (var i in data.inputs)\n      activation += \"F[\" + data.inputs[i] + \"] = input[\" + i + \"];\\n\";\n\n    // build network activation\n    for (var neuron in data.activate) { // shouldn't this be layer?\n      for (var sentence in data.activate[neuron])\n        activation += data.activate[neuron][sentence].join('') + \"\\n\";\n    }\n\n    // build outputs\n    activation += \"var output = [];\\n\";\n    for (var i in data.outputs)\n      activation += \"output[\" + i + \"] = F[\" + data.outputs[i] + \"];\\n\";\n    activation += \"return output;\\n}\";\n\n    // reference all the positions in memory\n    var memory = activation.match(/F\\[(\\d+)\\]/g);\n    var dimension = 0;\n    var ids = {};\n    for (var address in memory) {\n      var tmp = memory[address].match(/\\d+/)[0];\n      if (!(tmp in ids)) {\n        ids[tmp] = dimension++;\n      }\n    }\n    var hardcode = \"F = {\\n\";\n    for (var i in ids)\n      hardcode += ids[i] + \": \" + this.optimized.memory[i] + \",\\n\";\n    hardcode = hardcode.substring(0, hardcode.length - 2) + \"\\n};\\n\";\n    hardcode = \"var run = \" + activation.replace(/F\\[(\\d+)]/g, function(\n      index) {\n      return 'F[' + ids[index.match(/\\d+/)[0]] + ']'\n    }).replace(\"{\\n\", \"{\\n\" + hardcode + \"\") + \";\\n\";\n    hardcode += \"return run\";\n\n    // return standalone function\n    return new Function(hardcode)();\n  },\n\n\n  // Return a HTML5 WebWorker specialized on training the network stored in `memory`.\n  // Train based on the given dataSet and options.\n  // The worker returns the updated `memory` when done.\n  worker: function(memory, set, options) {\n\n    // Copy the options and set defaults (options might be different for each worker)\n    var workerOptions = {};\n    if(options) workerOptions = options;\n    workerOptions.rate = options.rate || .2;\n    workerOptions.iterations = options.iterations || 100000;\n    workerOptions.error = options.error || .005;\n    workerOptions.cost = options.cost || null;\n    workerOptions.crossValidate = options.crossValidate || null;\n\n    // Cost function might be different for each worker\n    costFunction = \"var cost = \" + (options && options.cost || this.cost || Trainer.cost.MSE) + \";\\n\";\n    var workerFunction = Network.getWorkerSharedFunctions();\n    workerFunction = workerFunction.replace(/var cost = options && options\\.cost \\|\\| this\\.cost \\|\\| Trainer\\.cost\\.MSE;/g, costFunction);\n\n    // Set what we do when training is finished\n    workerFunction = workerFunction.replace('return results;',\n                      'postMessage({action: \"done\", message: results, memoryBuffer: F}, [F.buffer]);');\n\n    // Replace log with postmessage\n    workerFunction = workerFunction.replace(\"console.log('iterations', iterations, 'error', error, 'rate', currentRate)\",\n              \"postMessage({action: 'log', message: {\\n\" +\n                  \"iterations: iterations,\\n\" +\n                  \"error: error,\\n\" +\n                  \"rate: currentRate\\n\" +\n                \"}\\n\" +\n              \"})\");\n\n    // Replace schedule with postmessage\n    workerFunction = workerFunction.replace(\"abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate })\",\n              \"postMessage({action: 'schedule', message: {\\n\" +\n                  \"iterations: iterations,\\n\" +\n                  \"error: error,\\n\" +\n                  \"rate: currentRate\\n\" +\n                \"}\\n\" +\n              \"})\");\n\n    if (!this.optimized)\n      this.optimize();\n\n    var hardcode = \"var inputs = \" + this.optimized.data.inputs.length + \";\\n\";\n    hardcode += \"var outputs = \" + this.optimized.data.outputs.length + \";\\n\";\n    hardcode += \"var F =  new Float64Array([\" + this.optimized.memory.toString() + \"]);\\n\";\n    hardcode += \"var activate = \" + this.optimized.activate.toString() + \";\\n\";\n    hardcode += \"var propagate = \" + this.optimized.propagate.toString() + \";\\n\";\n    hardcode +=\n        \"onmessage = function(e) {\\n\" +\n          \"if (e.data.action == 'startTraining') {\\n\" +\n            \"train(\" + JSON.stringify(set) + \",\" + JSON.stringify(workerOptions) + \");\\n\" +\n          \"}\\n\" +\n        \"}\";\n\n    var workerSourceCode = workerFunction + '\\n' + hardcode;\n    var blob = new Blob([workerSourceCode]);\n    var blobURL = window.URL.createObjectURL(blob);\n\n    return new Worker(blobURL);\n  },\n\n  // returns a copy of the network\n  clone: function() {\n    return Network.fromJSON(this.toJSON());\n  }\n};\n\n/**\n * Creates a static String to store the source code of the functions\n *  that are identical for all the workers (train, _trainSet, test)\n *\n * @return {String} Source code that can train a network inside a worker.\n * @static\n */\nNetwork.getWorkerSharedFunctions = function() {\n  // If we already computed the source code for the shared functions\n  if(typeof Network._SHARED_WORKER_FUNCTIONS !== 'undefined')\n    return Network._SHARED_WORKER_FUNCTIONS;\n\n  // Otherwise compute and return the source code\n  // We compute them by simply copying the source code of the train, _trainSet and test functions\n  //  using the .toString() method\n\n  // Load and name the train function\n  var train_f = Trainer.prototype.train.toString();\n  train_f = train_f.replace('function (set', 'function train(set') + '\\n';\n\n  // Load and name the _trainSet function\n  var _trainSet_f = Trainer.prototype._trainSet.toString().replace(/this.network./g, '');\n  _trainSet_f = _trainSet_f.replace('function (set', 'function _trainSet(set') + '\\n';\n  _trainSet_f = _trainSet_f.replace('this.crossValidate', 'crossValidate');\n  _trainSet_f = _trainSet_f.replace('crossValidate = true', 'crossValidate = { }');\n\n  // Load and name the test function\n  var test_f = Trainer.prototype.test.toString().replace(/this.network./g, '');\n  test_f = test_f.replace('function (set', 'function test(set') + '\\n';\n\n  return Network._SHARED_WORKER_FUNCTIONS = train_f + _trainSet_f + test_f;\n};\n\n// rebuild a network that has been stored in a json using the method toJSON()\nNetwork.fromJSON = function(json) {\n\n  var neurons = [];\n\n  var layers = {\n    input: new Layer(),\n    hidden: [],\n    output: new Layer()\n  };\n\n  for (var i in json.neurons) {\n    var config = json.neurons[i];\n\n    var neuron = new Neuron();\n    neuron.trace.elegibility = {};\n    neuron.trace.extended = {};\n    neuron.state = config.state;\n    neuron.old = config.old;\n    neuron.activation = config.activation;\n    neuron.bias = config.bias;\n    neuron.squash = config.squash in Neuron.squash ? Neuron.squash[config.squash] : Neuron.squash.LOGISTIC;\n    neurons.push(neuron);\n\n    if (config.layer == 'input')\n      layers.input.add(neuron);\n    else if (config.layer == 'output')\n      layers.output.add(neuron);\n    else {\n      if (typeof layers.hidden[config.layer] == 'undefined')\n        layers.hidden[config.layer] = new Layer();\n      layers.hidden[config.layer].add(neuron);\n    }\n  }\n\n  for (var i in json.connections) {\n    var config = json.connections[i];\n    var from = neurons[config.from];\n    var to = neurons[config.to];\n    var weight = config.weight;\n    var gater = neurons[config.gater];\n\n    var connection = from.project(to, weight);\n    if (gater)\n      gater.gate(connection);\n  }\n\n  return new Network(layers);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/synaptic/src/network.js\n// module id = 6\n// module chunks = 0","// export\nif (module) module.exports = Neuron;\n\n/******************************************************************************************\n                                         NEURON\n*******************************************************************************************/\n\nfunction Neuron() {\n  this.ID = Neuron.uid();\n  this.label = null;\n  this.connections = {\n    inputs: {},\n    projected: {},\n    gated: {}\n  };\n  this.error = {\n    responsibility: 0,\n    projected: 0,\n    gated: 0\n  };\n  this.trace = {\n    elegibility: {},\n    extended: {},\n    influences: {}\n  };\n  this.state = 0;\n  this.old = 0;\n  this.activation = 0;\n  this.selfconnection = new Neuron.connection(this, this, 0); // weight = 0 -> not connected\n  this.squash = Neuron.squash.LOGISTIC;\n  this.neighboors = {};\n  this.bias = Math.random() * .2 - .1;\n}\n\nNeuron.prototype = {\n\n  // activate the neuron\n  activate: function(input) {\n    // activation from enviroment (for input neurons)\n    if (typeof input != 'undefined') {\n      this.activation = input;\n      this.derivative = 0;\n      this.bias = 0;\n      return this.activation;\n    }\n\n    // old state\n    this.old = this.state;\n\n    // eq. 15\n    this.state = this.selfconnection.gain * this.selfconnection.weight *\n      this.state + this.bias;\n\n    for (var i in this.connections.inputs) {\n      var input = this.connections.inputs[i];\n      this.state += input.from.activation * input.weight * input.gain;\n    }\n\n    // eq. 16\n    this.activation = this.squash(this.state);\n\n    // f'(s)\n    this.derivative = this.squash(this.state, true);\n\n    // update traces\n    var influences = [];\n    for (var id in this.trace.extended) {\n      // extended elegibility trace\n      var neuron = this.neighboors[id];\n\n      // if gated neuron's selfconnection is gated by this unit, the influence keeps track of the neuron's old state\n      var influence = neuron.selfconnection.gater == this ? neuron.old : 0;\n\n      // index runs over all the incoming connections to the gated neuron that are gated by this unit\n      for (var incoming in this.trace.influences[neuron.ID]) { // captures the effect that has an input connection to this unit, on a neuron that is gated by this unit\n        influence += this.trace.influences[neuron.ID][incoming].weight *\n          this.trace.influences[neuron.ID][incoming].from.activation;\n      }\n      influences[neuron.ID] = influence;\n    }\n\n    for (var i in this.connections.inputs) {\n      var input = this.connections.inputs[i];\n\n      // elegibility trace - Eq. 17\n      this.trace.elegibility[input.ID] = this.selfconnection.gain * this.selfconnection\n        .weight * this.trace.elegibility[input.ID] + input.gain * input.from\n        .activation;\n\n      for (var id in this.trace.extended) {\n        // extended elegibility trace\n        var xtrace = this.trace.extended[id];\n        var neuron = this.neighboors[id];\n        var influence = influences[neuron.ID];\n\n        // eq. 18\n        xtrace[input.ID] = neuron.selfconnection.gain * neuron.selfconnection\n          .weight * xtrace[input.ID] + this.derivative * this.trace.elegibility[\n            input.ID] * influence;\n      }\n    }\n\n    //  update gated connection's gains\n    for (var connection in this.connections.gated) {\n      this.connections.gated[connection].gain = this.activation;\n    }\n\n    return this.activation;\n  },\n\n  // back-propagate the error\n  propagate: function(rate, target) {\n    // error accumulator\n    var error = 0;\n\n    // whether or not this neuron is in the output layer\n    var isOutput = typeof target != 'undefined';\n\n    // output neurons get their error from the enviroment\n    if (isOutput)\n      this.error.responsibility = this.error.projected = target - this.activation; // Eq. 10\n\n    else // the rest of the neuron compute their error responsibilities by backpropagation\n    {\n      // error responsibilities from all the connections projected from this neuron\n      for (var id in this.connections.projected) {\n        var connection = this.connections.projected[id];\n        var neuron = connection.to;\n        // Eq. 21\n        error += neuron.error.responsibility * connection.gain * connection.weight;\n      }\n\n      // projected error responsibility\n      this.error.projected = this.derivative * error;\n\n      error = 0;\n      // error responsibilities from all the connections gated by this neuron\n      for (var id in this.trace.extended) {\n        var neuron = this.neighboors[id]; // gated neuron\n        var influence = neuron.selfconnection.gater == this ? neuron.old : 0; // if gated neuron's selfconnection is gated by this neuron\n\n        // index runs over all the connections to the gated neuron that are gated by this neuron\n        for (var input in this.trace.influences[id]) { // captures the effect that the input connection of this neuron have, on a neuron which its input/s is/are gated by this neuron\n          influence += this.trace.influences[id][input].weight * this.trace.influences[\n            neuron.ID][input].from.activation;\n        }\n        // eq. 22\n        error += neuron.error.responsibility * influence;\n      }\n\n      // gated error responsibility\n      this.error.gated = this.derivative * error;\n\n      // error responsibility - Eq. 23\n      this.error.responsibility = this.error.projected + this.error.gated;\n    }\n\n    // learning rate\n    rate = rate || .1;\n\n    // adjust all the neuron's incoming connections\n    for (var id in this.connections.inputs) {\n      var input = this.connections.inputs[id];\n\n      // Eq. 24\n      var gradient = this.error.projected * this.trace.elegibility[input.ID];\n      for (var id in this.trace.extended) {\n        var neuron = this.neighboors[id];\n        gradient += neuron.error.responsibility * this.trace.extended[\n          neuron.ID][input.ID];\n      }\n      input.weight += rate * gradient; // adjust weights - aka learn\n    }\n\n    // adjust bias\n    this.bias += rate * this.error.responsibility;\n  },\n\n  project: function(neuron, weight) {\n    // self-connection\n    if (neuron == this) {\n      this.selfconnection.weight = 1;\n      return this.selfconnection;\n    }\n\n    // check if connection already exists\n    var connected = this.connected(neuron);\n    if (connected && connected.type == \"projected\") {\n      // update connection\n      if (typeof weight != 'undefined')\n        connected.connection.weight = weight;\n      // return existing connection\n      return connected.connection;\n    } else {\n      // create a new connection\n      var connection = new Neuron.connection(this, neuron, weight);\n    }\n\n    // reference all the connections and traces\n    this.connections.projected[connection.ID] = connection;\n    this.neighboors[neuron.ID] = neuron;\n    neuron.connections.inputs[connection.ID] = connection;\n    neuron.trace.elegibility[connection.ID] = 0;\n\n    for (var id in neuron.trace.extended) {\n      var trace = neuron.trace.extended[id];\n      trace[connection.ID] = 0;\n    }\n\n    return connection;\n  },\n\n  gate: function(connection) {\n    // add connection to gated list\n    this.connections.gated[connection.ID] = connection;\n\n    var neuron = connection.to;\n    if (!(neuron.ID in this.trace.extended)) {\n      // extended trace\n      this.neighboors[neuron.ID] = neuron;\n      var xtrace = this.trace.extended[neuron.ID] = {};\n      for (var id in this.connections.inputs) {\n        var input = this.connections.inputs[id];\n        xtrace[input.ID] = 0;\n      }\n    }\n\n    // keep track\n    if (neuron.ID in this.trace.influences)\n      this.trace.influences[neuron.ID].push(connection);\n    else\n      this.trace.influences[neuron.ID] = [connection];\n\n    // set gater\n    connection.gater = this;\n  },\n\n  // returns true or false whether the neuron is self-connected or not\n  selfconnected: function() {\n    return this.selfconnection.weight !== 0;\n  },\n\n  // returns true or false whether the neuron is connected to another neuron (parameter)\n  connected: function(neuron) {\n    var result = {\n      type: null,\n      connection: false\n    };\n\n    if (this == neuron) {\n      if (this.selfconnected()) {\n        result.type = 'selfconnection';\n        result.connection = this.selfconnection;\n        return result;\n      } else\n        return false;\n    }\n\n    for (var type in this.connections) {\n      for (var connection in this.connections[type]) {\n        var connection = this.connections[type][connection];\n        if (connection.to == neuron) {\n          result.type = type;\n          result.connection = connection;\n          return result;\n        } else if (connection.from == neuron) {\n          result.type = type;\n          result.connection = connection;\n          return result;\n        }\n      }\n    }\n\n    return false;\n  },\n\n  // clears all the traces (the neuron forgets it's context, but the connections remain intact)\n  clear: function() {\n\n    for (var trace in this.trace.elegibility)\n      this.trace.elegibility[trace] = 0;\n\n    for (var trace in this.trace.extended)\n      for (var extended in this.trace.extended[trace])\n        this.trace.extended[trace][extended] = 0;\n\n    this.error.responsibility = this.error.projected = this.error.gated = 0;\n  },\n\n  // all the connections are randomized and the traces are cleared\n  reset: function() {\n    this.clear();\n\n    for (var type in this.connections)\n      for (var connection in this.connections[type])\n        this.connections[type][connection].weight = Math.random() * .2 - .1;\n    this.bias = Math.random() * .2 - .1;\n\n    this.old = this.state = this.activation = 0;\n  },\n\n  // hardcodes the behaviour of the neuron into an optimized function\n  optimize: function(optimized, layer) {\n\n    optimized = optimized || {};\n    var store_activation = [];\n    var store_trace = [];\n    var store_propagation = [];\n    var varID = optimized.memory || 0;\n    var neurons = optimized.neurons || 1;\n    var inputs = optimized.inputs || [];\n    var targets = optimized.targets || [];\n    var outputs = optimized.outputs || [];\n    var variables = optimized.variables || {};\n    var activation_sentences = optimized.activation_sentences || [];\n    var trace_sentences = optimized.trace_sentences || [];\n    var propagation_sentences = optimized.propagation_sentences || [];\n    var layers = optimized.layers || { __count: 0, __neuron: 0 };\n\n    // allocate sentences\n    var allocate = function(store){\n      var allocated = layer in layers && store[layers.__count];\n      if (!allocated)\n      {\n        layers.__count = store.push([]) - 1;\n        layers[layer] = layers.__count;\n      }\n    };\n    allocate(activation_sentences);\n    allocate(trace_sentences);\n    allocate(propagation_sentences);\n    var currentLayer = layers.__count;\n\n    // get/reserve space in memory by creating a unique ID for a variablel\n    var getVar = function() {\n      var args = Array.prototype.slice.call(arguments);\n\n      if (args.length == 1) {\n        if (args[0] == 'target') {\n          var id = 'target_' + targets.length;\n          targets.push(varID);\n        } else\n          var id = args[0];\n        if (id in variables)\n          return variables[id];\n        return variables[id] = {\n          value: 0,\n          id: varID++\n        };\n      } else {\n        var extended = args.length > 2;\n        if (extended)\n          var value = args.pop();\n\n        var unit = args.shift();\n        var prop = args.pop();\n\n        if (!extended)\n          var value = unit[prop];\n\n        var id = prop + '_';\n        for (var property in args)\n          id += args[property] + '_';\n        id += unit.ID;\n        if (id in variables)\n          return variables[id];\n\n        return variables[id] = {\n          value: value,\n          id: varID++\n        };\n      }\n    };\n\n    // build sentence\n    var buildSentence = function() {\n      var args = Array.prototype.slice.call(arguments);\n      var store = args.pop();\n      var sentence = \"\";\n      for (var i in args)\n        if (typeof args[i] == 'string')\n          sentence += args[i];\n        else\n          sentence += 'F[' + args[i].id + ']';\n\n      store.push(sentence + ';');\n    };\n\n    // helper to check if an object is empty\n    var isEmpty = function(obj) {\n      for (var prop in obj) {\n        if (obj.hasOwnProperty(prop))\n          return false;\n      }\n      return true;\n    };\n\n    // characteristics of the neuron\n    var noProjections = isEmpty(this.connections.projected);\n    var noGates = isEmpty(this.connections.gated);\n    var isInput = layer == 'input' ? true : isEmpty(this.connections.inputs);\n    var isOutput = layer == 'output' ? true : noProjections && noGates;\n\n    // optimize neuron's behaviour\n    var rate = getVar('rate');\n    var activation = getVar(this, 'activation');\n    if (isInput)\n      inputs.push(activation.id);\n    else {\n      activation_sentences[currentLayer].push(store_activation);\n      trace_sentences[currentLayer].push(store_trace);\n      propagation_sentences[currentLayer].push(store_propagation);\n      var old = getVar(this, 'old');\n      var state = getVar(this, 'state');\n      var bias = getVar(this, 'bias');\n      if (this.selfconnection.gater)\n        var self_gain = getVar(this.selfconnection, 'gain');\n      if (this.selfconnected())\n        var self_weight = getVar(this.selfconnection, 'weight');\n      buildSentence(old, ' = ', state, store_activation);\n      if (this.selfconnected())\n        if (this.selfconnection.gater)\n          buildSentence(state, ' = ', self_gain, ' * ', self_weight, ' * ',\n            state, ' + ', bias, store_activation);\n        else\n          buildSentence(state, ' = ', self_weight, ' * ', state, ' + ',\n            bias, store_activation);\n      else\n        buildSentence(state, ' = ', bias, store_activation);\n      for (var i in this.connections.inputs) {\n        var input = this.connections.inputs[i];\n        var input_activation = getVar(input.from, 'activation');\n        var input_weight = getVar(input, 'weight');\n        if (input.gater)\n          var input_gain = getVar(input, 'gain');\n        if (this.connections.inputs[i].gater)\n          buildSentence(state, ' += ', input_activation, ' * ',\n            input_weight, ' * ', input_gain, store_activation);\n        else\n          buildSentence(state, ' += ', input_activation, ' * ',\n            input_weight, store_activation);\n      }\n      var derivative = getVar(this, 'derivative');\n      switch (this.squash) {\n        case Neuron.squash.LOGISTIC:\n          buildSentence(activation, ' = (1 / (1 + Math.exp(-', state, ')))',\n            store_activation);\n          buildSentence(derivative, ' = ', activation, ' * (1 - ',\n            activation, ')', store_activation);\n          break;\n        case Neuron.squash.TANH:\n          var eP = getVar('aux');\n          var eN = getVar('aux_2');\n          buildSentence(eP, ' = Math.exp(', state, ')', store_activation);\n          buildSentence(eN, ' = 1 / ', eP, store_activation);\n          buildSentence(activation, ' = (', eP, ' - ', eN, ') / (', eP, ' + ', eN, ')', store_activation);\n          buildSentence(derivative, ' = 1 - (', activation, ' * ', activation, ')', store_activation);\n          break;\n        case Neuron.squash.IDENTITY:\n          buildSentence(activation, ' = ', state, store_activation);\n          buildSentence(derivative, ' = 1', store_activation);\n          break;\n        case Neuron.squash.HLIM:\n          buildSentence(activation, ' = +(', state, ' > 0)', store_activation);\n          buildSentence(derivative, ' = 1', store_activation);\n        case Neuron.squash.RELU:\n          buildSentence(activation, ' = ', state, ' > 0 ? ', state, ' : 0', store_activation);\n          buildSentence(derivative, ' = ', state, ' > 0 ? 1 : 0', store_activation);\n          break;\n      }\n\n      for (var id in this.trace.extended) {\n        // calculate extended elegibility traces in advance\n\n        var neuron = this.neighboors[id];\n        var influence = getVar('influences[' + neuron.ID + ']');\n        var neuron_old = getVar(neuron, 'old');\n        var initialized = false;\n        if (neuron.selfconnection.gater == this)\n        {\n          buildSentence(influence, ' = ', neuron_old, store_trace);\n          initialized = true;\n        }\n        for (var incoming in this.trace.influences[neuron.ID]) {\n          var incoming_weight = getVar(this.trace.influences[neuron.ID]\n            [incoming], 'weight');\n          var incoming_activation = getVar(this.trace.influences[neuron.ID]\n            [incoming].from, 'activation');\n\n          if (initialized)\n            buildSentence(influence, ' += ', incoming_weight, ' * ', incoming_activation, store_trace);\n          else {\n            buildSentence(influence, ' = ', incoming_weight, ' * ', incoming_activation, store_trace);\n            initialized = true;\n          }\n        }\n      }\n\n      for (var i in this.connections.inputs) {\n        var input = this.connections.inputs[i];\n        if (input.gater)\n          var input_gain = getVar(input, 'gain');\n        var input_activation = getVar(input.from, 'activation');\n        var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace\n          .elegibility[input.ID]);\n        if (this.selfconnected()) {\n          if (this.selfconnection.gater) {\n            if (input.gater)\n              buildSentence(trace, ' = ', self_gain, ' * ', self_weight,\n                ' * ', trace, ' + ', input_gain, ' * ', input_activation,\n                store_trace);\n            else\n              buildSentence(trace, ' = ', self_gain, ' * ', self_weight,\n                ' * ', trace, ' + ', input_activation, store_trace);\n          } else {\n            if (input.gater)\n              buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ',\n                input_gain, ' * ', input_activation, store_trace);\n            else\n              buildSentence(trace, ' = ', self_weight, ' * ', trace, ' + ',\n                input_activation, store_trace);\n          }\n        } else {\n          if (input.gater)\n            buildSentence(trace, ' = ', input_gain, ' * ', input_activation,\n              store_trace);\n          else\n            buildSentence(trace, ' = ', input_activation, store_trace);\n        }\n        for (var id in this.trace.extended) {\n          // extended elegibility trace\n          var neuron = this.neighboors[id];\n          var influence = getVar('influences[' + neuron.ID + ']');\n\n          var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace\n            .elegibility[input.ID]);\n          var xtrace = getVar(this, 'trace', 'extended', neuron.ID, input.ID,\n            this.trace.extended[neuron.ID][input.ID]);\n          if (neuron.selfconnected())\n            var neuron_self_weight = getVar(neuron.selfconnection, 'weight');\n          if (neuron.selfconnection.gater)\n            var neuron_self_gain = getVar(neuron.selfconnection, 'gain');\n          if (neuron.selfconnected())\n            if (neuron.selfconnection.gater)\n              buildSentence(xtrace, ' = ', neuron_self_gain, ' * ',\n                neuron_self_weight, ' * ', xtrace, ' + ', derivative, ' * ',\n                trace, ' * ', influence, store_trace);\n            else\n              buildSentence(xtrace, ' = ', neuron_self_weight, ' * ',\n                xtrace, ' + ', derivative, ' * ', trace, ' * ',\n                influence, store_trace);\n          else\n            buildSentence(xtrace, ' = ', derivative, ' * ', trace, ' * ',\n              influence, store_trace);\n        }\n      }\n      for (var connection in this.connections.gated) {\n        var gated_gain = getVar(this.connections.gated[connection], 'gain');\n        buildSentence(gated_gain, ' = ', activation, store_activation);\n      }\n    }\n    if (!isInput) {\n      var responsibility = getVar(this, 'error', 'responsibility', this.error\n        .responsibility);\n      if (isOutput) {\n        var target = getVar('target');\n        buildSentence(responsibility, ' = ', target, ' - ', activation,\n          store_propagation);\n        for (var id in this.connections.inputs) {\n          var input = this.connections.inputs[id];\n          var trace = getVar(this, 'trace', 'elegibility', input.ID, this.trace\n            .elegibility[input.ID]);\n          var input_weight = getVar(input, 'weight');\n          buildSentence(input_weight, ' += ', rate, ' * (', responsibility,\n            ' * ', trace, ')', store_propagation);\n        }\n        outputs.push(activation.id);\n      } else {\n        if (!noProjections && !noGates) {\n          var error = getVar('aux');\n          for (var id in this.connections.projected) {\n            var connection = this.connections.projected[id];\n            var neuron = connection.to;\n            var connection_weight = getVar(connection, 'weight');\n            var neuron_responsibility = getVar(neuron, 'error',\n              'responsibility', neuron.error.responsibility);\n            if (connection.gater) {\n              var connection_gain = getVar(connection, 'gain');\n              buildSentence(error, ' += ', neuron_responsibility, ' * ',\n                connection_gain, ' * ', connection_weight,\n                store_propagation);\n            } else\n              buildSentence(error, ' += ', neuron_responsibility, ' * ',\n                connection_weight, store_propagation);\n          }\n          var projected = getVar(this, 'error', 'projected', this.error.projected);\n          buildSentence(projected, ' = ', derivative, ' * ', error,\n            store_propagation);\n          buildSentence(error, ' = 0', store_propagation);\n          for (var id in this.trace.extended) {\n            var neuron = this.neighboors[id];\n            var influence = getVar('aux_2');\n            var neuron_old = getVar(neuron, 'old');\n            if (neuron.selfconnection.gater == this)\n              buildSentence(influence, ' = ', neuron_old, store_propagation);\n            else\n              buildSentence(influence, ' = 0', store_propagation);\n            for (var input in this.trace.influences[neuron.ID]) {\n              var connection = this.trace.influences[neuron.ID][input];\n              var connection_weight = getVar(connection, 'weight');\n              var neuron_activation = getVar(connection.from, 'activation');\n              buildSentence(influence, ' += ', connection_weight, ' * ',\n                neuron_activation, store_propagation);\n            }\n            var neuron_responsibility = getVar(neuron, 'error',\n              'responsibility', neuron.error.responsibility);\n            buildSentence(error, ' += ', neuron_responsibility, ' * ',\n              influence, store_propagation);\n          }\n          var gated = getVar(this, 'error', 'gated', this.error.gated);\n          buildSentence(gated, ' = ', derivative, ' * ', error,\n            store_propagation);\n          buildSentence(responsibility, ' = ', projected, ' + ', gated,\n            store_propagation);\n          for (var id in this.connections.inputs) {\n            var input = this.connections.inputs[id];\n            var gradient = getVar('aux');\n            var trace = getVar(this, 'trace', 'elegibility', input.ID, this\n              .trace.elegibility[input.ID]);\n            buildSentence(gradient, ' = ', projected, ' * ', trace,\n              store_propagation);\n            for (var id in this.trace.extended) {\n              var neuron = this.neighboors[id];\n              var neuron_responsibility = getVar(neuron, 'error',\n                'responsibility', neuron.error.responsibility);\n              var xtrace = getVar(this, 'trace', 'extended', neuron.ID,\n                input.ID, this.trace.extended[neuron.ID][input.ID]);\n              buildSentence(gradient, ' += ', neuron_responsibility, ' * ',\n                xtrace, store_propagation);\n            }\n            var input_weight = getVar(input, 'weight');\n            buildSentence(input_weight, ' += ', rate, ' * ', gradient,\n              store_propagation);\n          }\n\n        } else if (noGates) {\n          buildSentence(responsibility, ' = 0', store_propagation);\n          for (var id in this.connections.projected) {\n            var connection = this.connections.projected[id];\n            var neuron = connection.to;\n            var connection_weight = getVar(connection, 'weight');\n            var neuron_responsibility = getVar(neuron, 'error',\n              'responsibility', neuron.error.responsibility);\n            if (connection.gater) {\n              var connection_gain = getVar(connection, 'gain');\n              buildSentence(responsibility, ' += ', neuron_responsibility,\n                ' * ', connection_gain, ' * ', connection_weight,\n                store_propagation);\n            } else\n              buildSentence(responsibility, ' += ', neuron_responsibility,\n                ' * ', connection_weight, store_propagation);\n          }\n          buildSentence(responsibility, ' *= ', derivative,\n            store_propagation);\n          for (var id in this.connections.inputs) {\n            var input = this.connections.inputs[id];\n            var trace = getVar(this, 'trace', 'elegibility', input.ID, this\n              .trace.elegibility[input.ID]);\n            var input_weight = getVar(input, 'weight');\n            buildSentence(input_weight, ' += ', rate, ' * (',\n              responsibility, ' * ', trace, ')', store_propagation);\n          }\n        } else if (noProjections) {\n          buildSentence(responsibility, ' = 0', store_propagation);\n          for (var id in this.trace.extended) {\n            var neuron = this.neighboors[id];\n            var influence = getVar('aux');\n            var neuron_old = getVar(neuron, 'old');\n            if (neuron.selfconnection.gater == this)\n              buildSentence(influence, ' = ', neuron_old, store_propagation);\n            else\n              buildSentence(influence, ' = 0', store_propagation);\n            for (var input in this.trace.influences[neuron.ID]) {\n              var connection = this.trace.influences[neuron.ID][input];\n              var connection_weight = getVar(connection, 'weight');\n              var neuron_activation = getVar(connection.from, 'activation');\n              buildSentence(influence, ' += ', connection_weight, ' * ',\n                neuron_activation, store_propagation);\n            }\n            var neuron_responsibility = getVar(neuron, 'error',\n              'responsibility', neuron.error.responsibility);\n            buildSentence(responsibility, ' += ', neuron_responsibility,\n              ' * ', influence, store_propagation);\n          }\n          buildSentence(responsibility, ' *= ', derivative,\n            store_propagation);\n          for (var id in this.connections.inputs) {\n            var input = this.connections.inputs[id];\n            var gradient = getVar('aux');\n            buildSentence(gradient, ' = 0', store_propagation);\n            for (var id in this.trace.extended) {\n              var neuron = this.neighboors[id];\n              var neuron_responsibility = getVar(neuron, 'error',\n                'responsibility', neuron.error.responsibility);\n              var xtrace = getVar(this, 'trace', 'extended', neuron.ID,\n                input.ID, this.trace.extended[neuron.ID][input.ID]);\n              buildSentence(gradient, ' += ', neuron_responsibility, ' * ',\n                xtrace, store_propagation);\n            }\n            var input_weight = getVar(input, 'weight');\n            buildSentence(input_weight, ' += ', rate, ' * ', gradient,\n              store_propagation);\n          }\n        }\n      }\n      buildSentence(bias, ' += ', rate, ' * ', responsibility,\n        store_propagation);\n    }\n    return {\n      memory: varID,\n      neurons: neurons + 1,\n      inputs: inputs,\n      outputs: outputs,\n      targets: targets,\n      variables: variables,\n      activation_sentences: activation_sentences,\n      trace_sentences: trace_sentences,\n      propagation_sentences: propagation_sentences,\n      layers: layers\n    }\n  }\n}\n\n\n// represents a connection between two neurons\nNeuron.connection = function Connection(from, to, weight) {\n\n  if (!from || !to)\n    throw new Error(\"Connection Error: Invalid neurons\");\n\n  this.ID = Neuron.connection.uid();\n  this.from = from;\n  this.to = to;\n  this.weight = typeof weight == 'undefined' ? Math.random() * .2 - .1 :\n    weight;\n  this.gain = 1;\n  this.gater = null;\n}\n\n\n// squashing functions\nNeuron.squash = {};\n\n// eq. 5 & 5'\nNeuron.squash.LOGISTIC = function(x, derivate) {\n  if (!derivate)\n    return 1 / (1 + Math.exp(-x));\n  var fx = Neuron.squash.LOGISTIC(x);\n  return fx * (1 - fx);\n};\nNeuron.squash.TANH = function(x, derivate) {\n  if (derivate)\n    return 1 - Math.pow(Neuron.squash.TANH(x), 2);\n  var eP = Math.exp(x);\n  var eN = 1 / eP;\n  return (eP - eN) / (eP + eN);\n};\nNeuron.squash.IDENTITY = function(x, derivate) {\n  return derivate ? 1 : x;\n};\nNeuron.squash.HLIM = function(x, derivate) {\n  return derivate ? 1 : x > 0 ? 1 : 0;\n};\nNeuron.squash.RELU = function(x, derivate) {\n  if (derivate)\n    return x > 0 ? 1 : 0;\n  return x > 0 ? x : 0;\n};\n\n// unique ID's\n(function() {\n  var neurons = 0;\n  var connections = 0;\n  Neuron.uid = function() {\n    return neurons++;\n  }\n  Neuron.connection.uid = function() {\n    return connections++;\n  }\n  Neuron.quantity = function() {\n    return {\n      neurons: neurons,\n      connections: connections\n    }\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/synaptic/src/neuron.js\n// module id = 7\n// module chunks = 0","// export\nif (module) module.exports = Trainer;\n\n/*******************************************************************************************\n                                        TRAINER\n*******************************************************************************************/\n\n//+ Jonas Raoni Soares Silva\n//@ http://jsfromhell.com/array/shuffle [v1.0]\nfunction shuffleInplace(o) { //v1.0\n  for (var j, x, i = o.length; i; j = Math.floor(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n  return o;\n};\n\nfunction Trainer(network, options) {\n  options = options || {};\n  this.network = network;\n  this.rate = options.rate || .2;\n  this.iterations = options.iterations || 100000;\n  this.error = options.error || .005;\n  this.cost = options.cost || null;\n  this.crossValidate = options.crossValidate || null;\n}\n\nTrainer.prototype = {\n\n  // trains any given set to a network\n  train: function(set, options) {\n\n    var error = 1;\n    var iterations = bucketSize = 0;\n    var abort = false;\n    var currentRate;\n    var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n    var crossValidate = false, testSet, trainSet;\n\n    var start = Date.now();\n\n    if (options) {\n      if (options.iterations)\n        this.iterations = options.iterations;\n      if (options.error)\n        this.error = options.error;\n      if (options.rate)\n        this.rate = options.rate;\n      if (options.cost)\n        this.cost = options.cost;\n      if (options.schedule)\n        this.schedule = options.schedule;\n      if (options.customLog){\n        // for backward compatibility with code that used customLog\n        console.log('Deprecated: use schedule instead of customLog')\n        this.schedule = options.customLog;\n      }\n      if (this.crossValidate || options.crossValidate) {\n        if(!this.crossValidate) this.crossValidate = {};\n        crossValidate = true;\n        if (options.crossValidate.testSize)\n          this.crossValidate.testSize = options.crossValidate.testSize;\n        if (options.crossValidate.testError)\n          this.crossValidate.testError = options.crossValidate.testError;\n      }\n    }\n\n    currentRate = this.rate;\n    if(Array.isArray(this.rate)) {\n      var bucketSize = Math.floor(this.iterations / this.rate.length);\n    }\n\n    if(crossValidate) {\n      var numTrain = Math.ceil((1 - this.crossValidate.testSize) * set.length);\n      trainSet = set.slice(0, numTrain);\n      testSet = set.slice(numTrain);\n    }\n\n    var lastError = 0;\n    while ((!abort && iterations < this.iterations && error > this.error)) {\n      if (crossValidate && error <= this.crossValidate.testError) {\n        break;\n      }\n\n      var currentSetSize = set.length;\n      error = 0;\n      iterations++;\n\n      if(bucketSize > 0) {\n        var currentBucket = Math.floor(iterations / bucketSize);\n        currentRate = this.rate[currentBucket] || currentRate;\n      }\n      \n      if(typeof this.rate === 'function') {\n        currentRate = this.rate(iterations, lastError);\n      }\n\n      if (crossValidate) {\n        this._trainSet(trainSet, currentRate, cost);\n        error += this.test(testSet).error;\n        currentSetSize = 1;\n      } else {\n        error += this._trainSet(set, currentRate, cost);\n        currentSetSize = set.length;\n      }\n\n      // check error\n      error /= currentSetSize;\n      lastError = error;\n\n      if (options) {\n        if (this.schedule && this.schedule.every && iterations %\n          this.schedule.every == 0)\n          abort = this.schedule.do({ error: error, iterations: iterations, rate: currentRate });\n        else if (options.log && iterations % options.log == 0) {\n          console.log('iterations', iterations, 'error', error, 'rate', currentRate);\n        };\n        if (options.shuffle)\n          shuffleInplace(set);\n      }\n    }\n\n    var results = {\n      error: error,\n      iterations: iterations,\n      time: Date.now() - start\n    };\n\n    return results;\n  },\n\n  // trains any given set to a network, using a WebWorker (only for the browser). Returns a Promise of the results.\n  trainAsync: function(set, options) {\n    var train = this.workerTrain.bind(this);\n    return new Promise(function(resolve, reject) {\n      try {\n        train(set, resolve, options, true)\n      } catch(e) {\n        reject(e)\n      }\n    })\n  },\n\n  // preforms one training epoch and returns the error (private function used in this.train)\n  _trainSet: function(set, currentRate, costFunction) {\n    var errorSum = 0;\n    for (var train in set) {\n      var input = set[train].input;\n      var target = set[train].output;\n\n      var output = this.network.activate(input);\n      this.network.propagate(currentRate, target);\n\n      errorSum += costFunction(target, output);\n    }\n    return errorSum;\n  },\n\n  // tests a set and returns the error and elapsed time\n  test: function(set, options) {\n\n    var error = 0;\n    var input, output, target;\n    var cost = options && options.cost || this.cost || Trainer.cost.MSE;\n\n    var start = Date.now();\n\n    for (var test in set) {\n      input = set[test].input;\n      target = set[test].output;\n      output = this.network.activate(input);\n      error += cost(target, output);\n    }\n\n    error /= set.length;\n\n    var results = {\n      error: error,\n      time: Date.now() - start\n    };\n\n    return results;\n  },\n\n  // trains any given set to a network using a WebWorker [deprecated: use trainAsync instead]\n  workerTrain: function(set, callback, options, suppressWarning) {\n\n    if (!suppressWarning) {\n      console.warn('Deprecated: do not use `workerTrain`, use `trainAsync` instead.')\n    }\n    var that = this;\n\n    if (!this.network.optimized)\n      this.network.optimize();\n\n    // Create a new worker\n    var worker = this.network.worker(this.network.optimized.memory, set, options);\n\n    // train the worker\n    worker.onmessage = function(e) {\n      switch(e.data.action) {\n          case 'done':\n            var iterations = e.data.message.iterations;\n            var error = e.data.message.error;\n            var time = e.data.message.time;\n\n            that.network.optimized.ownership(e.data.memoryBuffer);\n\n            // Done callback\n            callback({\n              error: error,\n              iterations: iterations,\n              time: time\n            });\n\n            // Delete the worker and all its associated memory\n            worker.terminate();\n          break;\n\n          case 'log':\n            console.log(e.data.message);\n\n          case 'schedule':\n            if (options && options.schedule && typeof options.schedule.do === 'function') {\n              var scheduled = options.schedule.do\n              scheduled(e.data.message)\n            }\n          break;\n      }\n    };\n\n    // Start the worker\n    worker.postMessage({action: 'startTraining'});\n  },\n\n  // trains an XOR to the network\n  XOR: function(options) {\n\n    if (this.network.inputs() != 2 || this.network.outputs() != 1)\n      throw new Error(\"Incompatible network (2 inputs, 1 output)\");\n\n    var defaults = {\n      iterations: 100000,\n      log: false,\n      shuffle: true,\n      cost: Trainer.cost.MSE\n    };\n\n    if (options)\n      for (var i in options)\n        defaults[i] = options[i];\n\n    return this.train([{\n      input: [0, 0],\n      output: [0]\n    }, {\n      input: [1, 0],\n      output: [1]\n    }, {\n      input: [0, 1],\n      output: [1]\n    }, {\n      input: [1, 1],\n      output: [0]\n    }], defaults);\n  },\n\n  // trains the network to pass a Distracted Sequence Recall test\n  DSR: function(options) {\n    options = options || {};\n\n    var targets = options.targets || [2, 4, 7, 8];\n    var distractors = options.distractors || [3, 5, 6, 9];\n    var prompts = options.prompts || [0, 1];\n    var length = options.length || 24;\n    var criterion = options.success || 0.95;\n    var iterations = options.iterations || 100000;\n    var rate = options.rate || .1;\n    var log = options.log || 0;\n    var schedule = options.schedule || {};\n    var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\n    var trial, correct, i, j, success;\n    trial = correct = i = j = success = 0;\n    var error = 1,\n      symbols = targets.length + distractors.length + prompts.length;\n\n    var noRepeat = function(range, avoid) {\n      var number = Math.random() * range | 0;\n      var used = false;\n      for (var i in avoid)\n        if (number == avoid[i])\n          used = true;\n      return used ? noRepeat(range, avoid) : number;\n    };\n\n    var equal = function(prediction, output) {\n      for (var i in prediction)\n        if (Math.round(prediction[i]) != output[i])\n          return false;\n      return true;\n    };\n\n    var start = Date.now();\n\n    while (trial < iterations && (success < criterion || trial % 1000 != 0)) {\n      // generate sequence\n      var sequence = [],\n        sequenceLength = length - prompts.length;\n      for (i = 0; i < sequenceLength; i++) {\n        var any = Math.random() * distractors.length | 0;\n        sequence.push(distractors[any]);\n      }\n      var indexes = [],\n        positions = [];\n      for (i = 0; i < prompts.length; i++) {\n        indexes.push(Math.random() * targets.length | 0);\n        positions.push(noRepeat(sequenceLength, positions));\n      }\n      positions = positions.sort();\n      for (i = 0; i < prompts.length; i++) {\n        sequence[positions[i]] = targets[indexes[i]];\n        sequence.push(prompts[i]);\n      }\n\n      //train sequence\n      var distractorsCorrect;\n      var targetsCorrect = distractorsCorrect = 0;\n      error = 0;\n      for (i = 0; i < length; i++) {\n        // generate input from sequence\n        var input = [];\n        for (j = 0; j < symbols; j++)\n          input[j] = 0;\n        input[sequence[i]] = 1;\n\n        // generate target output\n        var output = [];\n        for (j = 0; j < targets.length; j++)\n          output[j] = 0;\n\n        if (i >= sequenceLength) {\n          var index = i - sequenceLength;\n          output[indexes[index]] = 1;\n        }\n\n        // check result\n        var prediction = this.network.activate(input);\n\n        if (equal(prediction, output))\n          if (i < sequenceLength)\n            distractorsCorrect++;\n          else\n            targetsCorrect++;\n        else {\n          this.network.propagate(rate, output);\n        }\n\n        error += cost(output, prediction);\n\n        if (distractorsCorrect + targetsCorrect == length)\n          correct++;\n      }\n\n      // calculate error\n      if (trial % 1000 == 0)\n        correct = 0;\n      trial++;\n      var divideError = trial % 1000;\n      divideError = divideError == 0 ? 1000 : divideError;\n      success = correct / divideError;\n      error /= length;\n\n      // log\n      if (log && trial % log == 0)\n        console.log(\"iterations:\", trial, \" success:\", success, \" correct:\",\n          correct, \" time:\", Date.now() - start, \" error:\", error);\n      if (schedule.do && schedule.every && trial % schedule.every == 0)\n        schedule.do({\n          iterations: trial,\n          success: success,\n          error: error,\n          time: Date.now() - start,\n          correct: correct\n        });\n    }\n\n    return {\n      iterations: trial,\n      success: success,\n      error: error,\n      time: Date.now() - start\n    }\n  },\n\n  // train the network to learn an Embeded Reber Grammar\n  ERG: function(options) {\n\n    options = options || {};\n    var iterations = options.iterations || 150000;\n    var criterion = options.error || .05;\n    var rate = options.rate || .1;\n    var log = options.log || 500;\n    var cost = options.cost || this.cost || Trainer.cost.CROSS_ENTROPY;\n\n    // gramar node\n    var Node = function() {\n      this.paths = [];\n    };\n    Node.prototype = {\n      connect: function(node, value) {\n        this.paths.push({\n          node: node,\n          value: value\n        });\n        return this;\n      },\n      any: function() {\n        if (this.paths.length == 0)\n          return false;\n        var index = Math.random() * this.paths.length | 0;\n        return this.paths[index];\n      },\n      test: function(value) {\n        for (var i in this.paths)\n          if (this.paths[i].value == value)\n            return this.paths[i];\n        return false;\n      }\n    };\n\n    var reberGrammar = function() {\n\n      // build a reber grammar\n      var output = new Node();\n      var n1 = (new Node()).connect(output, \"E\");\n      var n2 = (new Node()).connect(n1, \"S\");\n      var n3 = (new Node()).connect(n1, \"V\").connect(n2, \"P\");\n      var n4 = (new Node()).connect(n2, \"X\");\n      n4.connect(n4, \"S\");\n      var n5 = (new Node()).connect(n3, \"V\");\n      n5.connect(n5, \"T\");\n      n2.connect(n5, \"X\");\n      var n6 = (new Node()).connect(n4, \"T\").connect(n5, \"P\");\n      var input = (new Node()).connect(n6, \"B\");\n\n      return {\n        input: input,\n        output: output\n      }\n    };\n\n    // build an embeded reber grammar\n    var embededReberGrammar = function() {\n      var reber1 = reberGrammar();\n      var reber2 = reberGrammar();\n\n      var output = new Node();\n      var n1 = (new Node).connect(output, \"E\");\n      reber1.output.connect(n1, \"T\");\n      reber2.output.connect(n1, \"P\");\n      var n2 = (new Node).connect(reber1.input, \"P\").connect(reber2.input,\n        \"T\");\n      var input = (new Node).connect(n2, \"B\");\n\n      return {\n        input: input,\n        output: output\n      }\n\n    };\n\n    // generate an ERG sequence\n    var generate = function() {\n      var node = embededReberGrammar().input;\n      var next = node.any();\n      var str = \"\";\n      while (next) {\n        str += next.value;\n        next = next.node.any();\n      }\n      return str;\n    };\n\n    // test if a string matches an embeded reber grammar\n    var test = function(str) {\n      var node = embededReberGrammar().input;\n      var i = 0;\n      var ch = str.charAt(i);\n      while (i < str.length) {\n        var next = node.test(ch);\n        if (!next)\n          return false;\n        node = next.node;\n        ch = str.charAt(++i);\n      }\n      return true;\n    };\n\n    // helper to check if the output and the target vectors match\n    var different = function(array1, array2) {\n      var max1 = 0;\n      var i1 = -1;\n      var max2 = 0;\n      var i2 = -1;\n      for (var i in array1) {\n        if (array1[i] > max1) {\n          max1 = array1[i];\n          i1 = i;\n        }\n        if (array2[i] > max2) {\n          max2 = array2[i];\n          i2 = i;\n        }\n      }\n\n      return i1 != i2;\n    };\n\n    var iteration = 0;\n    var error = 1;\n    var table = {\n      \"B\": 0,\n      \"P\": 1,\n      \"T\": 2,\n      \"X\": 3,\n      \"S\": 4,\n      \"E\": 5\n    };\n\n    var start = Date.now();\n    while (iteration < iterations && error > criterion) {\n      var i = 0;\n      error = 0;\n\n      // ERG sequence to learn\n      var sequence = generate();\n\n      // input\n      var read = sequence.charAt(i);\n      // target\n      var predict = sequence.charAt(i + 1);\n\n      // train\n      while (i < sequence.length - 1) {\n        var input = [];\n        var target = [];\n        for (var j = 0; j < 6; j++) {\n          input[j] = 0;\n          target[j] = 0;\n        }\n        input[table[read]] = 1;\n        target[table[predict]] = 1;\n\n        var output = this.network.activate(input);\n\n        if (different(output, target))\n          this.network.propagate(rate, target);\n\n        read = sequence.charAt(++i);\n        predict = sequence.charAt(i + 1);\n\n        error += cost(target, output);\n      }\n      error /= sequence.length;\n      iteration++;\n      if (iteration % log == 0) {\n        console.log(\"iterations:\", iteration, \" time:\", Date.now() - start,\n          \" error:\", error);\n      }\n    }\n\n    return {\n      iterations: iteration,\n      error: error,\n      time: Date.now() - start,\n      test: test,\n      generate: generate\n    }\n  },\n\n  timingTask: function(options){\n\n    if (this.network.inputs() != 2 || this.network.outputs() != 1)\n      throw new Error(\"Invalid Network: must have 2 inputs and one output\");\n\n    if (typeof options == 'undefined')\n      options = {};\n\n    // helper\n    function getSamples (trainingSize, testSize){\n\n      // sample size\n      var size = trainingSize + testSize;\n\n      // generate samples\n      var t = 0;\n      var set = [];\n      for (var i = 0; i < size; i++) {\n        set.push({ input: [0,0], output: [0] });\n      }\n      while(t < size - 20) {\n          var n = Math.round(Math.random() * 20);\n          set[t].input[0] = 1;\n          for (var j = t; j <= t + n; j++){\n              set[j].input[1] = n / 20;\n              set[j].output[0] = 0.5;\n          }\n          t += n;\n          n = Math.round(Math.random() * 20);\n          for (var k = t+1; k <= (t + n) &&  k < size; k++)\n              set[k].input[1] = set[t].input[1];\n          t += n;\n      }\n\n      // separate samples between train and test sets\n      var trainingSet = []; var testSet = [];\n      for (var l = 0; l < size; l++)\n          (l < trainingSize ? trainingSet : testSet).push(set[l]);\n\n      // return samples\n      return {\n          train: trainingSet,\n          test: testSet\n      }\n    }\n\n    var iterations = options.iterations || 200;\n    var error = options.error || .005;\n    var rate = options.rate || [.03, .02];\n    var log = options.log === false ? false : options.log || 10;\n    var cost = options.cost || this.cost || Trainer.cost.MSE;\n    var trainingSamples = options.trainSamples || 7000;\n    var testSamples = options.trainSamples || 1000;\n\n    // samples for training and testing\n    var samples = getSamples(trainingSamples, testSamples);\n\n    // train\n    var result = this.train(samples.train, {\n      rate: rate,\n      log: log,\n      iterations: iterations,\n      error: error,\n      cost: cost\n    });\n\n    return {\n      train: result,\n      test: this.test(samples.test)\n    }\n  }\n};\n\n// Built-in cost functions\nTrainer.cost = {\n  // Eq. 9\n  CROSS_ENTROPY: function(target, output)\n  {\n    var crossentropy = 0;\n    for (var i in output)\n      crossentropy -= (target[i] * Math.log(output[i]+1e-15)) + ((1-target[i]) * Math.log((1+1e-15)-output[i])); // +1e-15 is a tiny push away to avoid Math.log(0)\n    return crossentropy;\n  },\n  MSE: function(target, output)\n  {\n    var mse = 0;\n    for (var i in output)\n      mse += Math.pow(target[i] - output[i], 2);\n    return mse / output.length;\n  },\n  BINARY: function(target, output){\n    var misses = 0;\n    for (var i in output)\n      misses += Math.round(target[i] * 2) != Math.round(output[i] * 2);\n    return misses;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/synaptic/src/trainer.js\n// module id = 8\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// this module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 9\n// module chunks = 0","/*!\n * Vue.js v2.3.4\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\nvar _toString = Object.prototype.toString;\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      return JSON.stringify(a) === JSON.stringify(b)\n    } catch (e) {\n      // possible circular reference\n      return a === b\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName = (null); // work around flow check\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = typeof vm === 'string'\n      ? vm\n      : typeof vm === 'function' && vm.options\n        ? vm.options.name\n        : vm._isVue\n          ? vm.$options.name || vm.$options._componentTag\n          : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  var generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, info);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    } )); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) {\n        try {\n          cb.call(ctx);\n        } catch (e) {\n          handleError(e, ctx, 'nextTick');\n        }\n      } else if (_resolve) {\n        _resolve(ctx);\n      }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve, reject) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(target, key)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (Array.isArray(target) && typeof key === 'number') {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target ).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    valid = typeof value === expectedType.toLowerCase();\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var len = vnodes.length;\n  var res = new Array(len);\n  for (var i = 0; i < len; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        (last).text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && isDef(c.componentOptions)) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {\n        this$1.$off(event[i$1], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n      child.data && child.data.slot != null\n    ) {\n      var name = child.data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore whitespace\n  if (!defaultSlot.every(isWhitespace)) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return node.isComment || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // remove reference to DOM nodes (prevents leak)\n    vm.$options._parentElm = vm.$options._refElm = null;\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdateHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdateHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = {\n  key: 1,\n  ref: 1,\n  slot: 1\n};\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key] || config.isReservedAttr(key)) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  try {\n    return data.call(vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production') {\n      if (getter === undefined) {\n        warn(\n          (\"No getter function has been defined for computed property \\\"\" + key + \"\\\".\"),\n          vm\n        );\n        getter = noop;\n      }\n    }\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var result = Object.create(null);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && provideKey in source._provided) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || {});\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    data: data,\n    props: props,\n    children: children,\n    parent: context,\n    listeners: data.on || {},\n    injections: resolveInject(Ctor.options.inject, context),\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    vnode.functionalOptions = Ctor.options;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n// hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    } else if (vnode.data.keepAlive) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (isUndef(Ctor.cid)) {\n    Ctor = resolveAsyncComponent(Ctor, baseCtor, context);\n    if (Ctor === undefined) {\n      // return nothing if this is indeed an async component\n      // wait for the callback to trigger parent update.\n      return\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = componentVNodeHooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (isDef(vnode)) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && isUndef(child.ns)) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$vnode = vm.$options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nvar uid$1 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$1++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-init:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure(((vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$3 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$3)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$3);\nstateMixin(Vue$3);\neventsMixin(Vue$3);\nlifecycleMixin(Vue$3);\nrenderMixin(Vue$3);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return this\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, current, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        if (cachedNode !== current) {\n          pruneCacheEntry(cachedNode);\n        }\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, this._vnode, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$3);\n\nObject.defineProperty(Vue$3.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue$3.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode.ssrContext\n  }\n});\n\nVue$3.version = '2.3.4';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (isUndef(value)) {\n    return ''\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  var res = '';\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (isDef(value[i])) {\n        if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key &&\n    a.tag === b.tag &&\n    a.isComment === b.isComment &&\n    isDef(a.data) === isDef(b.data) &&\n    sameInputType(a, b)\n  )\n}\n\n// Some browsers do not support dynamically changing type for <input>\n// so they need to be treated as different nodes\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (isDef(parent)) {\n      if (isDef(ref)) {\n        if (ref.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n              typeof console !== 'undefined' &&\n              !bailed\n            ) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (isDef(vnode.tag)) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (isDef(vnode.parent)) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers && modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n  // check capture modifier\n  if (modifiers && modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers && modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers && modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n  var events;\n  if (modifiers && modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n  var newHandler = { value: value, modifiers: modifiers };\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\nfunction getAndRemoveAttr (el, name) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n        \"? \" + baseValueExpression + \".trim()\" +\n        \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: (\"\\\"\" + value + \"\\\"\"),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var modelRs = parseModel(value);\n  if (modelRs.idx === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return \"var $$exp = \" + (modelRs.exp) + \", $$idx = \" + (modelRs.idx) + \";\" +\n      \"if (!Array.isArray($$exp)){\" +\n        value + \"=\" + assignment + \"}\" +\n      \"else{$$exp.splice($$idx, 1, \" + assignment + \")}\"\n  }\n}\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar len;\nvar str;\nvar chr;\nvar index$1;\nvar expressionPos;\nvar expressionEndPos;\n\nfunction parseModel (val) {\n  str = val;\n  len = str.length;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    return {\n      exp: val,\n      idx: null\n    }\n  }\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.substring(0, expressionPos),\n    idx: val.substring(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    var dynamicType = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (tag === 'input' && dynamicType) {\n      warn$1(\n        \"<input :type=\\\"\" + dynamicType + \"\\\" v-model=\\\"\" + value + \"\\\">:\\n\" +\n        \"v-model does not support dynamic input types. Use v-if branches instead.\"\n      );\n    }\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n      \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n        trueValueBinding === 'true'\n          ? (\":(\" + value + \")\")\n          : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n      )\n  );\n  addHandler(el, CHECKBOX_RADIO_TOKEN,\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$c){$$i<0&&(\" + value + \"=$$a.concat($$v))}\" +\n      \"else{$$i>-1&&(\" + value + \"=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, CHECKBOX_RADIO_TOKEN, genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n    el,\n    value,\n    modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number || type === 'number') {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  if (once$$1) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((isDef(modifiers) && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (isDef(modifiers) && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likley wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text' || el.type === 'password') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$3.config.mustUseProp = mustUseProp;\nVue$3.config.isReservedTag = isReservedTag;\nVue$3.config.isReservedAttr = isReservedAttr;\nVue$3.config.getTagNamespace = getTagNamespace;\nVue$3.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$3.options.directives, platformDirectives);\nextend(Vue$3.options.components, platformComponents);\n\n// install platform patch function\nVue$3.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$3);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n    config.productionTip !== false &&\n    inBrowser && typeof console !== 'undefined'\n  ) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nfunction shouldDecode (content, encoded) {\n  var div = document.createElement('div');\n  div.innerHTML = \"<div a=\\\"\" + content + \"\\\">\";\n  return div.innerHTML.indexOf(encoded) > 0\n}\n\n// #3663\n// IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? shouldDecode('\\n', '&#10;') : false;\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/*  */\n\nvar decoder;\n\nfunction decode (html) {\n  decoder = decoder || document.createElement('div');\n  decoder.innerHTML = html;\n  return decoder.textContent\n}\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n/*!\n * HTML Parser By John Resig (ejohn.org)\n * Modified by Juriy \"kangax\" Zaytsev\n * Original code by Erik Arvidsson, Mozilla Public License\n * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js\n */\n\n// Regular Expressions for parsing tags and attributes\nvar singleAttrIdentifier = /([^\\s\"'<>/=]+)/;\nvar singleAttrAssign = /(?:=)/;\nvar singleAttrValues = [\n  // attr value double quotes\n  /\"([^\"]*)\"+/.source,\n  // attr value, single quotes\n  /'([^']*)'+/.source,\n  // attr value, no quotes\n  /([^\\s\"'=<>`]+)/.source\n];\nvar attribute = new RegExp(\n  '^\\\\s*' + singleAttrIdentifier.source +\n  '(?:\\\\s*(' + singleAttrAssign.source + ')' +\n  '\\\\s*(?:' + singleAttrValues.join('|') + '))?'\n);\n\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = '((?:' + ncname + '\\\\:)?' + ncname + ')';\nvar startTagOpen = new RegExp('^<' + qnameCapture);\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp('^<\\\\/' + qnameCapture + '[^>]*>');\nvar doctype = /^<!DOCTYPE [^>]+>/i;\nvar comment = /^<!--/;\nvar conditionalComment = /^<!\\[/;\n\nvar IS_REGEX_CAPTURING_BROKEN = false;\n'x'.replace(/x(.)?/g, function (m, g) {\n  IS_REGEX_CAPTURING_BROKEN = g === '';\n});\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10);/g;\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          continue\n        }\n      }\n\n      var text = (void 0), rest$1 = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest$1 = html.slice(textEnd);\n        while (\n          !endTag.test(rest$1) &&\n          !startTagOpen.test(rest$1) &&\n          !comment.test(rest$1) &&\n          !conditionalComment.test(rest$1)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest$1.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest$1 = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var endTagLength = 0;\n      var rest = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!--([\\s\\S]*?)-->/g, '$1')\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest.length;\n      html = rest;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || tagName === 'html' && lastTag === 'head' || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778\n      if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('\"\"') === -1) {\n        if (args[3] === '') { delete args[3]; }\n        if (args[4] === '') { delete args[4]; }\n        if (args[5] === '') { delete args[5]; }\n      }\n      var value = args[3] || args[4] || args[5] || '';\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(\n          value,\n          options.shouldDecodeNewlines\n        )\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n    }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push(JSON.stringify(text.slice(lastIndex)));\n  }\n  return tokens.join('+')\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /(.*?)\\s+(?:in|of)\\s+(.*)/;\nvar forIteratorRE = /\\((\\{[^}]*\\}|[^,]*),([^,]*)(?:,([^,]*))?\\)/;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n  platformGetTagNamespace = options.getTagNamespace || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformIsPreTag = options.isPreTag || no;\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function endPre (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = {\n        type: 1,\n        tag: tag,\n        attrsList: attrs,\n        attrsMap: makeAttrsMap(attrs),\n        parent: currentParent,\n        children: []\n      };\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        preTransforms[i](element, options);\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else {\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        processKey(element);\n\n        // determine whether this is a plain element after\n        // removing structural attributes\n        element.plain = !element.key && !attrs.length;\n\n        processRef(element);\n        processSlot(element);\n        processComponent(element);\n        for (var i$1 = 0; i$1 < transforms.length; i$1++) {\n          transforms[i$1](element, options);\n        }\n        processAttrs(element);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"';(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        endPre(element);\n      }\n      // apply post-transforms\n      for (var i$2 = 0; i$2 < postTransforms.length; i$2++) {\n        postTransforms[i$2](element, options);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      endPre(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var expression;\n        if (!inVPre && text !== ' ' && (expression = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: expression,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {\n      warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var inMatch = exp.match(forAliasRE);\n    if (!inMatch) {\n      process.env.NODE_ENV !== 'production' && warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n      return\n    }\n    el.for = inMatch[2].trim();\n    var alias = inMatch[1].trim();\n    var iteratorMatch = alias.match(forIteratorRE);\n    if (iteratorMatch) {\n      el.alias = iteratorMatch[1].trim();\n      el.iterator1 = iteratorMatch[2].trim();\n      if (iteratorMatch[3]) {\n        el.iterator2 = iteratorMatch[3].trim();\n      }\n    } else {\n      el.alias = alias;\n    }\n  }\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n    }\n    if (el.tag === 'template') {\n      el.slotScope = getAndRemoveAttr(el, 'scope');\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var expression = parseText(value, delimiters);\n        if (expression) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      walkThroughConditionsBlocks(node.ifConditions, isInFor);\n    }\n  }\n}\n\nfunction walkThroughConditionsBlocks (conditionBlocks, isInFor) {\n  for (var i = 1, len = conditionBlocks.length; i < len; i++) {\n    markStaticRoots(conditionBlocks[i].block, isInFor);\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^\\s*[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?']|\\[\".*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*\\s*$/;\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative,\n  warn\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    var handler = events[name];\n    // #5330: warn click.right, since right clicks do not actually fire click events.\n    if (process.env.NODE_ENV !== 'production' &&\n      name === 'click' &&\n      handler && handler.modifiers && handler.modifiers.right\n    ) {\n      warn(\n        \"Use \\\"contextmenu\\\" instead of \\\"click.right\\\" since right clicks \" +\n        \"do not actually fire \\\"click\\\" events.\"\n      );\n    }\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, handler)) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    return isMethodPath || isFunctionExpression\n      ? handler.value\n      : (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? handler.value + '($event)'\n      : isFunctionExpression\n        ? (\"(\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var alias = keyCodes[key];\n  return (\"_k($event.keyCode,\" + (JSON.stringify(key)) + (alias ? ',' + JSON.stringify(alias) : '') + \")\")\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + (dir.modifiers && dir.modifiers.prop ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n// configurable state\nvar warn$3;\nvar transforms$1;\nvar dataGenFns;\nvar platformDirectives$1;\nvar isPlatformReservedTag$1;\nvar staticRenderFns;\nvar onceCount;\nvar currentOptions;\n\nfunction generate (\n  ast,\n  options\n) {\n  // save previous staticRenderFns so generate calls can be nested\n  var prevStaticRenderFns = staticRenderFns;\n  var currentStaticRenderFns = staticRenderFns = [];\n  var prevOnceCount = onceCount;\n  onceCount = 0;\n  currentOptions = options;\n  warn$3 = options.warn || baseWarn;\n  transforms$1 = pluckModuleFunction(options.modules, 'transformCode');\n  dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  platformDirectives$1 = options.directives || {};\n  isPlatformReservedTag$1 = options.isReservedTag || no;\n  var code = ast ? genElement(ast) : '_c(\"div\")';\n  staticRenderFns = prevStaticRenderFns;\n  onceCount = prevOnceCount;\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: currentStaticRenderFns\n  }\n}\n\nfunction genElement (el) {\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.tag === 'template' && !el.slotTarget) {\n    return genChildren(el) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el);\n    } else {\n      var data = el.plain ? undefined : genData(el);\n\n      var children = el.inlineTemplate ? null : genChildren(el, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < transforms$1.length; i++) {\n      code = transforms$1[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el) {\n  el.staticProcessed = true;\n  staticRenderFns.push((\"with(this){return \" + (genElement(el)) + \"}\"));\n  return (\"_m(\" + (staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && warn$3(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el)\n    }\n    return (\"_o(\" + (genElement(el)) + \",\" + (onceCount++) + (key ? (\",\" + key) : \"\") + \")\")\n  } else {\n    return genStatic(el)\n  }\n}\n\nfunction genIf (el) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice())\n}\n\nfunction genIfConditions (conditions) {\n  if (!conditions.length) {\n    return '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return el.once ? genOnce(el) : genElement(el)\n  }\n}\n\nfunction genFor (el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    maybeComponent(el) && el.tag !== 'slot' && el.tag !== 'template' && !el.key\n  ) {\n    warn$3(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genElement(el)) +\n    '})'\n}\n\nfunction genData (el) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < dataGenFns.length; i++) {\n    data += dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false, warn$3)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true, warn$3)) + \",\";\n  }\n  // slot target\n  if (el.slotTarget) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  return data\n}\n\nfunction genDirectives (el) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = platformDirectives$1[dir.name] || baseDirectives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, warn$3);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length > 1 || ast.type !== 1\n  )) {\n    warn$3('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, currentOptions);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (slots) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) { return genScopedSlot(key, slots[key]); }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (key, el) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el)\n  }\n  return \"{key:\" + key + \",fn:function(\" + (String(el.attrsMap.scope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? genChildren(el) || 'void 0'\n      : genElement(el)) + \"}}\"\n}\n\nfunction genForScopedSlot (key, el) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el)) +\n    '})'\n}\n\nfunction genChildren (el, checkSkip) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      return genElement(el$1)\n    }\n    var normalizationType = checkSkip ? getNormalizationType(children) : 0;\n    return (\"[\" + (children.map(genNode).join(',')) + \"]\" + (normalizationType ? (\",\" + normalizationType) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (children) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction maybeComponent (el) {\n  return !isPlatformReservedTag$1(el.tag)\n}\n\nfunction genNode (node) {\n  if (node.type === 1) {\n    return genElement(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genSlot (el) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (componentName, el) {\n  var children = el.inlineTemplate ? null : genChildren(el, true);\n  return (\"_c(\" + componentName + \",\" + (genData(el)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// check valid identifier for v-for\nvar identRE = /[A-Za-z_$][\\w$]*/;\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (ident, type, text, errors) {\n  if (typeof ident === 'string' && !identRE.test(ident)) {\n    errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n      );\n    } else {\n      errors.push((\"invalid expression: \" + (text.trim())));\n    }\n  }\n}\n\n/*  */\n\nfunction baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  optimize(ast, options);\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n}\n\nfunction makeFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompiler (baseOptions) {\n  var functionCompileCache = Object.create(null);\n\n  function compile (\n    template,\n    options\n  ) {\n    var finalOptions = Object.create(baseOptions);\n    var errors = [];\n    var tips = [];\n    finalOptions.warn = function (msg, tip$$1) {\n      (tip$$1 ? tips : errors).push(msg);\n    };\n\n    if (options) {\n      // merge custom modules\n      if (options.modules) {\n        finalOptions.modules = (baseOptions.modules || []).concat(options.modules);\n      }\n      // merge custom directives\n      if (options.directives) {\n        finalOptions.directives = extend(\n          Object.create(baseOptions.directives),\n          options.directives\n        );\n      }\n      // copy other options\n      for (var key in options) {\n        if (key !== 'modules' && key !== 'directives') {\n          finalOptions[key] = options[key];\n        }\n      }\n    }\n\n    var compiled = baseCompile(template, finalOptions);\n    if (process.env.NODE_ENV !== 'production') {\n      errors.push.apply(errors, detectErrors(compiled.ast));\n    }\n    compiled.errors = errors;\n    compiled.tips = tips;\n    return compiled\n  }\n\n  function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = options || {};\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (functionCompileCache[key]) {\n      return functionCompileCache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = makeFunction(compiled.render, fnGenErrors);\n    var l = compiled.staticRenderFns.length;\n    res.staticRenderFns = new Array(l);\n    for (var i = 0; i < l; i++) {\n      res.staticRenderFns[i] = makeFunction(compiled.staticRenderFns[i], fnGenErrors);\n    }\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (functionCompileCache[key] = res)\n  }\n\n  return {\n    compile: compile,\n    compileToFunctions: compileToFunctions\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var expression = parseText(staticClass, options.delimiters);\n    if (expression) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData$1\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var expression = parseText(staticStyle, options.delimiters);\n      if (expression) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$2 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$2\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\nvar ref$1 = createCompiler(baseOptions);\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue$3.prototype.$mount;\nVue$3.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        delimiters: options.delimiters\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure(((this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue$3.compile = compileToFunctions;\n\nexport default Vue$3;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.esm.js\n// module id = 10\n// module chunks = 0","var core = module.exports = {version: '2.4.0'};\nif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_core.js\n// module id = 11\n// module chunks = 0","module.exports = function(exec){\n  try {\n    return !!exec();\n  } catch(e){\n    return true;\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_fails.js\n// module id = 12\n// module chunks = 0","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_global.js\n// module id = 13\n// module chunks = 0","var anObject       = require('./_an-object')\n  , IE8_DOM_DEFINE = require('./_ie8-dom-define')\n  , toPrimitive    = require('./_to-primitive')\n  , dP             = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes){\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if(IE8_DOM_DEFINE)try {\n    return dP(O, P, Attributes);\n  } catch(e){ /* empty */ }\n  if('get' in Attributes || 'set' in Attributes)throw TypeError('Accessors not supported!');\n  if('value' in Attributes)O[P] = Attributes.value;\n  return O;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_object-dp.js\n// module id = 14\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 15\n// module chunks = 0","module.exports = { \"default\": require(\"core-js/library/fn/object/define-property\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-runtime/core-js/object/define-property.js\n// module id = 27\n// module chunks = 0","require('../../modules/es6.object.define-property');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function defineProperty(it, key, desc){\n  return $Object.defineProperty(it, key, desc);\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/fn/object/define-property.js\n// module id = 28\n// module chunks = 0","module.exports = function(it){\n  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_a-function.js\n// module id = 29\n// module chunks = 0","var isObject = require('./_is-object');\nmodule.exports = function(it){\n  if(!isObject(it))throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_an-object.js\n// module id = 30\n// module chunks = 0","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function(fn, that, length){\n  aFunction(fn);\n  if(that === undefined)return fn;\n  switch(length){\n    case 1: return function(a){\n      return fn.call(that, a);\n    };\n    case 2: return function(a, b){\n      return fn.call(that, a, b);\n    };\n    case 3: return function(a, b, c){\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function(/* ...args */){\n    return fn.apply(that, arguments);\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ctx.js\n// module id = 31\n// module chunks = 0","var isObject = require('./_is-object')\n  , document = require('./_global').document\n  // in old IE typeof document.createElement is 'object'\n  , is = isObject(document) && isObject(document.createElement);\nmodule.exports = function(it){\n  return is ? document.createElement(it) : {};\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_dom-create.js\n// module id = 32\n// module chunks = 0","var global    = require('./_global')\n  , core      = require('./_core')\n  , ctx       = require('./_ctx')\n  , hide      = require('./_hide')\n  , PROTOTYPE = 'prototype';\n\nvar $export = function(type, name, source){\n  var IS_FORCED = type & $export.F\n    , IS_GLOBAL = type & $export.G\n    , IS_STATIC = type & $export.S\n    , IS_PROTO  = type & $export.P\n    , IS_BIND   = type & $export.B\n    , IS_WRAP   = type & $export.W\n    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n    , expProto  = exports[PROTOTYPE]\n    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n    , key, own, out;\n  if(IS_GLOBAL)source = name;\n  for(key in source){\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if(own && key in exports)continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? ctx(out, global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function(C){\n      var F = function(a, b, c){\n        if(this instanceof C){\n          switch(arguments.length){\n            case 0: return new C;\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if(IS_PROTO){\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if(type & $export.R && expProto && !expProto[key])hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library` \nmodule.exports = $export;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_export.js\n// module id = 33\n// module chunks = 0","var dP         = require('./_object-dp')\n  , createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function(object, key, value){\n  return dP.f(object, key, createDesc(1, value));\n} : function(object, key, value){\n  object[key] = value;\n  return object;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_hide.js\n// module id = 34\n// module chunks = 0","module.exports = !require('./_descriptors') && !require('./_fails')(function(){\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', {get: function(){ return 7; }}).a != 7;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_ie8-dom-define.js\n// module id = 35\n// module chunks = 0","module.exports = function(bitmap, value){\n  return {\n    enumerable  : !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable    : !(bitmap & 4),\n    value       : value\n  };\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_property-desc.js\n// module id = 36\n// module chunks = 0","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function(it, S){\n  if(!isObject(it))return it;\n  var fn, val;\n  if(S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it)))return val;\n  if(!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it)))return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/_to-primitive.js\n// module id = 37\n// module chunks = 0","var $export = require('./_export');\n// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)\n$export($export.S + $export.F * !require('./_descriptors'), 'Object', {defineProperty: require('./_object-dp').f});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/core-js/library/modules/es6.object.define-property.js\n// module id = 38\n// module chunks = 0","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lodash.js\n// module id = 40\n// module chunks = 0","// import\nvar Layer   = require('./layer')\n,   Network = require('./network')\n,   Trainer = require('./trainer')\n\n/*******************************************************************************************\n                                        ARCHITECT\n*******************************************************************************************/\n\n// Collection of useful built-in architectures\nvar Architect = {\n\n  // Multilayer Perceptron\n  Perceptron: function Perceptron() {\n\n    var args = Array.prototype.slice.call(arguments); // convert arguments to Array\n    if (args.length < 3)\n      throw new Error(\"not enough layers (minimum 3) !!\");\n\n    var inputs = args.shift(); // first argument\n    var outputs = args.pop(); // last argument\n    var layers = args; // all the arguments in the middle\n\n    var input = new Layer(inputs);\n    var hidden = [];\n    var output = new Layer(outputs);\n\n    var previous = input;\n\n    // generate hidden layers\n    for (var level in layers) {\n      var size = layers[level];\n      var layer = new Layer(size);\n      hidden.push(layer);\n      previous.project(layer);\n      previous = layer;\n    }\n    previous.project(output);\n\n    // set layers of the neural network\n    this.set({\n      input: input,\n      hidden: hidden,\n      output: output\n    });\n\n    // trainer for the network\n    this.trainer = new Trainer(this);\n  },\n\n  // Multilayer Long Short-Term Memory\n  LSTM: function LSTM() {\n\n    var args = Array.prototype.slice.call(arguments); // convert arguments to array\n    if (args.length < 3)\n      throw new Error(\"not enough layers (minimum 3) !!\");\n\n    var last = args.pop();\n    var option = {\n      peepholes: Layer.connectionType.ALL_TO_ALL,\n      hiddenToHidden: false,\n      outputToHidden: false,\n      outputToGates: false,\n      inputToOutput: true,\n    };\n    if (typeof last != 'number') {\n      var outputs = args.pop();\n      if (last.hasOwnProperty('peepholes'))\n        option.peepholes = last.peepholes;\n      if (last.hasOwnProperty('hiddenToHidden'))\n        option.hiddenToHidden = last.hiddenToHidden;\n      if (last.hasOwnProperty('outputToHidden'))\n        option.outputToHidden = last.outputToHidden;\n      if (last.hasOwnProperty('outputToGates'))\n        option.outputToGates = last.outputToGates;\n      if (last.hasOwnProperty('inputToOutput'))\n        option.inputToOutput = last.inputToOutput;\n    } else\n      var outputs = last;\n\n    var inputs = args.shift();\n    var layers = args;\n\n    var inputLayer = new Layer(inputs);\n    var hiddenLayers = [];\n    var outputLayer = new Layer(outputs);\n\n    var previous = null;\n\n    // generate layers\n    for (var layer in layers) {\n      // generate memory blocks (memory cell and respective gates)\n      var size = layers[layer];\n\n      var inputGate = new Layer(size).set({\n        bias: 1\n      });\n      var forgetGate = new Layer(size).set({\n        bias: 1\n      });\n      var memoryCell = new Layer(size);\n      var outputGate = new Layer(size).set({\n        bias: 1\n      });\n\n      hiddenLayers.push(inputGate);\n      hiddenLayers.push(forgetGate);\n      hiddenLayers.push(memoryCell);\n      hiddenLayers.push(outputGate);\n\n      // connections from input layer\n      var input = inputLayer.project(memoryCell);\n      inputLayer.project(inputGate);\n      inputLayer.project(forgetGate);\n      inputLayer.project(outputGate);\n\n      // connections from previous memory-block layer to this one\n      if (previous != null) {\n        var cell = previous.project(memoryCell);\n        previous.project(inputGate);\n        previous.project(forgetGate);\n        previous.project(outputGate);\n      }\n\n      // connections from memory cell\n      var output = memoryCell.project(outputLayer);\n\n      // self-connection\n      var self = memoryCell.project(memoryCell);\n\n      // hidden to hidden recurrent connection\n      if (option.hiddenToHidden)\n        memoryCell.project(memoryCell, Layer.connectionType.ALL_TO_ELSE);\n\n      // out to hidden recurrent connection\n      if (option.outputToHidden)\n        outputLayer.project(memoryCell);\n\n      // out to gates recurrent connection\n      if (option.outputToGates) {\n        outputLayer.project(inputGate);\n        outputLayer.project(outputGate);\n        outputLayer.project(forgetGate);\n      }\n\n      // peepholes\n      memoryCell.project(inputGate, option.peepholes);\n      memoryCell.project(forgetGate, option.peepholes);\n      memoryCell.project(outputGate, option.peepholes);\n\n      // gates\n      inputGate.gate(input, Layer.gateType.INPUT);\n      forgetGate.gate(self, Layer.gateType.ONE_TO_ONE);\n      outputGate.gate(output, Layer.gateType.OUTPUT);\n      if (previous != null)\n        inputGate.gate(cell, Layer.gateType.INPUT);\n\n      previous = memoryCell;\n    }\n\n    // input to output direct connection\n    if (option.inputToOutput)\n      inputLayer.project(outputLayer);\n\n    // set the layers of the neural network\n    this.set({\n      input: inputLayer,\n      hidden: hiddenLayers,\n      output: outputLayer\n    });\n\n    // trainer\n    this.trainer = new Trainer(this);\n  },\n\n  // Liquid State Machine\n  Liquid: function Liquid(inputs, hidden, outputs, connections, gates) {\n\n    // create layers\n    var inputLayer = new Layer(inputs);\n    var hiddenLayer = new Layer(hidden);\n    var outputLayer = new Layer(outputs);\n\n    // make connections and gates randomly among the neurons\n    var neurons = hiddenLayer.neurons();\n    var connectionList = [];\n\n    for (var i = 0; i < connections; i++) {\n      // connect two random neurons\n      var from = Math.random() * neurons.length | 0;\n      var to = Math.random() * neurons.length | 0;\n      var connection = neurons[from].project(neurons[to]);\n      connectionList.push(connection);\n    }\n\n    for (var j = 0; j < gates; j++) {\n      // pick a random gater neuron\n      var gater = Math.random() * neurons.length | 0;\n      // pick a random connection to gate\n      var connection = Math.random() * connectionList.length | 0;\n      // let the gater gate the connection\n      neurons[gater].gate(connectionList[connection]);\n    }\n\n    // connect the layers\n    inputLayer.project(hiddenLayer);\n    hiddenLayer.project(outputLayer);\n\n    // set the layers of the network\n    this.set({\n      input: inputLayer,\n      hidden: [hiddenLayer],\n      output: outputLayer\n    });\n\n    // trainer\n    this.trainer = new Trainer(this);\n  },\n\n  Hopfield: function Hopfield(size) {\n\n    var inputLayer = new Layer(size);\n    var outputLayer = new Layer(size);\n\n    inputLayer.project(outputLayer, Layer.connectionType.ALL_TO_ALL);\n\n    this.set({\n      input: inputLayer,\n      hidden: [],\n      output: outputLayer\n    });\n\n    var trainer = new Trainer(this);\n\n    var proto = Architect.Hopfield.prototype;\n\n    proto.learn = proto.learn || function(patterns)\n    {\n      var set = [];\n      for (var p in patterns)\n        set.push({\n          input: patterns[p],\n          output: patterns[p]\n        });\n\n      return trainer.train(set, {\n        iterations: 500000,\n        error: .00005,\n        rate: 1\n      });\n    };\n\n    proto.feed = proto.feed || function(pattern)\n    {\n      var output = this.activate(pattern);\n\n      var pattern = [];\n      for (var i in output)\n        pattern[i] = output[i] > .5 ? 1 : 0;\n\n      return pattern;\n    }\n  }\n}\n\n// Extend prototype chain (so every architectures is an instance of Network)\nfor (var architecture in Architect) {\n  Architect[architecture].prototype = new Network();\n  Architect[architecture].prototype.constructor = Architect[architecture];\n}\n\n// export\nif (module) module.exports = Architect;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/synaptic/src/architect.js\n// module id = 41\n// module chunks = 0","var Synaptic = {\n    Neuron: require('./neuron'),\n    Layer: require('./layer'),\n    Network: require('./network'),\n    Trainer: require('./trainer'),\n    Architect: require('./architect')\n};\n\n// CommonJS & AMD\nif (typeof define !== 'undefined' && define.amd)\n{\n  define([], function(){ return Synaptic });\n}\n\n// Node.js\nif (typeof module !== 'undefined' && module.exports)\n{\n  module.exports = Synaptic;\n}\n\n// Browser\nif (typeof window == 'object')\n{\n  (function(){\n    var oldSynaptic = window['synaptic'];\n    Synaptic.ninja = function(){\n      window['synaptic'] = oldSynaptic;\n      return Synaptic;\n    };\n  })();\n\n  window['synaptic'] = Synaptic;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/synaptic/src/synaptic.js\n// module id = 42\n// module chunks = 0","/**\n  * vue-router v2.6.0\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (process.env.NODE_ENV !== 'production' && !condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (_, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    // directly use parent context's createElement() function\n    // so that components rendered by router-view can resolve named slots\n    var h = parent.$createElement;\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent && parent._routerRoot !== parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // attach instance registration hook\n    // this will be called in the instance's injected lifecycle hooks\n    data.registerRouteInstance = function (vm, val) {\n      // val could be undefined for unregistration\n      var current = matched.instances[name];\n      if (\n        (val && current !== vm) ||\n        (!val && current === vm)\n      ) {\n        matched.instances[name] = val;\n      }\n    }\n\n    // also regiseter instance in prepatch hook\n    // in case the same component instance is reused across different routes\n    ;(data.hook || (data.hook = {})).prepatch = function (_, vnode) {\n      matched.instances[name] = vnode.componentInstance;\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false,\n          \"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", \" +\n          \"expecting an object, function or boolean.\"\n        );\n      }\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more conformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery,\n  _parseQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  var parse = _parseQuery || parseQuery;\n  var parsedQuery;\n  try {\n    parsedQuery = parse(query || '');\n  } catch (e) {\n    process.env.NODE_ENV !== 'production' && warn(false, e.message);\n    parsedQuery = {};\n  }\n  for (var key in extraQuery) {\n    var val = extraQuery[key];\n    parsedQuery[key] = Array.isArray(val) ? val.slice() : val;\n  }\n  return parsedQuery\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom,\n  router\n) {\n  var stringifyQuery$$1 = router && router.options.stringifyQuery;\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location, stringifyQuery$$1),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom, stringifyQuery$$1);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (\n  ref,\n  _stringifyQuery\n) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  var stringify = _stringifyQuery || stringifyQuery;\n  return (path || '/') + stringify(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) {\n    var aVal = a[key];\n    var bVal = b[key];\n    // check nested equality\n    if (typeof aVal === 'object' && typeof bVal === 'object') {\n      return isObjectEqual(aVal, bVal)\n    }\n    return String(aVal) === String(bVal)\n  })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    exactActiveClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n\n    var classes = {};\n    var globalActiveClass = router.options.linkActiveClass;\n    var globalExactActiveClass = router.options.linkExactActiveClass;\n    // Support global empty active class\n    var activeClassFallback = globalActiveClass == null\n            ? 'router-link-active'\n            : globalActiveClass;\n    var exactActiveClassFallback = globalExactActiveClass == null\n            ? 'router-link-exact-active'\n            : globalExactActiveClass;\n    var activeClass = this.activeClass == null\n            ? activeClassFallback\n            : this.activeClass;\n    var exactActiveClass = this.exactActiveClass == null\n            ? exactActiveClassFallback\n            : this.exactActiveClass;\n    var compareTarget = location.path\n      ? createRoute(null, location, null, router)\n      : route;\n\n    classes[exactActiveClass] = isSameRoute(current, compareTarget);\n    classes[activeClass] = this.exact\n      ? classes[exactActiveClass]\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.currentTarget && e.currentTarget.getAttribute) {\n    var target = e.currentTarget.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  var isDef = function (v) { return v !== undefined; };\n\n  var registerInstance = function (vm, callVal) {\n    var i = vm.$options._parentVnode;\n    if (isDef(i) && isDef(i = i.data) && isDef(i = i.registerRouteInstance)) {\n      i(vm, callVal);\n    }\n  };\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (isDef(this.$options.router)) {\n        this._routerRoot = this;\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      } else {\n        this._routerRoot = (this.$parent && this.$parent._routerRoot) || this;\n      }\n      registerInstance(this, this);\n    },\n    destroyed: function destroyed () {\n      registerInstance(this);\n    }\n  });\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this._routerRoot._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this._routerRoot._route }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  var firstChar = relative.charAt(0);\n  if (firstChar === '/') {\n    return relative\n  }\n\n  if (firstChar === '?' || firstChar === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '..') {\n      stack.pop();\n    } else if (segment !== '.') {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (index$1(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!index$1(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (index$1(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathList,\n  oldPathMap,\n  oldNameMap\n) {\n  // the path list is used to control path matching priority\n  var pathList = oldPathList || [];\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathList, pathMap, nameMap, route);\n  });\n\n  // ensure wildcard routes are always at the end\n  for (var i = 0, l = pathList.length; i < l; i++) {\n    if (pathList[i] === '*') {\n      pathList.push(pathList.splice(i, 1)[0]);\n      l--;\n      i--;\n    }\n  }\n\n  return {\n    pathList: pathList,\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathList,\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var normalizedPath = normalizePath(path, parent);\n  var pathToRegexpOptions = route.pathToRegexpOptions || {};\n\n  if (typeof route.caseSensitive === 'boolean') {\n    pathToRegexpOptions.sensitive = route.caseSensitive;\n  }\n\n  var record = {\n    path: normalizedPath,\n    regex: compileRouteRegex(normalizedPath, pathToRegexpOptions),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named, does not redirect and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && !route.redirect && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathList, pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    var aliases = Array.isArray(route.alias)\n      ? route.alias\n      : [route.alias];\n\n    aliases.forEach(function (alias) {\n      var aliasRoute = {\n        path: alias,\n        children: route.children\n      };\n      addRouteRecord(\n        pathList,\n        pathMap,\n        nameMap,\n        aliasRoute,\n        parent,\n        record.path || '/' // matchAs\n      );\n    });\n  }\n\n  if (!pathMap[record.path]) {\n    pathList.push(record.path);\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction compileRouteRegex (path, pathToRegexpOptions) {\n  var regex = index(path, [], pathToRegexpOptions);\n  if (process.env.NODE_ENV !== 'production') {\n    var keys = {};\n    regex.keys.forEach(function (key) {\n      warn(!keys[key.name], (\"Duplicate param keys in route with path: \\\"\" + path + \"\\\"\"));\n      keys[key.name] = true;\n    });\n  }\n  return regex\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\n/*  */\n\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append,\n  router\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched.length) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : basePath;\n\n  var query = resolveQuery(\n    parsedPath.query,\n    next.query,\n    router && router.options.parseQuery\n  );\n\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\n\nfunction createMatcher (\n  routes,\n  router\n) {\n  var ref = createRouteMap(routes);\n  var pathList = ref.pathList;\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathList, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute, false, router);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      if (!record) { return _createRoute(null, location) }\n      var paramNames = record.regex.keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var i = 0; i < pathList.length; i++) {\n        var path = pathList[i];\n        var record$1 = pathMap[path];\n        if (matchRoute(record$1.regex, location.path, location.params)) {\n          return _createRoute(record$1, location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location, null, router))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(\n          false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n        );\n      }\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      }\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom, router)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  regex,\n  path,\n  params\n) {\n  var m = path.match(regex);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = regex.keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) {\n      params[key.name] = val;\n    }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        var offset = shouldScroll.offset && typeof shouldScroll.offset === 'object' ? shouldScroll.offset : {};\n        offset = normalizeOffset(offset);\n        position = getElementPosition(el, offset);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el, offset) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left - offset.x,\n    y: elRect.top - docRect.top - offset.y\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction normalizeOffset (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : 0,\n    y: isNumber(obj.y) ? obj.y : 0\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n  this.readyErrorCbs = [];\n  this.errorCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb, errorCb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n    if (errorCb) {\n      this.readyErrorCbs.push(errorCb);\n    }\n  }\n};\n\nHistory.prototype.onError = function onError (errorCb) {\n  this.errorCbs.push(errorCb);\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) { cb(route); });\n    }\n  }, function (err) {\n    if (onAbort) {\n      onAbort(err);\n    }\n    if (err && !this$1.ready) {\n      this$1.ready = true;\n      this$1.readyErrorCbs.forEach(function (cb) { cb(err); });\n    }\n  });\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function (err) {\n    if (isError(err)) {\n      if (this$1.errorCbs.length) {\n        this$1.errorCbs.forEach(function (cb) { cb(err); });\n      } else {\n        warn(false, 'uncaught error during route navigation:');\n        console.error(err);\n      }\n    }\n    onAbort && onAbort(err);\n  };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    try {\n      hook(route, current, function (to) {\n        if (to === false || isError(to)) {\n          // next(false) -> abort navigation, ensure current URL\n          this$1.ensureURL(true);\n          abort(to);\n        } else if (\n          typeof to === 'string' ||\n          (typeof to === 'object' && (\n            typeof to.path === 'string' ||\n            typeof to.name === 'string'\n          ))\n        ) {\n          // next('/') or next({ path: '/' }) -> redirect\n          abort();\n          if (typeof to === 'object' && to.replace) {\n            this$1.replace(to);\n          } else {\n            this$1.push(to);\n          }\n        } else {\n          // confirm transition and pass on the value\n          next(to);\n        }\n      });\n    } catch (e) {\n      abort(e);\n    }\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    var queue = enterGuards.concat(this$1.router.resolveHooks);\n    runQueue(queue, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n      // strip full URL origin\n      base = base.replace(/^https?:\\/\\/[^\\/]+/, '');\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  if (instance) {\n    return function boundRouteGuard () {\n      return guard.apply(instance, arguments)\n    }\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return function (to, from, next) {\n    var hasAsync = false;\n    var pending = 0;\n    var error = null;\n\n    flatMapComponents(matched, function (def, _, match, key) {\n      // if it's a function and doesn't have cid attached,\n      // assume it's an async component resolve function.\n      // we are not using Vue's default async resolving mechanism because\n      // we want to halt the navigation until the incoming component has been\n      // resolved.\n      if (typeof def === 'function' && def.cid === undefined) {\n        hasAsync = true;\n        pending++;\n\n        var resolve = once(function (resolvedDef) {\n          // save resolved on async factory in case it's used elsewhere\n          def.resolved = typeof resolvedDef === 'function'\n            ? resolvedDef\n            : _Vue.extend(resolvedDef);\n          match.components[key] = resolvedDef;\n          pending--;\n          if (pending <= 0) {\n            next();\n          }\n        });\n\n        var reject = once(function (reason) {\n          var msg = \"Failed to resolve async component \" + key + \": \" + reason;\n          process.env.NODE_ENV !== 'production' && warn(false, msg);\n          if (!error) {\n            error = isError(reason)\n              ? reason\n              : new Error(msg);\n            next(error);\n          }\n        });\n\n        var res;\n        try {\n          res = def(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        if (res) {\n          if (typeof res.then === 'function') {\n            res.then(resolve, reject);\n          } else {\n            // new syntax in Vue 2.3\n            var comp = res.component;\n            if (comp && typeof comp.then === 'function') {\n              comp.then(resolve, reject);\n            }\n          }\n        }\n      }\n    });\n\n    if (!hasAsync) { next(); }\n  }\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    if (called) { return }\n    called = true;\n    return fn.apply(this, args)\n  }\n}\n\nfunction isError (err) {\n  return Object.prototype.toString.call(err).indexOf('Error') > -1\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      var current = this$1.current;\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    var ref = this;\n    var fromRoute = ref.current;\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, fromRoute, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var href = window.location.href;\n  var i = href.indexOf('#');\n  var base = i >= 0 ? href.slice(0, i) : href;\n  window.location.replace((base + \"#\" + path));\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.resolveHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || [], this);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState && options.fallback !== false;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  return registerHook(this.beforeHooks, fn)\n};\n\nVueRouter.prototype.beforeResolve = function beforeResolve (fn) {\n  return registerHook(this.resolveHooks, fn)\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  return registerHook(this.afterHooks, fn)\n};\n\nVueRouter.prototype.onReady = function onReady (cb, errorCb) {\n  this.history.onReady(cb, errorCb);\n};\n\nVueRouter.prototype.onError = function onError (errorCb) {\n  this.history.onError(errorCb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? to.matched\n      ? to\n      : this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(\n    to,\n    current || this.history.current,\n    append,\n    this\n  );\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction registerHook (list, fn) {\n  list.push(fn);\n  return function () {\n    var i = list.indexOf(fn);\n    if (i > -1) { list.splice(i, 1); }\n  }\n}\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.6.0';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.esm.js\n// module id = 48\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 49\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 50\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 51\n// module chunks = 0"],"sourceRoot":""}